[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_availability_zones.available: Reading...[0m[0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_iam_policy_document.vault_kms_unseal: Reading...[0m[0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_iam_policy_document.assume_role_vault_ec2: Reading...[0m[0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_caller_identity.current_aws_account: Reading...[0m[0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_iam_policy_document.vault_aws_auth: Reading...[0m[0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_iam_policy_document.assume_role_vault_ec2: Read complete after 0s [id=1903849331][0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_iam_policy_document.vault_kms_unseal: Read complete after 0s [id=1138302356][0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_iam_policy_document.vault_aws_auth: Read complete after 0s [id=3107894398][0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_iam_policy_document.vault_s3_snapshot_bucket: Reading...[0m[0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_iam_policy_document.raft_auto_join: Reading...[0m[0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_ami.ubuntu: Reading...[0m[0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_iam_policy_document.vault_s3_snapshot_bucket: Read complete after 0s [id=1157349874][0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_iam_policy_document.raft_auto_join: Read complete after 0s [id=4279609700][0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_availability_zones.available: Read complete after 0s [id=eu-west-1][0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_ami.ubuntu: Read complete after 0s [id=ami-0f29c8402f8cce65c][0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_caller_identity.current_aws_account: Reading...[0m[0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_iam_policy_document.vault_kms_unseal: Reading...[0m[0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_iam_policy_document.vault_s3_snapshot_bucket: Reading...[0m[0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_iam_policy_document.raft_auto_join: Reading...[0m[0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_iam_policy_document.assume_role_vault_ec2: Reading...[0m[0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_iam_policy_document.vault_s3_snapshot_bucket: Read complete after 0s [id=1157349874][0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_iam_policy_document.vault_kms_unseal: Read complete after 0s [id=1138302356][0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_iam_policy_document.raft_auto_join: Read complete after 0s [id=4279609700][0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_iam_policy_document.assume_role_vault_ec2: Read complete after 0s [id=1903849331][0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_availability_zones.available: Reading...[0m[0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_iam_policy_document.vault_aws_auth: Reading...[0m[0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_ami.ubuntu: Reading...[0m[0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_iam_policy_document.vault_aws_auth: Read complete after 0s [id=3107894398][0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_availability_zones.available: Read complete after 0s [id=us-east-2][0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_caller_identity.current_aws_account: Read complete after 0s [id=925007469123][0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_iam_policy_document.vault_aws_secret: Reading...[0m[0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_iam_policy_document.vault_aws_secret: Read complete after 0s [id=259862612][0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_availability_zones.available: Reading...[0m[0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_caller_identity.current_aws_account: Reading...[0m[0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_iam_policy_document.raft_auto_join: Reading...[0m[0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_iam_policy_document.assume_role_vault_ec2: Reading...[0m[0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_ami.ubuntu: Reading...[0m[0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_iam_policy_document.raft_auto_join: Read complete after 0s [id=4279609700][0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_iam_policy_document.assume_role_vault_ec2: Read complete after 0s [id=1903849331][0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_iam_policy_document.vault_kms_unseal: Reading...[0m[0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_iam_policy_document.vault_s3_snapshot_bucket: Reading...[0m[0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_iam_policy_document.vault_aws_auth: Reading...[0m[0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_iam_policy_document.vault_kms_unseal: Read complete after 0s [id=1138302356][0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_iam_policy_document.vault_s3_snapshot_bucket: Read complete after 0s [id=1157349874][0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_iam_policy_document.vault_aws_auth: Read complete after 0s [id=3107894398][0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_ami.ubuntu: Read complete after 0s [id=ami-05803413c51f242b7][0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_caller_identity.current_aws_account: Read complete after 0s [id=925007469123][0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_availability_zones.available: Read complete after 0s [id=ap-south-1][0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_iam_policy_document.vault_aws_secret: Reading...[0m[0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_iam_policy_document.vault_aws_secret: Read complete after 0s [id=259862612][0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_ami.ubuntu: Read complete after 1s [id=ami-0f2e255ec956ade7f][0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_caller_identity.current_aws_account: Read complete after 1s [id=925007469123][0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_iam_policy_document.vault_aws_secret: Reading...[0m[0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_iam_policy_document.vault_aws_secret: Read complete after 0s [id=259862612][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
 [36m<=[0m read (data resources)
[0m
Terraform will perform the following actions:

[1m  # random_pet.env[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "random_pet" "env" {
      [32m+[0m [0m[1m[0mid[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mlength[0m[0m    = 1
      [32m+[0m [0m[1m[0mprefix[0m[0m    = "florin1"
      [32m+[0m [0m[1m[0mseparator[0m[0m = "-"
    }

[1m  # module.inter_vpc_peering.data.aws_route_table.route_table_id_dr_region[0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_route_table" "route_table_id_dr_region" {
      [32m+[0m [0m[1m[0marn[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0massociations[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mgateway_id[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroutes[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m         = (known after apply)

      [32m+[0m [0mfilter {
          [32m+[0m [0m[1m[0mname[0m[0m   = "tag:Name"
          [32m+[0m [0m[1m[0mvalues[0m[0m = [
              [32m+[0m [0m"vault-*",
            ]
        }
    }

[1m  # module.inter_vpc_peering.data.aws_route_table.route_table_id_hq_region[0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_route_table" "route_table_id_hq_region" {
      [32m+[0m [0m[1m[0marn[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0massociations[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mgateway_id[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroutes[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m         = (known after apply)

      [32m+[0m [0mfilter {
          [32m+[0m [0m[1m[0mname[0m[0m   = "tag:Name"
          [32m+[0m [0m[1m[0mvalues[0m[0m = [
              [32m+[0m [0m"vault-*",
            ]
        }
    }

[1m  # module.inter_vpc_peering.data.aws_route_table.route_table_id_pr_region[0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_route_table" "route_table_id_pr_region" {
      [32m+[0m [0m[1m[0marn[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0massociations[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mgateway_id[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroutes[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m         = (known after apply)

      [32m+[0m [0mfilter {
          [32m+[0m [0m[1m[0mname[0m[0m   = "tag:Name"
          [32m+[0m [0m[1m[0mvalues[0m[0m = [
              [32m+[0m [0m"vault-*",
            ]
        }
    }

[1m  # module.inter_vpc_peering.data.aws_vpcs.vpc_id_dr_region[0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_vpcs" "vpc_id_dr_region" {
      [32m+[0m [0m[1m[0mid[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mids[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m = {
          [32m+[0m [0m"Name" = (known after apply)
        }
    }

[1m  # module.inter_vpc_peering.data.aws_vpcs.vpc_id_hq_region[0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_vpcs" "vpc_id_hq_region" {
      [32m+[0m [0m[1m[0mid[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mids[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m = {
          [32m+[0m [0m"Name" = (known after apply)
        }
    }

[1m  # module.inter_vpc_peering.data.aws_vpcs.vpc_id_pr_region[0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_vpcs" "vpc_id_pr_region" {
      [32m+[0m [0m[1m[0mid[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mids[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m = {
          [32m+[0m [0m"Name" = (known after apply)
        }
    }

[1m  # module.inter_vpc_peering.aws_route.route_dr_to_hq[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route" "route_dr_to_hq" {
      [32m+[0m [0m[1m[0mdestination_cidr_block[0m[0m    = "192.168.0.0/24"
      [32m+[0m [0m[1m[0mid[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0minstance_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0minstance_owner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0morigin[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mvpc_peering_connection_id[0m[0m = (known after apply)
    }

[1m  # module.inter_vpc_peering.aws_route.route_hq_to_dr[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route" "route_hq_to_dr" {
      [32m+[0m [0m[1m[0mdestination_cidr_block[0m[0m    = "192.168.200.0/24"
      [32m+[0m [0m[1m[0mid[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0minstance_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0minstance_owner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0morigin[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mvpc_peering_connection_id[0m[0m = (known after apply)
    }

[1m  # module.inter_vpc_peering.aws_route.route_hq_to_pr[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route" "route_hq_to_pr" {
      [32m+[0m [0m[1m[0mdestination_cidr_block[0m[0m    = "192.168.100.0/24"
      [32m+[0m [0m[1m[0mid[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0minstance_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0minstance_owner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0morigin[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mvpc_peering_connection_id[0m[0m = (known after apply)
    }

[1m  # module.inter_vpc_peering.aws_route.route_pr_to_hq[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route" "route_pr_to_hq" {
      [32m+[0m [0m[1m[0mdestination_cidr_block[0m[0m    = "192.168.0.0/24"
      [32m+[0m [0m[1m[0mid[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0minstance_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0minstance_owner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0morigin[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mvpc_peering_connection_id[0m[0m = (known after apply)
    }

[1m  # module.inter_vpc_peering.aws_vpc_peering_connection.peering_source_to_dr[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_vpc_peering_connection" "peering_source_to_dr" {
      [32m+[0m [0m[1m[0maccept_status[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mauto_accept[0m[0m   = false
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpeer_owner_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpeer_region[0m[0m   = "eu-west-1"
      [32m+[0m [0m[1m[0mpeer_vpc_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m        = (known after apply)

      [32m+[0m [0maccepter {
          [32m+[0m [0m[1m[0mallow_classic_link_to_remote_vpc[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallow_remote_vpc_dns_resolution[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mallow_vpc_to_remote_classic_link[0m[0m = (known after apply)
        }

      [32m+[0m [0mrequester {
          [32m+[0m [0m[1m[0mallow_classic_link_to_remote_vpc[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallow_remote_vpc_dns_resolution[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mallow_vpc_to_remote_classic_link[0m[0m = (known after apply)
        }
    }

[1m  # module.inter_vpc_peering.aws_vpc_peering_connection.peering_source_to_pr[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_vpc_peering_connection" "peering_source_to_pr" {
      [32m+[0m [0m[1m[0maccept_status[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mauto_accept[0m[0m   = false
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpeer_owner_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpeer_region[0m[0m   = "ap-south-1"
      [32m+[0m [0m[1m[0mpeer_vpc_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m        = (known after apply)

      [32m+[0m [0maccepter {
          [32m+[0m [0m[1m[0mallow_classic_link_to_remote_vpc[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallow_remote_vpc_dns_resolution[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mallow_vpc_to_remote_classic_link[0m[0m = (known after apply)
        }

      [32m+[0m [0mrequester {
          [32m+[0m [0m[1m[0mallow_classic_link_to_remote_vpc[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallow_remote_vpc_dns_resolution[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mallow_vpc_to_remote_classic_link[0m[0m = (known after apply)
        }
    }

[1m  # module.inter_vpc_peering.aws_vpc_peering_connection_accepter.peer_dr[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_vpc_peering_connection_accepter" "peer_dr" {
      [32m+[0m [0m[1m[0maccept_status[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mauto_accept[0m[0m               = true
      [32m+[0m [0m[1m[0mid[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mpeer_owner_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mpeer_region[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mpeer_vpc_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mvpc_peering_connection_id[0m[0m = (known after apply)

      [32m+[0m [0maccepter {
          [32m+[0m [0m[1m[0mallow_classic_link_to_remote_vpc[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallow_remote_vpc_dns_resolution[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mallow_vpc_to_remote_classic_link[0m[0m = (known after apply)
        }

      [32m+[0m [0mrequester {
          [32m+[0m [0m[1m[0mallow_classic_link_to_remote_vpc[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallow_remote_vpc_dns_resolution[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mallow_vpc_to_remote_classic_link[0m[0m = (known after apply)
        }
    }

[1m  # module.inter_vpc_peering.aws_vpc_peering_connection_accepter.peer_pr[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_vpc_peering_connection_accepter" "peer_pr" {
      [32m+[0m [0m[1m[0maccept_status[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mauto_accept[0m[0m               = true
      [32m+[0m [0m[1m[0mid[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mpeer_owner_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mpeer_region[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mpeer_vpc_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mvpc_peering_connection_id[0m[0m = (known after apply)

      [32m+[0m [0maccepter {
          [32m+[0m [0m[1m[0mallow_classic_link_to_remote_vpc[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallow_remote_vpc_dns_resolution[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mallow_vpc_to_remote_classic_link[0m[0m = (known after apply)
        }

      [32m+[0m [0mrequester {
          [32m+[0m [0m[1m[0mallow_classic_link_to_remote_vpc[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallow_remote_vpc_dns_resolution[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mallow_vpc_to_remote_classic_link[0m[0m = (known after apply)
        }
    }

[1m  # module.vault_common_ca.local_file.ca[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "local_file" "ca" {
      [32m+[0m [0m[1m[0mcontent[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mdirectory_permission[0m[0m = "0777"
      [32m+[0m [0m[1m[0mfile_permission[0m[0m      = "0777"
      [32m+[0m [0m[1m[0mfilename[0m[0m             = "modules/sub-modules/common_vault_ca/ca.pem"
      [32m+[0m [0m[1m[0mid[0m[0m                   = (known after apply)
    }

[1m  # module.vault_common_ca.tls_private_key.private_key_vault_ca[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "private_key_vault_ca" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[1m  # module.vault_common_ca.tls_self_signed_cert.ca_cert[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_self_signed_cert" "ca_cert" {
      [32m+[0m [0m[1m[0mallowed_uses[0m[0m          = [
          [32m+[0m [0m"crl_signing",
          [32m+[0m [0m"cert_signing",
        ]
      [32m+[0m [0m[1m[0mcert_pem[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mearly_renewal_hours[0m[0m   = 0
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mis_ca_certificate[0m[0m     = true
      [32m+[0m [0m[1m[0mkey_algorithm[0m[0m         = "RSA"
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m       = (sensitive value)
      [32m+[0m [0m[1m[0mready_for_renewal[0m[0m     = true
      [32m+[0m [0m[1m[0mvalidity_end_time[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mvalidity_period_hours[0m[0m = 3600
      [32m+[0m [0m[1m[0mvalidity_start_time[0m[0m   = (known after apply)

      [32m+[0m [0msubject {
          [32m+[0m [0m[1m[0mcommon_name[0m[0m  = "Vault CA"
          [32m+[0m [0m[1m[0morganization[0m[0m = "Vault CA"
        }
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.data.aws_subnet.subnets["ap-south-1a"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_subnet" "subnets" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mavailable_ip_address_count[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = (known after apply)
      [32m+[0m [0m[1m[0mcustomer_owned_ipv4_pool[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mdefault_for_az[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mmap_customer_owned_ip_on_launch[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                                          = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.data.aws_subnet.subnets["ap-south-1b"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_subnet" "subnets" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mavailable_ip_address_count[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = (known after apply)
      [32m+[0m [0m[1m[0mcustomer_owned_ipv4_pool[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mdefault_for_az[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mmap_customer_owned_ip_on_launch[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                                          = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.data.aws_subnet.subnets["ap-south-1c"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_subnet" "subnets" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mavailable_ip_address_count[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = (known after apply)
      [32m+[0m [0m[1m[0mcustomer_owned_ipv4_pool[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mdefault_for_az[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mmap_customer_owned_ip_on_launch[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                                          = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.data.cloudinit_config.myhost["ap-south-1a"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "cloudinit_config" "myhost" {
      [32m+[0m [0m[1m[0mbase64_encode[0m[0m = true
      [32m+[0m [0m[1m[0mgzip[0m[0m          = true
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mrendered[0m[0m      = (known after apply)

      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                ## template: jinja
                #!/usr/bin/env bash
                
                # Fixing Systemd Unit file because of "Unknown lvalue 'StartLimitIntervalSec' in section 'Unit'"
                cat << EOF > /usr/lib/systemd/system/vault.service
                [Unit]
                Description="HashiCorp Vault - A tool for managing secrets"
                Documentation=https://www.vaultproject.io/docs/
                Requires=network-online.target
                After=network-online.target
                ConditionFileNotEmpty=/etc/vault.d/vault.hcl
                
                [Service]
                User=vault
                Group=vault
                ProtectSystem=full
                ProtectHome=read-only
                PrivateTmp=yes
                PrivateDevices=yes
                SecureBits=keep-caps
                AmbientCapabilities=CAP_IPC_LOCK
                CapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK
                NoNewPrivileges=yes
                ExecStart=/usr/bin/vault server -config=/etc/vault.d/vault.hcl
                ExecReload=/bin/kill --signal HUP $MAINPID
                KillMode=process
                KillSignal=SIGINT
                Restart=on-failure
                RestartSec=5
                TimeoutStopSec=30
                StartLimitInterval=60
                StartLimitBurst=3
                LimitNOFILE=65536
                LimitMEMLOCK=infinity
                StartLimitInterval=30s
                StartLimitBurst=3
                # Adding VAULT_LICENSE_PATH environment in case newer version of Vault > 1.8, so autoloading license can be provided. In case older version of Vault is used < 1.8 the VAULT_LICENSE_PATH env var has not meaning
                Environment="VAULT_LICENSE_PATH=/home/ubuntu/_vaultSetup/license.hclic"
                
                [Install]
                WantedBy=multi-user.target
                EOF
                
                echo "SystemD applied..."|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                
                sudo systemctl daemon-reload
                
                sudo systemctl stop vault
                sudo systemctl start vault
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                #!/bin/bash
                
                # Making working dir for Vault setup
                mkdir -p /home/ubuntu/_vaultSetup
                touch /home/ubuntu/_vaultSetup/keys.json
                touch /home/ubuntu/_vaultSetup/vault_debug
                
                sudo chown -R vault:vault /home/ubuntu/_vaultSetup
                sudo chown ubuntu:ubuntu /home/ubuntu
                
                echo "$(date): Initializing Vault..."|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                
                echo "Initializing Vault..."
                # Wait for Vault to start 
                sleep 1
                
                vault operator init -format=json -recovery-shares=5 -recovery-threshold=3 > /home/ubuntu/_vaultSetup/keys.json
                
                ROOT_TOKEN=`jq -r .root_token /home/ubuntu/_vaultSetup/keys.json`
                
                if [ -z "$ROOT_TOKEN" ]
                then
                    echo "`date`: ROOT_TOKEN is empty !!!"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                    exit 1
                fi
                
                cat << EOF >> /etc/profile.d/vault.sh
                export VAULT_TOKEN=$ROOT_TOKEN
                EOF
                
                
                # Install the Vault license and deletes the license file
                function install_vault_license () {
                  
                curl -s --request PUT --header "X-Vault-Token: $1" --data @/home/ubuntu/_vaultSetup/license.json https://127.0.0.1:8200/v1/sys/license
                
                if [ $? -eq 0 ]
                then
                    #rm /home/ubuntu/_vaultSetup/license.json
                    echo "$(date): Writing license file result: OK"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                else
                    echo "$(date): Writing license file result: FAILED"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                fi
                }
                
                # Wait for Vault to get Initialized with KMS
                sleep 10
                
                # Check if Vault is ready for being licensed
                while true
                do
                  if [[ $(curl -X GET -LI -o /dev/null -w '%{http_code}' -s https://127.0.0.1:8200/v1/sys/health) =~ (200|429|473) ]] # HTTP codes that show if Vault is ready to be used
                  then
                    # Checking if Vault is using autoloading license (version > 1.8) if 404 is returned, autoload is not used, so installing the license via /sys/license endpoint
                    if [[ $(curl -X GET -H "X-Vault-Token: $ROOT_TOKEN" -o /dev/null -w '%{http_code}' -s https://127.0.0.1:8200/v1/sys/license/status) =~ (404) ]]
                    then
                      install_vault_license $ROOT_TOKEN
                      break 2
                    # If autoloading license is used, break from the loop
                    elif [[ $(curl -X GET -LI -H "X-Vault-Token: $ROOT_TOKEN" -o /dev/null -w '%{http_code}' -s https://127.0.0.1:8200/v1/sys/license/status) =~ (200) ]]
                    then
                    {
                      echo "$(date): AUTOLOADING is used!"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                      break 2
                      }
                    fi
                  echo "$(date): Vault is not ready yet!" |sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                  sleep 1
                  fi
                done
                
                ## Add audit file
                #curl -s -X PUT --header "X-Vault-Token: $ROOT_TOKEN" -H "X-Vault-Request: true" -d '{"type":"file","description":"Audit file","options":{"file_path":"/opt/vault/audit.log"},"local":false}' https://127.0.0.1:8200/v1/sys/audit/file
                #
                #if [ $? -eq 0 ].
                #then
                #   echo "$(date): Audit enabled: OK"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                #   retval="OK"
                #else
                #   echo "$(date): Audit enabled: FAILED"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                #fi
                ##
                
                # For debugging
                echo "$(date): This is an active node, other nodes join to it" |sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text_cloud-config"
        }
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.data.cloudinit_config.myhost["ap-south-1b"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "cloudinit_config" "myhost" {
      [32m+[0m [0m[1m[0mbase64_encode[0m[0m = true
      [32m+[0m [0m[1m[0mgzip[0m[0m          = true
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mrendered[0m[0m      = (known after apply)

      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                ## template: jinja
                #!/usr/bin/env bash
                
                # Fixing Systemd Unit file because of "Unknown lvalue 'StartLimitIntervalSec' in section 'Unit'"
                cat << EOF > /usr/lib/systemd/system/vault.service
                [Unit]
                Description="HashiCorp Vault - A tool for managing secrets"
                Documentation=https://www.vaultproject.io/docs/
                Requires=network-online.target
                After=network-online.target
                ConditionFileNotEmpty=/etc/vault.d/vault.hcl
                
                [Service]
                User=vault
                Group=vault
                ProtectSystem=full
                ProtectHome=read-only
                PrivateTmp=yes
                PrivateDevices=yes
                SecureBits=keep-caps
                AmbientCapabilities=CAP_IPC_LOCK
                CapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK
                NoNewPrivileges=yes
                ExecStart=/usr/bin/vault server -config=/etc/vault.d/vault.hcl
                ExecReload=/bin/kill --signal HUP $MAINPID
                KillMode=process
                KillSignal=SIGINT
                Restart=on-failure
                RestartSec=5
                TimeoutStopSec=30
                StartLimitInterval=60
                StartLimitBurst=3
                LimitNOFILE=65536
                LimitMEMLOCK=infinity
                StartLimitInterval=30s
                StartLimitBurst=3
                # Adding VAULT_LICENSE_PATH environment in case newer version of Vault > 1.8, so autoloading license can be provided. In case older version of Vault is used < 1.8 the VAULT_LICENSE_PATH env var has not meaning
                Environment="VAULT_LICENSE_PATH=/home/ubuntu/_vaultSetup/license.hclic"
                
                [Install]
                WantedBy=multi-user.target
                EOF
                
                echo "SystemD applied..."|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                
                sudo systemctl daemon-reload
                
                sudo systemctl stop vault
                sudo systemctl start vault
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                #!/usr/bin/env bash
                
                # This does nothing for now
                
                # No need to write the license to each node, it is stored in the backend storage
                
                # Debugging purposes
                echo "$(date) - This is a follower node, it joins to active node" s|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text_cloud-config"
        }
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.data.cloudinit_config.myhost["ap-south-1c"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "cloudinit_config" "myhost" {
      [32m+[0m [0m[1m[0mbase64_encode[0m[0m = true
      [32m+[0m [0m[1m[0mgzip[0m[0m          = true
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mrendered[0m[0m      = (known after apply)

      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                ## template: jinja
                #!/usr/bin/env bash
                
                # Fixing Systemd Unit file because of "Unknown lvalue 'StartLimitIntervalSec' in section 'Unit'"
                cat << EOF > /usr/lib/systemd/system/vault.service
                [Unit]
                Description="HashiCorp Vault - A tool for managing secrets"
                Documentation=https://www.vaultproject.io/docs/
                Requires=network-online.target
                After=network-online.target
                ConditionFileNotEmpty=/etc/vault.d/vault.hcl
                
                [Service]
                User=vault
                Group=vault
                ProtectSystem=full
                ProtectHome=read-only
                PrivateTmp=yes
                PrivateDevices=yes
                SecureBits=keep-caps
                AmbientCapabilities=CAP_IPC_LOCK
                CapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK
                NoNewPrivileges=yes
                ExecStart=/usr/bin/vault server -config=/etc/vault.d/vault.hcl
                ExecReload=/bin/kill --signal HUP $MAINPID
                KillMode=process
                KillSignal=SIGINT
                Restart=on-failure
                RestartSec=5
                TimeoutStopSec=30
                StartLimitInterval=60
                StartLimitBurst=3
                LimitNOFILE=65536
                LimitMEMLOCK=infinity
                StartLimitInterval=30s
                StartLimitBurst=3
                # Adding VAULT_LICENSE_PATH environment in case newer version of Vault > 1.8, so autoloading license can be provided. In case older version of Vault is used < 1.8 the VAULT_LICENSE_PATH env var has not meaning
                Environment="VAULT_LICENSE_PATH=/home/ubuntu/_vaultSetup/license.hclic"
                
                [Install]
                WantedBy=multi-user.target
                EOF
                
                echo "SystemD applied..."|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                
                sudo systemctl daemon-reload
                
                sudo systemctl stop vault
                sudo systemctl start vault
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                #!/usr/bin/env bash
                
                # This does nothing for now
                
                # No need to write the license to each node, it is stored in the backend storage
                
                # Debugging purposes
                echo "$(date) - This is a follower node, it joins to active node" s|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text_cloud-config"
        }
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_iam_instance_profile.vault-instance-profile[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_instance_profile" "vault-instance-profile" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mcreate_date[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mrole[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0munique_id[0m[0m   = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_iam_policy.vault_aws_auth_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vault_aws_auth_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Policy that provides the needed permissions for the Vault server to verify users via the AWS authentication method (iam type)"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"iam:GetUser",
                          [32m+[0m [0m"iam:GetRole",
                          [32m+[0m [0m"iam:GetInstanceProfile",
                          [32m+[0m [0m"ec2:DescribeInstances",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "vaultPolicyDocumentVaultAWSAuth"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_iam_policy.vault_aws_secret_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vault_aws_secret_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Policy that provides the needed permissions for the Vault server's aws secrets engine to function properly"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"iam:RemoveUserFromGroup",
                          [32m+[0m [0m"iam:PutUserPolicy",
                          [32m+[0m [0m"iam:ListUserPolicies",
                          [32m+[0m [0m"iam:ListGroupsForUser",
                          [32m+[0m [0m"iam:ListAttachedUserPolicies",
                          [32m+[0m [0m"iam:ListAccessKeys",
                          [32m+[0m [0m"iam:DetachUserPolicy",
                          [32m+[0m [0m"iam:DeleteUserPolicy",
                          [32m+[0m [0m"iam:DeleteUser",
                          [32m+[0m [0m"iam:DeleteAccessKey",
                          [32m+[0m [0m"iam:CreateUser",
                          [32m+[0m [0m"iam:CreateAccessKey",
                          [32m+[0m [0m"iam:AttachUserPolicy",
                          [32m+[0m [0m"iam:AddUserToGroup",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "arn:aws:iam::925007469123:user/vault-*"
                      [32m+[0m [0mSid      = "vaultPolicyDocumentVaultAWSSecret"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_iam_policy.vault_kms_auto_unseal_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vault_kms_auto_unseal_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Policy that provides the needed KMS permission for Vault server's auto unseal feature"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"kms:Encrypt",
                          [32m+[0m [0m"kms:DescribeKey",
                          [32m+[0m [0m"kms:Decrypt",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "vaultPolicyDocumentKMSUnseal"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_iam_policy.vault_raft_auto_join_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vault_raft_auto_join_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Policy that provides the needed EC2 DescribeInstances permissions in order for the Raft auto join feature to work in AWS environment"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = "ec2:DescribeInstances"
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "vaultPolicyDocumentRaftAutoJoin"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_iam_policy.vault_s3_raft_snapshot_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vault_s3_raft_snapshot_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Policy that provides the needed permissions to access S3 bucket in order to store Raft snapsahot"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:PutObject",
                          [32m+[0m [0m"s3:ListBucket",
                          [32m+[0m [0m"s3:DeleteObject",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "vaultPolicyDocumentS3snapshot"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_iam_role.vault_server_role[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "vault_server_role" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "ec2.amazonaws.com"
                        }
                      [32m+[0m [0mSid       = ""
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_instance.vault["ap-south-1a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_instance" "vault" {
      [32m+[0m [0m[1m[0mami[0m[0m                                  = "ami-0f2e255ec956ade7f"
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0massociate_public_ip_address[0m[0m          = true
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcpu_core_count[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mcpu_threads_per_core[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_stop[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_termination[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mebs_optimized[0m[0m                        = false
      [32m+[0m [0m[1m[0mget_password_data[0m[0m                    = false
      [32m+[0m [0m[1m[0mhost_id[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0miam_instance_profile[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_initiated_shutdown_behavior[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0minstance_state[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0minstance_type[0m[0m                        = "t3.micro"
      [32m+[0m [0m[1m[0mipv6_address_count[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mipv6_addresses[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mmonitoring[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mpassword_data[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mplacement_group[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mplacement_partition_number[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mprimary_network_interface_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0msecondary_private_ips[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0msource_dest_check[0m[0m                    = true
      [32m+[0m [0m[1m[0msubnet_id[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtenancy[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0muser_data[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0muser_data_base64[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0muser_data_replace_on_change[0m[0m          = false
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m               = (known after apply)

      [32m+[0m [0mcapacity_reservation_specification {
          [32m+[0m [0m[1m[0mcapacity_reservation_preference[0m[0m = (known after apply)

          [32m+[0m [0mcapacity_reservation_target {
              [32m+[0m [0m[1m[0mcapacity_reservation_id[0m[0m                 = (known after apply)
              [32m+[0m [0m[1m[0mcapacity_reservation_resource_group_arn[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0mebs_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0msnapshot_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }

      [32m+[0m [0menclave_options {
          [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
        }

      [32m+[0m [0mephemeral_block_device {
          [32m+[0m [0m[1m[0mdevice_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mno_device[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mvirtual_name[0m[0m = (known after apply)
        }

      [32m+[0m [0mmaintenance_options {
          [32m+[0m [0m[1m[0mauto_recovery[0m[0m = (known after apply)
        }

      [32m+[0m [0mmetadata_options {
          [32m+[0m [0m[1m[0mhttp_endpoint[0m[0m               = (known after apply)
          [32m+[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhttp_tokens[0m[0m                 = (known after apply)
          [32m+[0m [0m[1m[0minstance_metadata_tags[0m[0m      = (known after apply)
        }

      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_index[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_card_index[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m  = (known after apply)
        }

      [32m+[0m [0mprivate_dns_name_options {
          [32m+[0m [0m[1m[0menable_resource_name_dns_a_record[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhostname_type[0m[0m                        = (known after apply)
        }

      [32m+[0m [0mroot_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_instance.vault["ap-south-1b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_instance" "vault" {
      [32m+[0m [0m[1m[0mami[0m[0m                                  = "ami-0f2e255ec956ade7f"
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0massociate_public_ip_address[0m[0m          = true
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcpu_core_count[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mcpu_threads_per_core[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_stop[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_termination[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mebs_optimized[0m[0m                        = false
      [32m+[0m [0m[1m[0mget_password_data[0m[0m                    = false
      [32m+[0m [0m[1m[0mhost_id[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0miam_instance_profile[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_initiated_shutdown_behavior[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0minstance_state[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0minstance_type[0m[0m                        = "t3.micro"
      [32m+[0m [0m[1m[0mipv6_address_count[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mipv6_addresses[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mmonitoring[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mpassword_data[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mplacement_group[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mplacement_partition_number[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mprimary_network_interface_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0msecondary_private_ips[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0msource_dest_check[0m[0m                    = true
      [32m+[0m [0m[1m[0msubnet_id[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtenancy[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0muser_data[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0muser_data_base64[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0muser_data_replace_on_change[0m[0m          = false
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m               = (known after apply)

      [32m+[0m [0mcapacity_reservation_specification {
          [32m+[0m [0m[1m[0mcapacity_reservation_preference[0m[0m = (known after apply)

          [32m+[0m [0mcapacity_reservation_target {
              [32m+[0m [0m[1m[0mcapacity_reservation_id[0m[0m                 = (known after apply)
              [32m+[0m [0m[1m[0mcapacity_reservation_resource_group_arn[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0mebs_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0msnapshot_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }

      [32m+[0m [0menclave_options {
          [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
        }

      [32m+[0m [0mephemeral_block_device {
          [32m+[0m [0m[1m[0mdevice_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mno_device[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mvirtual_name[0m[0m = (known after apply)
        }

      [32m+[0m [0mmaintenance_options {
          [32m+[0m [0m[1m[0mauto_recovery[0m[0m = (known after apply)
        }

      [32m+[0m [0mmetadata_options {
          [32m+[0m [0m[1m[0mhttp_endpoint[0m[0m               = (known after apply)
          [32m+[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhttp_tokens[0m[0m                 = (known after apply)
          [32m+[0m [0m[1m[0minstance_metadata_tags[0m[0m      = (known after apply)
        }

      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_index[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_card_index[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m  = (known after apply)
        }

      [32m+[0m [0mprivate_dns_name_options {
          [32m+[0m [0m[1m[0menable_resource_name_dns_a_record[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhostname_type[0m[0m                        = (known after apply)
        }

      [32m+[0m [0mroot_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_instance.vault["ap-south-1c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_instance" "vault" {
      [32m+[0m [0m[1m[0mami[0m[0m                                  = "ami-0f2e255ec956ade7f"
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0massociate_public_ip_address[0m[0m          = true
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcpu_core_count[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mcpu_threads_per_core[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_stop[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_termination[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mebs_optimized[0m[0m                        = false
      [32m+[0m [0m[1m[0mget_password_data[0m[0m                    = false
      [32m+[0m [0m[1m[0mhost_id[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0miam_instance_profile[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_initiated_shutdown_behavior[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0minstance_state[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0minstance_type[0m[0m                        = "t3.micro"
      [32m+[0m [0m[1m[0mipv6_address_count[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mipv6_addresses[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mmonitoring[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mpassword_data[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mplacement_group[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mplacement_partition_number[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mprimary_network_interface_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0msecondary_private_ips[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0msource_dest_check[0m[0m                    = true
      [32m+[0m [0m[1m[0msubnet_id[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtenancy[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0muser_data[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0muser_data_base64[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0muser_data_replace_on_change[0m[0m          = false
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m               = (known after apply)

      [32m+[0m [0mcapacity_reservation_specification {
          [32m+[0m [0m[1m[0mcapacity_reservation_preference[0m[0m = (known after apply)

          [32m+[0m [0mcapacity_reservation_target {
              [32m+[0m [0m[1m[0mcapacity_reservation_id[0m[0m                 = (known after apply)
              [32m+[0m [0m[1m[0mcapacity_reservation_resource_group_arn[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0mebs_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0msnapshot_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }

      [32m+[0m [0menclave_options {
          [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
        }

      [32m+[0m [0mephemeral_block_device {
          [32m+[0m [0m[1m[0mdevice_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mno_device[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mvirtual_name[0m[0m = (known after apply)
        }

      [32m+[0m [0mmaintenance_options {
          [32m+[0m [0m[1m[0mauto_recovery[0m[0m = (known after apply)
        }

      [32m+[0m [0mmetadata_options {
          [32m+[0m [0m[1m[0mhttp_endpoint[0m[0m               = (known after apply)
          [32m+[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhttp_tokens[0m[0m                 = (known after apply)
          [32m+[0m [0m[1m[0minstance_metadata_tags[0m[0m      = (known after apply)
        }

      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_index[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_card_index[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m  = (known after apply)
        }

      [32m+[0m [0mprivate_dns_name_options {
          [32m+[0m [0m[1m[0menable_resource_name_dns_a_record[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhostname_type[0m[0m                        = (known after apply)
        }

      [32m+[0m [0mroot_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_internet_gateway.gw[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_internet_gateway" "gw" {
      [32m+[0m [0m[1m[0marn[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m   = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_key_pair.vault-ssh-key[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_key_pair" "vault-ssh-key" {
      [32m+[0m [0m[1m[0marn[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mfingerprint[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mkey_name_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mkey_pair_id[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m        = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_kms_key.vault[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_kms_key" "vault" {
      [32m+[0m [0m[1m[0marn[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0mbypass_policy_lockout_safety_check[0m[0m = false
      [32m+[0m [0m[1m[0mcustomer_master_key_spec[0m[0m           = "SYMMETRIC_DEFAULT"
      [32m+[0m [0m[1m[0mdeletion_window_in_days[0m[0m            = 20
      [32m+[0m [0m[1m[0mdescription[0m[0m                        = "Vault unseal key ap-south-1"
      [32m+[0m [0m[1m[0menable_key_rotation[0m[0m                = false
      [32m+[0m [0m[1m[0mid[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mis_enabled[0m[0m                         = true
      [32m+[0m [0m[1m[0mkey_id[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mkey_usage[0m[0m                          = "ENCRYPT_DECRYPT"
      [32m+[0m [0m[1m[0mmulti_region[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mpolicy[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                               = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                           = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_route_table.route[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table" "route" {
      [32m+[0m [0m[1m[0marn[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpropagating_vgws[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroute[0m[0m            = [
          [32m+[0m [0m{
              [32m+[0m [0mcarrier_gateway_id         = ""
              [32m+[0m [0mcidr_block                 = "0.0.0.0/0"
              [32m+[0m [0mcore_network_arn           = ""
              [32m+[0m [0mdestination_prefix_list_id = ""
              [32m+[0m [0megress_only_gateway_id     = ""
              [32m+[0m [0mgateway_id                 = (known after apply)
              [32m+[0m [0minstance_id                = ""
              [32m+[0m [0mipv6_cidr_block            = ""
              [32m+[0m [0mlocal_gateway_id           = ""
              [32m+[0m [0mnat_gateway_id             = ""
              [32m+[0m [0mnetwork_interface_id       = ""
              [32m+[0m [0mtransit_gateway_id         = ""
              [32m+[0m [0mvpc_endpoint_id            = ""
              [32m+[0m [0mvpc_peering_connection_id  = ""
            },
        ]
      [32m+[0m [0m[1m[0mtags[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m           = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_route_table_association.route["ap-south-1a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "route" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_route_table_association.route["ap-south-1b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "route" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_route_table_association.route["ap-south-1c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "route" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_s3_bucket.raft_snapshot_bucket[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_bucket" "raft_snapshot_bucket" {
      [32m+[0m [0m[1m[0macceleration_status[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0macl[0m[0m                         = "private"
      [32m+[0m [0m[1m[0marn[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mbucket[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mbucket_domain_name[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mbucket_regional_domain_name[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m               = true
      [32m+[0m [0m[1m[0mhosted_zone_id[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mobject_lock_enabled[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mregion[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mrequest_payer[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mwebsite_domain[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mwebsite_endpoint[0m[0m            = (known after apply)

      [32m+[0m [0mcors_rule {
          [32m+[0m [0m[1m[0mallowed_headers[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallowed_methods[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallowed_origins[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mexpose_headers[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mmax_age_seconds[0m[0m = (known after apply)
        }

      [32m+[0m [0mgrant {
          [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mpermissions[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mtype[0m[0m        = (known after apply)
          [32m+[0m [0m[1m[0muri[0m[0m         = (known after apply)
        }

      [32m+[0m [0mlifecycle_rule {
          [32m+[0m [0m[1m[0mabort_incomplete_multipart_upload_days[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0menabled[0m[0m                                = (known after apply)
          [32m+[0m [0m[1m[0mid[0m[0m                                     = (known after apply)
          [32m+[0m [0m[1m[0mprefix[0m[0m                                 = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                                   = (known after apply)

          [32m+[0m [0mexpiration {
              [32m+[0m [0m[1m[0mdate[0m[0m                         = (known after apply)
              [32m+[0m [0m[1m[0mdays[0m[0m                         = (known after apply)
              [32m+[0m [0m[1m[0mexpired_object_delete_marker[0m[0m = (known after apply)
            }

          [32m+[0m [0mnoncurrent_version_expiration {
              [32m+[0m [0m[1m[0mdays[0m[0m = (known after apply)
            }

          [32m+[0m [0mnoncurrent_version_transition {
              [32m+[0m [0m[1m[0mdays[0m[0m          = (known after apply)
              [32m+[0m [0m[1m[0mstorage_class[0m[0m = (known after apply)
            }

          [32m+[0m [0mtransition {
              [32m+[0m [0m[1m[0mdate[0m[0m          = (known after apply)
              [32m+[0m [0m[1m[0mdays[0m[0m          = (known after apply)
              [32m+[0m [0m[1m[0mstorage_class[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0mlogging {
          [32m+[0m [0m[1m[0mtarget_bucket[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mtarget_prefix[0m[0m = (known after apply)
        }

      [32m+[0m [0mobject_lock_configuration {
          [32m+[0m [0m[1m[0mobject_lock_enabled[0m[0m = (known after apply)

          [32m+[0m [0mrule {
              [32m+[0m [0mdefault_retention {
                  [32m+[0m [0m[1m[0mdays[0m[0m  = (known after apply)
                  [32m+[0m [0m[1m[0mmode[0m[0m  = (known after apply)
                  [32m+[0m [0m[1m[0myears[0m[0m = (known after apply)
                }
            }
        }

      [32m+[0m [0mreplication_configuration {
          [32m+[0m [0m[1m[0mrole[0m[0m = (known after apply)

          [32m+[0m [0mrules {
              [32m+[0m [0m[1m[0mdelete_marker_replication_status[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mid[0m[0m                               = (known after apply)
              [32m+[0m [0m[1m[0mprefix[0m[0m                           = (known after apply)
              [32m+[0m [0m[1m[0mpriority[0m[0m                         = (known after apply)
              [32m+[0m [0m[1m[0mstatus[0m[0m                           = (known after apply)

              [32m+[0m [0mdestination {
                  [32m+[0m [0m[1m[0maccount_id[0m[0m         = (known after apply)
                  [32m+[0m [0m[1m[0mbucket[0m[0m             = (known after apply)
                  [32m+[0m [0m[1m[0mreplica_kms_key_id[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0mstorage_class[0m[0m      = (known after apply)

                  [32m+[0m [0maccess_control_translation {
                      [32m+[0m [0m[1m[0mowner[0m[0m = (known after apply)
                    }

                  [32m+[0m [0mmetrics {
                      [32m+[0m [0m[1m[0mminutes[0m[0m = (known after apply)
                      [32m+[0m [0m[1m[0mstatus[0m[0m  = (known after apply)
                    }

                  [32m+[0m [0mreplication_time {
                      [32m+[0m [0m[1m[0mminutes[0m[0m = (known after apply)
                      [32m+[0m [0m[1m[0mstatus[0m[0m  = (known after apply)
                    }
                }

              [32m+[0m [0mfilter {
                  [32m+[0m [0m[1m[0mprefix[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0mtags[0m[0m   = (known after apply)
                }

              [32m+[0m [0msource_selection_criteria {
                  [32m+[0m [0msse_kms_encrypted_objects {
                      [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
                    }
                }
            }
        }

      [32m+[0m [0mserver_side_encryption_configuration {
          [32m+[0m [0mrule {
              [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m = (known after apply)

              [32m+[0m [0mapply_server_side_encryption_by_default {
                  [32m+[0m [0m[1m[0mkms_master_key_id[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0msse_algorithm[0m[0m     = (known after apply)
                }
            }
        }

      [32m+[0m [0mversioning {
          [32m+[0m [0m[1m[0menabled[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mmfa_delete[0m[0m = (known after apply)
        }

      [32m+[0m [0mwebsite {
          [32m+[0m [0m[1m[0merror_document[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mindex_document[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mredirect_all_requests_to[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mrouting_rules[0m[0m            = (known after apply)
        }
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_security_group.vault[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "vault" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "SG for Vault SSH and Vault traffic"
      [32m+[0m [0m[1m[0megress[0m[0m                 = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "-1"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 0
            },
        ]
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 8200
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 8200
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 8201
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 8201
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"145.101.18.82/32",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 22
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 22
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"145.101.18.82/32",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 8
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "icmp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 0
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = []
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "icmp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = true
              [32m+[0m [0mto_port          = 254
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = []
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = true
              [32m+[0m [0mto_port          = 65535
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = []
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "udp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = true
              [32m+[0m [0mto_port          = 65535
            },
        ]
      [32m+[0m [0m[1m[0mname[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_subnet.public_subnet["ap-south-1a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "public_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "ap-south-1a"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "192.168.100.0/28"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = true
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_subnet.public_subnet["ap-south-1b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "public_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "ap-south-1b"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "192.168.100.16/28"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = true
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_subnet.public_subnet["ap-south-1c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "public_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "ap-south-1c"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "192.168.100.32/28"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = true
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_vpc.vpc[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_vpc" "vpc" {
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                           = "192.168.100.0/24"
      [32m+[0m [0m[1m[0mdefault_network_acl_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_route_table_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_security_group_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mdhcp_options_id[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0menable_classiclink[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0menable_classiclink_dns_support[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0menable_dns_hostnames[0m[0m                 = true
      [32m+[0m [0m[1m[0menable_dns_support[0m[0m                   = true
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_tenancy[0m[0m                     = "default"
      [32m+[0m [0m[1m[0mipv6_association_id[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_network_border_group[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mmain_route_table_id[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.null_resource.add_to_known_hosts["ap-south-1a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "null_resource" "add_to_known_hosts" {
      [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.null_resource.add_to_known_hosts["ap-south-1b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "null_resource" "add_to_known_hosts" {
      [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.null_resource.add_to_known_hosts["ap-south-1c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "null_resource" "add_to_known_hosts" {
      [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.null_resource.main[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "null_resource" "main" {
      [32m+[0m [0m[1m[0mid[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mtriggers[0m[0m = {
          [32m+[0m [0m"region" = "ap-south-1"
        }
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.tls_cert_request.csr_vault_server["ap-south-1a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_cert_request" "csr_vault_server" {
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mdns_names[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mip_addresses[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mkey_algorithm[0m[0m    = "RSA"
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m  = (sensitive value)

      [32m+[0m [0msubject {
          [32m+[0m [0m[1m[0mcommon_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0morganization[0m[0m = "Vault setup"
        }
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.tls_cert_request.csr_vault_server["ap-south-1b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_cert_request" "csr_vault_server" {
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mdns_names[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mip_addresses[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mkey_algorithm[0m[0m    = "RSA"
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m  = (sensitive value)

      [32m+[0m [0msubject {
          [32m+[0m [0m[1m[0mcommon_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0morganization[0m[0m = "Vault setup"
        }
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.tls_cert_request.csr_vault_server["ap-south-1c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_cert_request" "csr_vault_server" {
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mdns_names[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mip_addresses[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mkey_algorithm[0m[0m    = "RSA"
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m  = (sensitive value)

      [32m+[0m [0msubject {
          [32m+[0m [0m[1m[0mcommon_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0morganization[0m[0m = "Vault setup"
        }
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.tls_locally_signed_cert.vault_cert_sign["ap-south-1a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_locally_signed_cert" "vault_cert_sign" {
      [32m+[0m [0m[1m[0mallowed_uses[0m[0m          = [
          [32m+[0m [0m"digital_signature",
          [32m+[0m [0m"key_encipherment",
          [32m+[0m [0m"key_agreement",
        ]
      [32m+[0m [0m[1m[0mca_cert_pem[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mca_key_algorithm[0m[0m      = "RSA"
      [32m+[0m [0m[1m[0mca_private_key_pem[0m[0m    = (sensitive value)
      [32m+[0m [0m[1m[0mcert_pem[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mearly_renewal_hours[0m[0m   = 0
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mis_ca_certificate[0m[0m     = false
      [32m+[0m [0m[1m[0mready_for_renewal[0m[0m     = true
      [32m+[0m [0m[1m[0mvalidity_end_time[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mvalidity_period_hours[0m[0m = 3600
      [32m+[0m [0m[1m[0mvalidity_start_time[0m[0m   = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.tls_locally_signed_cert.vault_cert_sign["ap-south-1b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_locally_signed_cert" "vault_cert_sign" {
      [32m+[0m [0m[1m[0mallowed_uses[0m[0m          = [
          [32m+[0m [0m"digital_signature",
          [32m+[0m [0m"key_encipherment",
          [32m+[0m [0m"key_agreement",
        ]
      [32m+[0m [0m[1m[0mca_cert_pem[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mca_key_algorithm[0m[0m      = "RSA"
      [32m+[0m [0m[1m[0mca_private_key_pem[0m[0m    = (sensitive value)
      [32m+[0m [0m[1m[0mcert_pem[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mearly_renewal_hours[0m[0m   = 0
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mis_ca_certificate[0m[0m     = false
      [32m+[0m [0m[1m[0mready_for_renewal[0m[0m     = true
      [32m+[0m [0m[1m[0mvalidity_end_time[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mvalidity_period_hours[0m[0m = 3600
      [32m+[0m [0m[1m[0mvalidity_start_time[0m[0m   = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.tls_locally_signed_cert.vault_cert_sign["ap-south-1c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_locally_signed_cert" "vault_cert_sign" {
      [32m+[0m [0m[1m[0mallowed_uses[0m[0m          = [
          [32m+[0m [0m"digital_signature",
          [32m+[0m [0m"key_encipherment",
          [32m+[0m [0m"key_agreement",
        ]
      [32m+[0m [0m[1m[0mca_cert_pem[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mca_key_algorithm[0m[0m      = "RSA"
      [32m+[0m [0m[1m[0mca_private_key_pem[0m[0m    = (sensitive value)
      [32m+[0m [0m[1m[0mcert_pem[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mearly_renewal_hours[0m[0m   = 0
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mis_ca_certificate[0m[0m     = false
      [32m+[0m [0m[1m[0mready_for_renewal[0m[0m     = true
      [32m+[0m [0m[1m[0mvalidity_end_time[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mvalidity_period_hours[0m[0m = 3600
      [32m+[0m [0m[1m[0mvalidity_start_time[0m[0m   = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.tls_private_key.host[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "host" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 4096
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.tls_private_key.host[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "host" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "ECDSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P384"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.tls_private_key.vault-ssh-key[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "vault-ssh-key" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.tls_private_key.vault_tls_rsa_key["ap-south-1a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "vault_tls_rsa_key" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.tls_private_key.vault_tls_rsa_key["ap-south-1b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "vault_tls_rsa_key" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.tls_private_key.vault_tls_rsa_key["ap-south-1c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "vault_tls_rsa_key" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.data.aws_subnet.subnets["eu-west-1a"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_subnet" "subnets" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mavailable_ip_address_count[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = (known after apply)
      [32m+[0m [0m[1m[0mcustomer_owned_ipv4_pool[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mdefault_for_az[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mmap_customer_owned_ip_on_launch[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                                          = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.data.aws_subnet.subnets["eu-west-1b"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_subnet" "subnets" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mavailable_ip_address_count[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = (known after apply)
      [32m+[0m [0m[1m[0mcustomer_owned_ipv4_pool[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mdefault_for_az[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mmap_customer_owned_ip_on_launch[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                                          = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.data.aws_subnet.subnets["eu-west-1c"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_subnet" "subnets" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mavailable_ip_address_count[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = (known after apply)
      [32m+[0m [0m[1m[0mcustomer_owned_ipv4_pool[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mdefault_for_az[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mmap_customer_owned_ip_on_launch[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                                          = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.data.cloudinit_config.myhost["eu-west-1a"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "cloudinit_config" "myhost" {
      [32m+[0m [0m[1m[0mbase64_encode[0m[0m = true
      [32m+[0m [0m[1m[0mgzip[0m[0m          = true
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mrendered[0m[0m      = (known after apply)

      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                ## template: jinja
                #!/usr/bin/env bash
                
                # Fixing Systemd Unit file because of "Unknown lvalue 'StartLimitIntervalSec' in section 'Unit'"
                cat << EOF > /usr/lib/systemd/system/vault.service
                [Unit]
                Description="HashiCorp Vault - A tool for managing secrets"
                Documentation=https://www.vaultproject.io/docs/
                Requires=network-online.target
                After=network-online.target
                ConditionFileNotEmpty=/etc/vault.d/vault.hcl
                
                [Service]
                User=vault
                Group=vault
                ProtectSystem=full
                ProtectHome=read-only
                PrivateTmp=yes
                PrivateDevices=yes
                SecureBits=keep-caps
                AmbientCapabilities=CAP_IPC_LOCK
                CapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK
                NoNewPrivileges=yes
                ExecStart=/usr/bin/vault server -config=/etc/vault.d/vault.hcl
                ExecReload=/bin/kill --signal HUP $MAINPID
                KillMode=process
                KillSignal=SIGINT
                Restart=on-failure
                RestartSec=5
                TimeoutStopSec=30
                StartLimitInterval=60
                StartLimitBurst=3
                LimitNOFILE=65536
                LimitMEMLOCK=infinity
                StartLimitInterval=30s
                StartLimitBurst=3
                # Adding VAULT_LICENSE_PATH environment in case newer version of Vault > 1.8, so autoloading license can be provided. In case older version of Vault is used < 1.8 the VAULT_LICENSE_PATH env var has not meaning
                Environment="VAULT_LICENSE_PATH=/home/ubuntu/_vaultSetup/license.hclic"
                
                [Install]
                WantedBy=multi-user.target
                EOF
                
                echo "SystemD applied..."|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                
                sudo systemctl daemon-reload
                
                sudo systemctl stop vault
                sudo systemctl start vault
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                #!/bin/bash
                
                # Making working dir for Vault setup
                mkdir -p /home/ubuntu/_vaultSetup
                touch /home/ubuntu/_vaultSetup/keys.json
                touch /home/ubuntu/_vaultSetup/vault_debug
                
                sudo chown -R vault:vault /home/ubuntu/_vaultSetup
                sudo chown ubuntu:ubuntu /home/ubuntu
                
                echo "$(date): Initializing Vault..."|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                
                echo "Initializing Vault..."
                # Wait for Vault to start 
                sleep 1
                
                vault operator init -format=json -recovery-shares=5 -recovery-threshold=3 > /home/ubuntu/_vaultSetup/keys.json
                
                ROOT_TOKEN=`jq -r .root_token /home/ubuntu/_vaultSetup/keys.json`
                
                if [ -z "$ROOT_TOKEN" ]
                then
                    echo "`date`: ROOT_TOKEN is empty !!!"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                    exit 1
                fi
                
                cat << EOF >> /etc/profile.d/vault.sh
                export VAULT_TOKEN=$ROOT_TOKEN
                EOF
                
                
                # Install the Vault license and deletes the license file
                function install_vault_license () {
                  
                curl -s --request PUT --header "X-Vault-Token: $1" --data @/home/ubuntu/_vaultSetup/license.json https://127.0.0.1:8200/v1/sys/license
                
                if [ $? -eq 0 ]
                then
                    #rm /home/ubuntu/_vaultSetup/license.json
                    echo "$(date): Writing license file result: OK"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                else
                    echo "$(date): Writing license file result: FAILED"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                fi
                }
                
                # Wait for Vault to get Initialized with KMS
                sleep 10
                
                # Check if Vault is ready for being licensed
                while true
                do
                  if [[ $(curl -X GET -LI -o /dev/null -w '%{http_code}' -s https://127.0.0.1:8200/v1/sys/health) =~ (200|429|473) ]] # HTTP codes that show if Vault is ready to be used
                  then
                    # Checking if Vault is using autoloading license (version > 1.8) if 404 is returned, autoload is not used, so installing the license via /sys/license endpoint
                    if [[ $(curl -X GET -H "X-Vault-Token: $ROOT_TOKEN" -o /dev/null -w '%{http_code}' -s https://127.0.0.1:8200/v1/sys/license/status) =~ (404) ]]
                    then
                      install_vault_license $ROOT_TOKEN
                      break 2
                    # If autoloading license is used, break from the loop
                    elif [[ $(curl -X GET -LI -H "X-Vault-Token: $ROOT_TOKEN" -o /dev/null -w '%{http_code}' -s https://127.0.0.1:8200/v1/sys/license/status) =~ (200) ]]
                    then
                    {
                      echo "$(date): AUTOLOADING is used!"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                      break 2
                      }
                    fi
                  echo "$(date): Vault is not ready yet!" |sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                  sleep 1
                  fi
                done
                
                ## Add audit file
                #curl -s -X PUT --header "X-Vault-Token: $ROOT_TOKEN" -H "X-Vault-Request: true" -d '{"type":"file","description":"Audit file","options":{"file_path":"/opt/vault/audit.log"},"local":false}' https://127.0.0.1:8200/v1/sys/audit/file
                #
                #if [ $? -eq 0 ].
                #then
                #   echo "$(date): Audit enabled: OK"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                #   retval="OK"
                #else
                #   echo "$(date): Audit enabled: FAILED"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                #fi
                ##
                
                # For debugging
                echo "$(date): This is an active node, other nodes join to it" |sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text_cloud-config"
        }
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.data.cloudinit_config.myhost["eu-west-1b"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "cloudinit_config" "myhost" {
      [32m+[0m [0m[1m[0mbase64_encode[0m[0m = true
      [32m+[0m [0m[1m[0mgzip[0m[0m          = true
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mrendered[0m[0m      = (known after apply)

      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                ## template: jinja
                #!/usr/bin/env bash
                
                # Fixing Systemd Unit file because of "Unknown lvalue 'StartLimitIntervalSec' in section 'Unit'"
                cat << EOF > /usr/lib/systemd/system/vault.service
                [Unit]
                Description="HashiCorp Vault - A tool for managing secrets"
                Documentation=https://www.vaultproject.io/docs/
                Requires=network-online.target
                After=network-online.target
                ConditionFileNotEmpty=/etc/vault.d/vault.hcl
                
                [Service]
                User=vault
                Group=vault
                ProtectSystem=full
                ProtectHome=read-only
                PrivateTmp=yes
                PrivateDevices=yes
                SecureBits=keep-caps
                AmbientCapabilities=CAP_IPC_LOCK
                CapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK
                NoNewPrivileges=yes
                ExecStart=/usr/bin/vault server -config=/etc/vault.d/vault.hcl
                ExecReload=/bin/kill --signal HUP $MAINPID
                KillMode=process
                KillSignal=SIGINT
                Restart=on-failure
                RestartSec=5
                TimeoutStopSec=30
                StartLimitInterval=60
                StartLimitBurst=3
                LimitNOFILE=65536
                LimitMEMLOCK=infinity
                StartLimitInterval=30s
                StartLimitBurst=3
                # Adding VAULT_LICENSE_PATH environment in case newer version of Vault > 1.8, so autoloading license can be provided. In case older version of Vault is used < 1.8 the VAULT_LICENSE_PATH env var has not meaning
                Environment="VAULT_LICENSE_PATH=/home/ubuntu/_vaultSetup/license.hclic"
                
                [Install]
                WantedBy=multi-user.target
                EOF
                
                echo "SystemD applied..."|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                
                sudo systemctl daemon-reload
                
                sudo systemctl stop vault
                sudo systemctl start vault
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                #!/usr/bin/env bash
                
                # This does nothing for now
                
                # No need to write the license to each node, it is stored in the backend storage
                
                # Debugging purposes
                echo "$(date) - This is a follower node, it joins to active node" s|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text_cloud-config"
        }
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.data.cloudinit_config.myhost["eu-west-1c"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "cloudinit_config" "myhost" {
      [32m+[0m [0m[1m[0mbase64_encode[0m[0m = true
      [32m+[0m [0m[1m[0mgzip[0m[0m          = true
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mrendered[0m[0m      = (known after apply)

      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                ## template: jinja
                #!/usr/bin/env bash
                
                # Fixing Systemd Unit file because of "Unknown lvalue 'StartLimitIntervalSec' in section 'Unit'"
                cat << EOF > /usr/lib/systemd/system/vault.service
                [Unit]
                Description="HashiCorp Vault - A tool for managing secrets"
                Documentation=https://www.vaultproject.io/docs/
                Requires=network-online.target
                After=network-online.target
                ConditionFileNotEmpty=/etc/vault.d/vault.hcl
                
                [Service]
                User=vault
                Group=vault
                ProtectSystem=full
                ProtectHome=read-only
                PrivateTmp=yes
                PrivateDevices=yes
                SecureBits=keep-caps
                AmbientCapabilities=CAP_IPC_LOCK
                CapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK
                NoNewPrivileges=yes
                ExecStart=/usr/bin/vault server -config=/etc/vault.d/vault.hcl
                ExecReload=/bin/kill --signal HUP $MAINPID
                KillMode=process
                KillSignal=SIGINT
                Restart=on-failure
                RestartSec=5
                TimeoutStopSec=30
                StartLimitInterval=60
                StartLimitBurst=3
                LimitNOFILE=65536
                LimitMEMLOCK=infinity
                StartLimitInterval=30s
                StartLimitBurst=3
                # Adding VAULT_LICENSE_PATH environment in case newer version of Vault > 1.8, so autoloading license can be provided. In case older version of Vault is used < 1.8 the VAULT_LICENSE_PATH env var has not meaning
                Environment="VAULT_LICENSE_PATH=/home/ubuntu/_vaultSetup/license.hclic"
                
                [Install]
                WantedBy=multi-user.target
                EOF
                
                echo "SystemD applied..."|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                
                sudo systemctl daemon-reload
                
                sudo systemctl stop vault
                sudo systemctl start vault
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                #!/usr/bin/env bash
                
                # This does nothing for now
                
                # No need to write the license to each node, it is stored in the backend storage
                
                # Debugging purposes
                echo "$(date) - This is a follower node, it joins to active node" s|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text_cloud-config"
        }
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_iam_instance_profile.vault-instance-profile[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_instance_profile" "vault-instance-profile" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mcreate_date[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mrole[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0munique_id[0m[0m   = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_iam_policy.vault_aws_auth_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vault_aws_auth_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Policy that provides the needed permissions for the Vault server to verify users via the AWS authentication method (iam type)"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"iam:GetUser",
                          [32m+[0m [0m"iam:GetRole",
                          [32m+[0m [0m"iam:GetInstanceProfile",
                          [32m+[0m [0m"ec2:DescribeInstances",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "vaultPolicyDocumentVaultAWSAuth"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_iam_policy.vault_aws_secret_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vault_aws_secret_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Policy that provides the needed permissions for the Vault server's aws secrets engine to function properly"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"iam:RemoveUserFromGroup",
                          [32m+[0m [0m"iam:PutUserPolicy",
                          [32m+[0m [0m"iam:ListUserPolicies",
                          [32m+[0m [0m"iam:ListGroupsForUser",
                          [32m+[0m [0m"iam:ListAttachedUserPolicies",
                          [32m+[0m [0m"iam:ListAccessKeys",
                          [32m+[0m [0m"iam:DetachUserPolicy",
                          [32m+[0m [0m"iam:DeleteUserPolicy",
                          [32m+[0m [0m"iam:DeleteUser",
                          [32m+[0m [0m"iam:DeleteAccessKey",
                          [32m+[0m [0m"iam:CreateUser",
                          [32m+[0m [0m"iam:CreateAccessKey",
                          [32m+[0m [0m"iam:AttachUserPolicy",
                          [32m+[0m [0m"iam:AddUserToGroup",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "arn:aws:iam::925007469123:user/vault-*"
                      [32m+[0m [0mSid      = "vaultPolicyDocumentVaultAWSSecret"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_iam_policy.vault_kms_auto_unseal_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vault_kms_auto_unseal_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Policy that provides the needed KMS permission for Vault server's auto unseal feature"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"kms:Encrypt",
                          [32m+[0m [0m"kms:DescribeKey",
                          [32m+[0m [0m"kms:Decrypt",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "vaultPolicyDocumentKMSUnseal"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_iam_policy.vault_raft_auto_join_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vault_raft_auto_join_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Policy that provides the needed EC2 DescribeInstances permissions in order for the Raft auto join feature to work in AWS environment"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = "ec2:DescribeInstances"
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "vaultPolicyDocumentRaftAutoJoin"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_iam_policy.vault_s3_raft_snapshot_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vault_s3_raft_snapshot_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Policy that provides the needed permissions to access S3 bucket in order to store Raft snapsahot"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:PutObject",
                          [32m+[0m [0m"s3:ListBucket",
                          [32m+[0m [0m"s3:DeleteObject",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "vaultPolicyDocumentS3snapshot"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_iam_role.vault_server_role[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "vault_server_role" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "ec2.amazonaws.com"
                        }
                      [32m+[0m [0mSid       = ""
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_instance.vault["eu-west-1a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_instance" "vault" {
      [32m+[0m [0m[1m[0mami[0m[0m                                  = "ami-0f29c8402f8cce65c"
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0massociate_public_ip_address[0m[0m          = true
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcpu_core_count[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mcpu_threads_per_core[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_stop[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_termination[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mebs_optimized[0m[0m                        = false
      [32m+[0m [0m[1m[0mget_password_data[0m[0m                    = false
      [32m+[0m [0m[1m[0mhost_id[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0miam_instance_profile[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_initiated_shutdown_behavior[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0minstance_state[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0minstance_type[0m[0m                        = "t3.micro"
      [32m+[0m [0m[1m[0mipv6_address_count[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mipv6_addresses[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mmonitoring[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mpassword_data[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mplacement_group[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mplacement_partition_number[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mprimary_network_interface_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0msecondary_private_ips[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0msource_dest_check[0m[0m                    = true
      [32m+[0m [0m[1m[0msubnet_id[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtenancy[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0muser_data[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0muser_data_base64[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0muser_data_replace_on_change[0m[0m          = false
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m               = (known after apply)

      [32m+[0m [0mcapacity_reservation_specification {
          [32m+[0m [0m[1m[0mcapacity_reservation_preference[0m[0m = (known after apply)

          [32m+[0m [0mcapacity_reservation_target {
              [32m+[0m [0m[1m[0mcapacity_reservation_id[0m[0m                 = (known after apply)
              [32m+[0m [0m[1m[0mcapacity_reservation_resource_group_arn[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0mebs_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0msnapshot_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }

      [32m+[0m [0menclave_options {
          [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
        }

      [32m+[0m [0mephemeral_block_device {
          [32m+[0m [0m[1m[0mdevice_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mno_device[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mvirtual_name[0m[0m = (known after apply)
        }

      [32m+[0m [0mmaintenance_options {
          [32m+[0m [0m[1m[0mauto_recovery[0m[0m = (known after apply)
        }

      [32m+[0m [0mmetadata_options {
          [32m+[0m [0m[1m[0mhttp_endpoint[0m[0m               = (known after apply)
          [32m+[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhttp_tokens[0m[0m                 = (known after apply)
          [32m+[0m [0m[1m[0minstance_metadata_tags[0m[0m      = (known after apply)
        }

      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_index[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_card_index[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m  = (known after apply)
        }

      [32m+[0m [0mprivate_dns_name_options {
          [32m+[0m [0m[1m[0menable_resource_name_dns_a_record[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhostname_type[0m[0m                        = (known after apply)
        }

      [32m+[0m [0mroot_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_instance.vault["eu-west-1b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_instance" "vault" {
      [32m+[0m [0m[1m[0mami[0m[0m                                  = "ami-0f29c8402f8cce65c"
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0massociate_public_ip_address[0m[0m          = true
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcpu_core_count[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mcpu_threads_per_core[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_stop[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_termination[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mebs_optimized[0m[0m                        = false
      [32m+[0m [0m[1m[0mget_password_data[0m[0m                    = false
      [32m+[0m [0m[1m[0mhost_id[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0miam_instance_profile[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_initiated_shutdown_behavior[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0minstance_state[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0minstance_type[0m[0m                        = "t3.micro"
      [32m+[0m [0m[1m[0mipv6_address_count[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mipv6_addresses[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mmonitoring[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mpassword_data[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mplacement_group[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mplacement_partition_number[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mprimary_network_interface_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0msecondary_private_ips[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0msource_dest_check[0m[0m                    = true
      [32m+[0m [0m[1m[0msubnet_id[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtenancy[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0muser_data[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0muser_data_base64[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0muser_data_replace_on_change[0m[0m          = false
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m               = (known after apply)

      [32m+[0m [0mcapacity_reservation_specification {
          [32m+[0m [0m[1m[0mcapacity_reservation_preference[0m[0m = (known after apply)

          [32m+[0m [0mcapacity_reservation_target {
              [32m+[0m [0m[1m[0mcapacity_reservation_id[0m[0m                 = (known after apply)
              [32m+[0m [0m[1m[0mcapacity_reservation_resource_group_arn[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0mebs_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0msnapshot_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }

      [32m+[0m [0menclave_options {
          [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
        }

      [32m+[0m [0mephemeral_block_device {
          [32m+[0m [0m[1m[0mdevice_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mno_device[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mvirtual_name[0m[0m = (known after apply)
        }

      [32m+[0m [0mmaintenance_options {
          [32m+[0m [0m[1m[0mauto_recovery[0m[0m = (known after apply)
        }

      [32m+[0m [0mmetadata_options {
          [32m+[0m [0m[1m[0mhttp_endpoint[0m[0m               = (known after apply)
          [32m+[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhttp_tokens[0m[0m                 = (known after apply)
          [32m+[0m [0m[1m[0minstance_metadata_tags[0m[0m      = (known after apply)
        }

      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_index[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_card_index[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m  = (known after apply)
        }

      [32m+[0m [0mprivate_dns_name_options {
          [32m+[0m [0m[1m[0menable_resource_name_dns_a_record[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhostname_type[0m[0m                        = (known after apply)
        }

      [32m+[0m [0mroot_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_instance.vault["eu-west-1c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_instance" "vault" {
      [32m+[0m [0m[1m[0mami[0m[0m                                  = "ami-0f29c8402f8cce65c"
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0massociate_public_ip_address[0m[0m          = true
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcpu_core_count[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mcpu_threads_per_core[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_stop[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_termination[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mebs_optimized[0m[0m                        = false
      [32m+[0m [0m[1m[0mget_password_data[0m[0m                    = false
      [32m+[0m [0m[1m[0mhost_id[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0miam_instance_profile[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_initiated_shutdown_behavior[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0minstance_state[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0minstance_type[0m[0m                        = "t3.micro"
      [32m+[0m [0m[1m[0mipv6_address_count[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mipv6_addresses[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mmonitoring[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mpassword_data[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mplacement_group[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mplacement_partition_number[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mprimary_network_interface_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0msecondary_private_ips[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0msource_dest_check[0m[0m                    = true
      [32m+[0m [0m[1m[0msubnet_id[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtenancy[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0muser_data[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0muser_data_base64[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0muser_data_replace_on_change[0m[0m          = false
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m               = (known after apply)

      [32m+[0m [0mcapacity_reservation_specification {
          [32m+[0m [0m[1m[0mcapacity_reservation_preference[0m[0m = (known after apply)

          [32m+[0m [0mcapacity_reservation_target {
              [32m+[0m [0m[1m[0mcapacity_reservation_id[0m[0m                 = (known after apply)
              [32m+[0m [0m[1m[0mcapacity_reservation_resource_group_arn[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0mebs_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0msnapshot_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }

      [32m+[0m [0menclave_options {
          [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
        }

      [32m+[0m [0mephemeral_block_device {
          [32m+[0m [0m[1m[0mdevice_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mno_device[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mvirtual_name[0m[0m = (known after apply)
        }

      [32m+[0m [0mmaintenance_options {
          [32m+[0m [0m[1m[0mauto_recovery[0m[0m = (known after apply)
        }

      [32m+[0m [0mmetadata_options {
          [32m+[0m [0m[1m[0mhttp_endpoint[0m[0m               = (known after apply)
          [32m+[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhttp_tokens[0m[0m                 = (known after apply)
          [32m+[0m [0m[1m[0minstance_metadata_tags[0m[0m      = (known after apply)
        }

      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_index[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_card_index[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m  = (known after apply)
        }

      [32m+[0m [0mprivate_dns_name_options {
          [32m+[0m [0m[1m[0menable_resource_name_dns_a_record[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhostname_type[0m[0m                        = (known after apply)
        }

      [32m+[0m [0mroot_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_internet_gateway.gw[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_internet_gateway" "gw" {
      [32m+[0m [0m[1m[0marn[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m   = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_key_pair.vault-ssh-key[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_key_pair" "vault-ssh-key" {
      [32m+[0m [0m[1m[0marn[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mfingerprint[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mkey_name_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mkey_pair_id[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m        = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_kms_key.vault[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_kms_key" "vault" {
      [32m+[0m [0m[1m[0marn[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0mbypass_policy_lockout_safety_check[0m[0m = false
      [32m+[0m [0m[1m[0mcustomer_master_key_spec[0m[0m           = "SYMMETRIC_DEFAULT"
      [32m+[0m [0m[1m[0mdeletion_window_in_days[0m[0m            = 20
      [32m+[0m [0m[1m[0mdescription[0m[0m                        = "Vault unseal key eu-west-1"
      [32m+[0m [0m[1m[0menable_key_rotation[0m[0m                = false
      [32m+[0m [0m[1m[0mid[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mis_enabled[0m[0m                         = true
      [32m+[0m [0m[1m[0mkey_id[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mkey_usage[0m[0m                          = "ENCRYPT_DECRYPT"
      [32m+[0m [0m[1m[0mmulti_region[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mpolicy[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                               = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                           = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_route_table.route[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table" "route" {
      [32m+[0m [0m[1m[0marn[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpropagating_vgws[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroute[0m[0m            = [
          [32m+[0m [0m{
              [32m+[0m [0mcarrier_gateway_id         = ""
              [32m+[0m [0mcidr_block                 = "0.0.0.0/0"
              [32m+[0m [0mcore_network_arn           = ""
              [32m+[0m [0mdestination_prefix_list_id = ""
              [32m+[0m [0megress_only_gateway_id     = ""
              [32m+[0m [0mgateway_id                 = (known after apply)
              [32m+[0m [0minstance_id                = ""
              [32m+[0m [0mipv6_cidr_block            = ""
              [32m+[0m [0mlocal_gateway_id           = ""
              [32m+[0m [0mnat_gateway_id             = ""
              [32m+[0m [0mnetwork_interface_id       = ""
              [32m+[0m [0mtransit_gateway_id         = ""
              [32m+[0m [0mvpc_endpoint_id            = ""
              [32m+[0m [0mvpc_peering_connection_id  = ""
            },
        ]
      [32m+[0m [0m[1m[0mtags[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m           = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_route_table_association.route["eu-west-1a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "route" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_route_table_association.route["eu-west-1b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "route" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_route_table_association.route["eu-west-1c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "route" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_s3_bucket.raft_snapshot_bucket[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_bucket" "raft_snapshot_bucket" {
      [32m+[0m [0m[1m[0macceleration_status[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0macl[0m[0m                         = "private"
      [32m+[0m [0m[1m[0marn[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mbucket[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mbucket_domain_name[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mbucket_regional_domain_name[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m               = true
      [32m+[0m [0m[1m[0mhosted_zone_id[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mobject_lock_enabled[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mregion[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mrequest_payer[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mwebsite_domain[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mwebsite_endpoint[0m[0m            = (known after apply)

      [32m+[0m [0mcors_rule {
          [32m+[0m [0m[1m[0mallowed_headers[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallowed_methods[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallowed_origins[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mexpose_headers[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mmax_age_seconds[0m[0m = (known after apply)
        }

      [32m+[0m [0mgrant {
          [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mpermissions[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mtype[0m[0m        = (known after apply)
          [32m+[0m [0m[1m[0muri[0m[0m         = (known after apply)
        }

      [32m+[0m [0mlifecycle_rule {
          [32m+[0m [0m[1m[0mabort_incomplete_multipart_upload_days[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0menabled[0m[0m                                = (known after apply)
          [32m+[0m [0m[1m[0mid[0m[0m                                     = (known after apply)
          [32m+[0m [0m[1m[0mprefix[0m[0m                                 = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                                   = (known after apply)

          [32m+[0m [0mexpiration {
              [32m+[0m [0m[1m[0mdate[0m[0m                         = (known after apply)
              [32m+[0m [0m[1m[0mdays[0m[0m                         = (known after apply)
              [32m+[0m [0m[1m[0mexpired_object_delete_marker[0m[0m = (known after apply)
            }

          [32m+[0m [0mnoncurrent_version_expiration {
              [32m+[0m [0m[1m[0mdays[0m[0m = (known after apply)
            }

          [32m+[0m [0mnoncurrent_version_transition {
              [32m+[0m [0m[1m[0mdays[0m[0m          = (known after apply)
              [32m+[0m [0m[1m[0mstorage_class[0m[0m = (known after apply)
            }

          [32m+[0m [0mtransition {
              [32m+[0m [0m[1m[0mdate[0m[0m          = (known after apply)
              [32m+[0m [0m[1m[0mdays[0m[0m          = (known after apply)
              [32m+[0m [0m[1m[0mstorage_class[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0mlogging {
          [32m+[0m [0m[1m[0mtarget_bucket[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mtarget_prefix[0m[0m = (known after apply)
        }

      [32m+[0m [0mobject_lock_configuration {
          [32m+[0m [0m[1m[0mobject_lock_enabled[0m[0m = (known after apply)

          [32m+[0m [0mrule {
              [32m+[0m [0mdefault_retention {
                  [32m+[0m [0m[1m[0mdays[0m[0m  = (known after apply)
                  [32m+[0m [0m[1m[0mmode[0m[0m  = (known after apply)
                  [32m+[0m [0m[1m[0myears[0m[0m = (known after apply)
                }
            }
        }

      [32m+[0m [0mreplication_configuration {
          [32m+[0m [0m[1m[0mrole[0m[0m = (known after apply)

          [32m+[0m [0mrules {
              [32m+[0m [0m[1m[0mdelete_marker_replication_status[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mid[0m[0m                               = (known after apply)
              [32m+[0m [0m[1m[0mprefix[0m[0m                           = (known after apply)
              [32m+[0m [0m[1m[0mpriority[0m[0m                         = (known after apply)
              [32m+[0m [0m[1m[0mstatus[0m[0m                           = (known after apply)

              [32m+[0m [0mdestination {
                  [32m+[0m [0m[1m[0maccount_id[0m[0m         = (known after apply)
                  [32m+[0m [0m[1m[0mbucket[0m[0m             = (known after apply)
                  [32m+[0m [0m[1m[0mreplica_kms_key_id[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0mstorage_class[0m[0m      = (known after apply)

                  [32m+[0m [0maccess_control_translation {
                      [32m+[0m [0m[1m[0mowner[0m[0m = (known after apply)
                    }

                  [32m+[0m [0mmetrics {
                      [32m+[0m [0m[1m[0mminutes[0m[0m = (known after apply)
                      [32m+[0m [0m[1m[0mstatus[0m[0m  = (known after apply)
                    }

                  [32m+[0m [0mreplication_time {
                      [32m+[0m [0m[1m[0mminutes[0m[0m = (known after apply)
                      [32m+[0m [0m[1m[0mstatus[0m[0m  = (known after apply)
                    }
                }

              [32m+[0m [0mfilter {
                  [32m+[0m [0m[1m[0mprefix[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0mtags[0m[0m   = (known after apply)
                }

              [32m+[0m [0msource_selection_criteria {
                  [32m+[0m [0msse_kms_encrypted_objects {
                      [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
                    }
                }
            }
        }

      [32m+[0m [0mserver_side_encryption_configuration {
          [32m+[0m [0mrule {
              [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m = (known after apply)

              [32m+[0m [0mapply_server_side_encryption_by_default {
                  [32m+[0m [0m[1m[0mkms_master_key_id[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0msse_algorithm[0m[0m     = (known after apply)
                }
            }
        }

      [32m+[0m [0mversioning {
          [32m+[0m [0m[1m[0menabled[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mmfa_delete[0m[0m = (known after apply)
        }

      [32m+[0m [0mwebsite {
          [32m+[0m [0m[1m[0merror_document[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mindex_document[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mredirect_all_requests_to[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mrouting_rules[0m[0m            = (known after apply)
        }
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_security_group.vault[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "vault" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "SG for Vault SSH and Vault traffic"
      [32m+[0m [0m[1m[0megress[0m[0m                 = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "-1"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 0
            },
        ]
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 8200
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 8200
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 8201
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 8201
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"145.101.18.82/32",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 22
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 22
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"145.101.18.82/32",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 8
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "icmp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 0
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = []
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "icmp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = true
              [32m+[0m [0mto_port          = 254
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = []
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = true
              [32m+[0m [0mto_port          = 65535
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = []
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "udp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = true
              [32m+[0m [0mto_port          = 65535
            },
        ]
      [32m+[0m [0m[1m[0mname[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_subnet.public_subnet["eu-west-1a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "public_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "eu-west-1a"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "192.168.200.0/28"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = true
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_subnet.public_subnet["eu-west-1b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "public_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "eu-west-1b"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "192.168.200.16/28"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = true
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_subnet.public_subnet["eu-west-1c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "public_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "eu-west-1c"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "192.168.200.32/28"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = true
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_vpc.vpc[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_vpc" "vpc" {
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                           = "192.168.200.0/24"
      [32m+[0m [0m[1m[0mdefault_network_acl_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_route_table_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_security_group_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mdhcp_options_id[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0menable_classiclink[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0menable_classiclink_dns_support[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0menable_dns_hostnames[0m[0m                 = true
      [32m+[0m [0m[1m[0menable_dns_support[0m[0m                   = true
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_tenancy[0m[0m                     = "default"
      [32m+[0m [0m[1m[0mipv6_association_id[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_network_border_group[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mmain_route_table_id[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.null_resource.add_to_known_hosts["eu-west-1a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "null_resource" "add_to_known_hosts" {
      [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.null_resource.add_to_known_hosts["eu-west-1b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "null_resource" "add_to_known_hosts" {
      [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.null_resource.add_to_known_hosts["eu-west-1c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "null_resource" "add_to_known_hosts" {
      [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.null_resource.main[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "null_resource" "main" {
      [32m+[0m [0m[1m[0mid[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mtriggers[0m[0m = {
          [32m+[0m [0m"region" = "eu-west-1"
        }
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.tls_cert_request.csr_vault_server["eu-west-1a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_cert_request" "csr_vault_server" {
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mdns_names[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mip_addresses[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mkey_algorithm[0m[0m    = "RSA"
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m  = (sensitive value)

      [32m+[0m [0msubject {
          [32m+[0m [0m[1m[0mcommon_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0morganization[0m[0m = "Vault setup"
        }
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.tls_cert_request.csr_vault_server["eu-west-1b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_cert_request" "csr_vault_server" {
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mdns_names[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mip_addresses[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mkey_algorithm[0m[0m    = "RSA"
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m  = (sensitive value)

      [32m+[0m [0msubject {
          [32m+[0m [0m[1m[0mcommon_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0morganization[0m[0m = "Vault setup"
        }
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.tls_cert_request.csr_vault_server["eu-west-1c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_cert_request" "csr_vault_server" {
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mdns_names[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mip_addresses[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mkey_algorithm[0m[0m    = "RSA"
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m  = (sensitive value)

      [32m+[0m [0msubject {
          [32m+[0m [0m[1m[0mcommon_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0morganization[0m[0m = "Vault setup"
        }
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.tls_locally_signed_cert.vault_cert_sign["eu-west-1a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_locally_signed_cert" "vault_cert_sign" {
      [32m+[0m [0m[1m[0mallowed_uses[0m[0m          = [
          [32m+[0m [0m"digital_signature",
          [32m+[0m [0m"key_encipherment",
          [32m+[0m [0m"key_agreement",
        ]
      [32m+[0m [0m[1m[0mca_cert_pem[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mca_key_algorithm[0m[0m      = "RSA"
      [32m+[0m [0m[1m[0mca_private_key_pem[0m[0m    = (sensitive value)
      [32m+[0m [0m[1m[0mcert_pem[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mearly_renewal_hours[0m[0m   = 0
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mis_ca_certificate[0m[0m     = false
      [32m+[0m [0m[1m[0mready_for_renewal[0m[0m     = true
      [32m+[0m [0m[1m[0mvalidity_end_time[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mvalidity_period_hours[0m[0m = 3600
      [32m+[0m [0m[1m[0mvalidity_start_time[0m[0m   = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.tls_locally_signed_cert.vault_cert_sign["eu-west-1b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_locally_signed_cert" "vault_cert_sign" {
      [32m+[0m [0m[1m[0mallowed_uses[0m[0m          = [
          [32m+[0m [0m"digital_signature",
          [32m+[0m [0m"key_encipherment",
          [32m+[0m [0m"key_agreement",
        ]
      [32m+[0m [0m[1m[0mca_cert_pem[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mca_key_algorithm[0m[0m      = "RSA"
      [32m+[0m [0m[1m[0mca_private_key_pem[0m[0m    = (sensitive value)
      [32m+[0m [0m[1m[0mcert_pem[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mearly_renewal_hours[0m[0m   = 0
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mis_ca_certificate[0m[0m     = false
      [32m+[0m [0m[1m[0mready_for_renewal[0m[0m     = true
      [32m+[0m [0m[1m[0mvalidity_end_time[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mvalidity_period_hours[0m[0m = 3600
      [32m+[0m [0m[1m[0mvalidity_start_time[0m[0m   = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.tls_locally_signed_cert.vault_cert_sign["eu-west-1c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_locally_signed_cert" "vault_cert_sign" {
      [32m+[0m [0m[1m[0mallowed_uses[0m[0m          = [
          [32m+[0m [0m"digital_signature",
          [32m+[0m [0m"key_encipherment",
          [32m+[0m [0m"key_agreement",
        ]
      [32m+[0m [0m[1m[0mca_cert_pem[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mca_key_algorithm[0m[0m      = "RSA"
      [32m+[0m [0m[1m[0mca_private_key_pem[0m[0m    = (sensitive value)
      [32m+[0m [0m[1m[0mcert_pem[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mearly_renewal_hours[0m[0m   = 0
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mis_ca_certificate[0m[0m     = false
      [32m+[0m [0m[1m[0mready_for_renewal[0m[0m     = true
      [32m+[0m [0m[1m[0mvalidity_end_time[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mvalidity_period_hours[0m[0m = 3600
      [32m+[0m [0m[1m[0mvalidity_start_time[0m[0m   = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.tls_private_key.host[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "host" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 4096
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.tls_private_key.host[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "host" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "ECDSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P384"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.tls_private_key.vault-ssh-key[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "vault-ssh-key" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.tls_private_key.vault_tls_rsa_key["eu-west-1a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "vault_tls_rsa_key" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.tls_private_key.vault_tls_rsa_key["eu-west-1b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "vault_tls_rsa_key" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.tls_private_key.vault_tls_rsa_key["eu-west-1c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "vault_tls_rsa_key" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.data.aws_subnet.subnets["us-east-2a"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_subnet" "subnets" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mavailable_ip_address_count[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = (known after apply)
      [32m+[0m [0m[1m[0mcustomer_owned_ipv4_pool[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mdefault_for_az[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mmap_customer_owned_ip_on_launch[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                                          = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.data.aws_subnet.subnets["us-east-2b"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_subnet" "subnets" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mavailable_ip_address_count[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = (known after apply)
      [32m+[0m [0m[1m[0mcustomer_owned_ipv4_pool[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mdefault_for_az[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mmap_customer_owned_ip_on_launch[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                                          = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.data.aws_subnet.subnets["us-east-2c"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_subnet" "subnets" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mavailable_ip_address_count[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = (known after apply)
      [32m+[0m [0m[1m[0mcustomer_owned_ipv4_pool[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mdefault_for_az[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mmap_customer_owned_ip_on_launch[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                                          = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.data.cloudinit_config.myhost["us-east-2a"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "cloudinit_config" "myhost" {
      [32m+[0m [0m[1m[0mbase64_encode[0m[0m = true
      [32m+[0m [0m[1m[0mgzip[0m[0m          = true
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mrendered[0m[0m      = (known after apply)

      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                ## template: jinja
                #!/usr/bin/env bash
                
                # Fixing Systemd Unit file because of "Unknown lvalue 'StartLimitIntervalSec' in section 'Unit'"
                cat << EOF > /usr/lib/systemd/system/vault.service
                [Unit]
                Description="HashiCorp Vault - A tool for managing secrets"
                Documentation=https://www.vaultproject.io/docs/
                Requires=network-online.target
                After=network-online.target
                ConditionFileNotEmpty=/etc/vault.d/vault.hcl
                
                [Service]
                User=vault
                Group=vault
                ProtectSystem=full
                ProtectHome=read-only
                PrivateTmp=yes
                PrivateDevices=yes
                SecureBits=keep-caps
                AmbientCapabilities=CAP_IPC_LOCK
                CapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK
                NoNewPrivileges=yes
                ExecStart=/usr/bin/vault server -config=/etc/vault.d/vault.hcl
                ExecReload=/bin/kill --signal HUP $MAINPID
                KillMode=process
                KillSignal=SIGINT
                Restart=on-failure
                RestartSec=5
                TimeoutStopSec=30
                StartLimitInterval=60
                StartLimitBurst=3
                LimitNOFILE=65536
                LimitMEMLOCK=infinity
                StartLimitInterval=30s
                StartLimitBurst=3
                # Adding VAULT_LICENSE_PATH environment in case newer version of Vault > 1.8, so autoloading license can be provided. In case older version of Vault is used < 1.8 the VAULT_LICENSE_PATH env var has not meaning
                Environment="VAULT_LICENSE_PATH=/home/ubuntu/_vaultSetup/license.hclic"
                
                [Install]
                WantedBy=multi-user.target
                EOF
                
                echo "SystemD applied..."|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                
                sudo systemctl daemon-reload
                
                sudo systemctl stop vault
                sudo systemctl start vault
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                #!/bin/bash
                
                # Making working dir for Vault setup
                mkdir -p /home/ubuntu/_vaultSetup
                touch /home/ubuntu/_vaultSetup/keys.json
                touch /home/ubuntu/_vaultSetup/vault_debug
                
                sudo chown -R vault:vault /home/ubuntu/_vaultSetup
                sudo chown ubuntu:ubuntu /home/ubuntu
                
                echo "$(date): Initializing Vault..."|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                
                echo "Initializing Vault..."
                # Wait for Vault to start 
                sleep 1
                
                vault operator init -format=json -recovery-shares=5 -recovery-threshold=3 > /home/ubuntu/_vaultSetup/keys.json
                
                ROOT_TOKEN=`jq -r .root_token /home/ubuntu/_vaultSetup/keys.json`
                
                if [ -z "$ROOT_TOKEN" ]
                then
                    echo "`date`: ROOT_TOKEN is empty !!!"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                    exit 1
                fi
                
                cat << EOF >> /etc/profile.d/vault.sh
                export VAULT_TOKEN=$ROOT_TOKEN
                EOF
                
                
                # Install the Vault license and deletes the license file
                function install_vault_license () {
                  
                curl -s --request PUT --header "X-Vault-Token: $1" --data @/home/ubuntu/_vaultSetup/license.json https://127.0.0.1:8200/v1/sys/license
                
                if [ $? -eq 0 ]
                then
                    #rm /home/ubuntu/_vaultSetup/license.json
                    echo "$(date): Writing license file result: OK"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                else
                    echo "$(date): Writing license file result: FAILED"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                fi
                }
                
                # Wait for Vault to get Initialized with KMS
                sleep 10
                
                # Check if Vault is ready for being licensed
                while true
                do
                  if [[ $(curl -X GET -LI -o /dev/null -w '%{http_code}' -s https://127.0.0.1:8200/v1/sys/health) =~ (200|429|473) ]] # HTTP codes that show if Vault is ready to be used
                  then
                    # Checking if Vault is using autoloading license (version > 1.8) if 404 is returned, autoload is not used, so installing the license via /sys/license endpoint
                    if [[ $(curl -X GET -H "X-Vault-Token: $ROOT_TOKEN" -o /dev/null -w '%{http_code}' -s https://127.0.0.1:8200/v1/sys/license/status) =~ (404) ]]
                    then
                      install_vault_license $ROOT_TOKEN
                      break 2
                    # If autoloading license is used, break from the loop
                    elif [[ $(curl -X GET -LI -H "X-Vault-Token: $ROOT_TOKEN" -o /dev/null -w '%{http_code}' -s https://127.0.0.1:8200/v1/sys/license/status) =~ (200) ]]
                    then
                    {
                      echo "$(date): AUTOLOADING is used!"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                      break 2
                      }
                    fi
                  echo "$(date): Vault is not ready yet!" |sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                  sleep 1
                  fi
                done
                
                ## Add audit file
                #curl -s -X PUT --header "X-Vault-Token: $ROOT_TOKEN" -H "X-Vault-Request: true" -d '{"type":"file","description":"Audit file","options":{"file_path":"/opt/vault/audit.log"},"local":false}' https://127.0.0.1:8200/v1/sys/audit/file
                #
                #if [ $? -eq 0 ].
                #then
                #   echo "$(date): Audit enabled: OK"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                #   retval="OK"
                #else
                #   echo "$(date): Audit enabled: FAILED"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                #fi
                ##
                
                # For debugging
                echo "$(date): This is an active node, other nodes join to it" |sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text_cloud-config"
        }
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.data.cloudinit_config.myhost["us-east-2b"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "cloudinit_config" "myhost" {
      [32m+[0m [0m[1m[0mbase64_encode[0m[0m = true
      [32m+[0m [0m[1m[0mgzip[0m[0m          = true
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mrendered[0m[0m      = (known after apply)

      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                ## template: jinja
                #!/usr/bin/env bash
                
                # Fixing Systemd Unit file because of "Unknown lvalue 'StartLimitIntervalSec' in section 'Unit'"
                cat << EOF > /usr/lib/systemd/system/vault.service
                [Unit]
                Description="HashiCorp Vault - A tool for managing secrets"
                Documentation=https://www.vaultproject.io/docs/
                Requires=network-online.target
                After=network-online.target
                ConditionFileNotEmpty=/etc/vault.d/vault.hcl
                
                [Service]
                User=vault
                Group=vault
                ProtectSystem=full
                ProtectHome=read-only
                PrivateTmp=yes
                PrivateDevices=yes
                SecureBits=keep-caps
                AmbientCapabilities=CAP_IPC_LOCK
                CapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK
                NoNewPrivileges=yes
                ExecStart=/usr/bin/vault server -config=/etc/vault.d/vault.hcl
                ExecReload=/bin/kill --signal HUP $MAINPID
                KillMode=process
                KillSignal=SIGINT
                Restart=on-failure
                RestartSec=5
                TimeoutStopSec=30
                StartLimitInterval=60
                StartLimitBurst=3
                LimitNOFILE=65536
                LimitMEMLOCK=infinity
                StartLimitInterval=30s
                StartLimitBurst=3
                # Adding VAULT_LICENSE_PATH environment in case newer version of Vault > 1.8, so autoloading license can be provided. In case older version of Vault is used < 1.8 the VAULT_LICENSE_PATH env var has not meaning
                Environment="VAULT_LICENSE_PATH=/home/ubuntu/_vaultSetup/license.hclic"
                
                [Install]
                WantedBy=multi-user.target
                EOF
                
                echo "SystemD applied..."|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                
                sudo systemctl daemon-reload
                
                sudo systemctl stop vault
                sudo systemctl start vault
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                #!/usr/bin/env bash
                
                # This does nothing for now
                
                # No need to write the license to each node, it is stored in the backend storage
                
                # Debugging purposes
                echo "$(date) - This is a follower node, it joins to active node" s|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text_cloud-config"
        }
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.data.cloudinit_config.myhost["us-east-2c"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "cloudinit_config" "myhost" {
      [32m+[0m [0m[1m[0mbase64_encode[0m[0m = true
      [32m+[0m [0m[1m[0mgzip[0m[0m          = true
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mrendered[0m[0m      = (known after apply)

      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                ## template: jinja
                #!/usr/bin/env bash
                
                # Fixing Systemd Unit file because of "Unknown lvalue 'StartLimitIntervalSec' in section 'Unit'"
                cat << EOF > /usr/lib/systemd/system/vault.service
                [Unit]
                Description="HashiCorp Vault - A tool for managing secrets"
                Documentation=https://www.vaultproject.io/docs/
                Requires=network-online.target
                After=network-online.target
                ConditionFileNotEmpty=/etc/vault.d/vault.hcl
                
                [Service]
                User=vault
                Group=vault
                ProtectSystem=full
                ProtectHome=read-only
                PrivateTmp=yes
                PrivateDevices=yes
                SecureBits=keep-caps
                AmbientCapabilities=CAP_IPC_LOCK
                CapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK
                NoNewPrivileges=yes
                ExecStart=/usr/bin/vault server -config=/etc/vault.d/vault.hcl
                ExecReload=/bin/kill --signal HUP $MAINPID
                KillMode=process
                KillSignal=SIGINT
                Restart=on-failure
                RestartSec=5
                TimeoutStopSec=30
                StartLimitInterval=60
                StartLimitBurst=3
                LimitNOFILE=65536
                LimitMEMLOCK=infinity
                StartLimitInterval=30s
                StartLimitBurst=3
                # Adding VAULT_LICENSE_PATH environment in case newer version of Vault > 1.8, so autoloading license can be provided. In case older version of Vault is used < 1.8 the VAULT_LICENSE_PATH env var has not meaning
                Environment="VAULT_LICENSE_PATH=/home/ubuntu/_vaultSetup/license.hclic"
                
                [Install]
                WantedBy=multi-user.target
                EOF
                
                echo "SystemD applied..."|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                
                sudo systemctl daemon-reload
                
                sudo systemctl stop vault
                sudo systemctl start vault
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                #!/usr/bin/env bash
                
                # This does nothing for now
                
                # No need to write the license to each node, it is stored in the backend storage
                
                # Debugging purposes
                echo "$(date) - This is a follower node, it joins to active node" s|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text_cloud-config"
        }
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_iam_instance_profile.vault-instance-profile[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_instance_profile" "vault-instance-profile" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mcreate_date[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mrole[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0munique_id[0m[0m   = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_iam_policy.vault_aws_auth_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vault_aws_auth_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Policy that provides the needed permissions for the Vault server to verify users via the AWS authentication method (iam type)"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"iam:GetUser",
                          [32m+[0m [0m"iam:GetRole",
                          [32m+[0m [0m"iam:GetInstanceProfile",
                          [32m+[0m [0m"ec2:DescribeInstances",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "vaultPolicyDocumentVaultAWSAuth"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_iam_policy.vault_aws_secret_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vault_aws_secret_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Policy that provides the needed permissions for the Vault server's aws secrets engine to function properly"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"iam:RemoveUserFromGroup",
                          [32m+[0m [0m"iam:PutUserPolicy",
                          [32m+[0m [0m"iam:ListUserPolicies",
                          [32m+[0m [0m"iam:ListGroupsForUser",
                          [32m+[0m [0m"iam:ListAttachedUserPolicies",
                          [32m+[0m [0m"iam:ListAccessKeys",
                          [32m+[0m [0m"iam:DetachUserPolicy",
                          [32m+[0m [0m"iam:DeleteUserPolicy",
                          [32m+[0m [0m"iam:DeleteUser",
                          [32m+[0m [0m"iam:DeleteAccessKey",
                          [32m+[0m [0m"iam:CreateUser",
                          [32m+[0m [0m"iam:CreateAccessKey",
                          [32m+[0m [0m"iam:AttachUserPolicy",
                          [32m+[0m [0m"iam:AddUserToGroup",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "arn:aws:iam::925007469123:user/vault-*"
                      [32m+[0m [0mSid      = "vaultPolicyDocumentVaultAWSSecret"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_iam_policy.vault_kms_auto_unseal_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vault_kms_auto_unseal_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Policy that provides the needed KMS permission for Vault server's auto unseal feature"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"kms:Encrypt",
                          [32m+[0m [0m"kms:DescribeKey",
                          [32m+[0m [0m"kms:Decrypt",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "vaultPolicyDocumentKMSUnseal"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_iam_policy.vault_raft_auto_join_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vault_raft_auto_join_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Policy that provides the needed EC2 DescribeInstances permissions in order for the Raft auto join feature to work in AWS environment"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = "ec2:DescribeInstances"
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "vaultPolicyDocumentRaftAutoJoin"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_iam_policy.vault_s3_raft_snapshot_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vault_s3_raft_snapshot_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Policy that provides the needed permissions to access S3 bucket in order to store Raft snapsahot"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:PutObject",
                          [32m+[0m [0m"s3:ListBucket",
                          [32m+[0m [0m"s3:DeleteObject",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "vaultPolicyDocumentS3snapshot"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_iam_role.vault_server_role[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "vault_server_role" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "ec2.amazonaws.com"
                        }
                      [32m+[0m [0mSid       = ""
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_instance.vault["us-east-2a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_instance" "vault" {
      [32m+[0m [0m[1m[0mami[0m[0m                                  = "ami-05803413c51f242b7"
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0massociate_public_ip_address[0m[0m          = true
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcpu_core_count[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mcpu_threads_per_core[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_stop[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_termination[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mebs_optimized[0m[0m                        = false
      [32m+[0m [0m[1m[0mget_password_data[0m[0m                    = false
      [32m+[0m [0m[1m[0mhost_id[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0miam_instance_profile[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_initiated_shutdown_behavior[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0minstance_state[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0minstance_type[0m[0m                        = "t3.micro"
      [32m+[0m [0m[1m[0mipv6_address_count[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mipv6_addresses[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mmonitoring[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mpassword_data[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mplacement_group[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mplacement_partition_number[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mprimary_network_interface_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0msecondary_private_ips[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0msource_dest_check[0m[0m                    = true
      [32m+[0m [0m[1m[0msubnet_id[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtenancy[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0muser_data[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0muser_data_base64[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0muser_data_replace_on_change[0m[0m          = false
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m               = (known after apply)

      [32m+[0m [0mcapacity_reservation_specification {
          [32m+[0m [0m[1m[0mcapacity_reservation_preference[0m[0m = (known after apply)

          [32m+[0m [0mcapacity_reservation_target {
              [32m+[0m [0m[1m[0mcapacity_reservation_id[0m[0m                 = (known after apply)
              [32m+[0m [0m[1m[0mcapacity_reservation_resource_group_arn[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0mebs_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0msnapshot_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }

      [32m+[0m [0menclave_options {
          [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
        }

      [32m+[0m [0mephemeral_block_device {
          [32m+[0m [0m[1m[0mdevice_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mno_device[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mvirtual_name[0m[0m = (known after apply)
        }

      [32m+[0m [0mmaintenance_options {
          [32m+[0m [0m[1m[0mauto_recovery[0m[0m = (known after apply)
        }

      [32m+[0m [0mmetadata_options {
          [32m+[0m [0m[1m[0mhttp_endpoint[0m[0m               = (known after apply)
          [32m+[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhttp_tokens[0m[0m                 = (known after apply)
          [32m+[0m [0m[1m[0minstance_metadata_tags[0m[0m      = (known after apply)
        }

      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_index[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_card_index[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m  = (known after apply)
        }

      [32m+[0m [0mprivate_dns_name_options {
          [32m+[0m [0m[1m[0menable_resource_name_dns_a_record[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhostname_type[0m[0m                        = (known after apply)
        }

      [32m+[0m [0mroot_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_instance.vault["us-east-2b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_instance" "vault" {
      [32m+[0m [0m[1m[0mami[0m[0m                                  = "ami-05803413c51f242b7"
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0massociate_public_ip_address[0m[0m          = true
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcpu_core_count[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mcpu_threads_per_core[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_stop[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_termination[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mebs_optimized[0m[0m                        = false
      [32m+[0m [0m[1m[0mget_password_data[0m[0m                    = false
      [32m+[0m [0m[1m[0mhost_id[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0miam_instance_profile[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_initiated_shutdown_behavior[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0minstance_state[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0minstance_type[0m[0m                        = "t3.micro"
      [32m+[0m [0m[1m[0mipv6_address_count[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mipv6_addresses[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mmonitoring[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mpassword_data[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mplacement_group[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mplacement_partition_number[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mprimary_network_interface_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0msecondary_private_ips[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0msource_dest_check[0m[0m                    = true
      [32m+[0m [0m[1m[0msubnet_id[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtenancy[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0muser_data[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0muser_data_base64[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0muser_data_replace_on_change[0m[0m          = false
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m               = (known after apply)

      [32m+[0m [0mcapacity_reservation_specification {
          [32m+[0m [0m[1m[0mcapacity_reservation_preference[0m[0m = (known after apply)

          [32m+[0m [0mcapacity_reservation_target {
              [32m+[0m [0m[1m[0mcapacity_reservation_id[0m[0m                 = (known after apply)
              [32m+[0m [0m[1m[0mcapacity_reservation_resource_group_arn[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0mebs_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0msnapshot_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }

      [32m+[0m [0menclave_options {
          [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
        }

      [32m+[0m [0mephemeral_block_device {
          [32m+[0m [0m[1m[0mdevice_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mno_device[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mvirtual_name[0m[0m = (known after apply)
        }

      [32m+[0m [0mmaintenance_options {
          [32m+[0m [0m[1m[0mauto_recovery[0m[0m = (known after apply)
        }

      [32m+[0m [0mmetadata_options {
          [32m+[0m [0m[1m[0mhttp_endpoint[0m[0m               = (known after apply)
          [32m+[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhttp_tokens[0m[0m                 = (known after apply)
          [32m+[0m [0m[1m[0minstance_metadata_tags[0m[0m      = (known after apply)
        }

      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_index[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_card_index[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m  = (known after apply)
        }

      [32m+[0m [0mprivate_dns_name_options {
          [32m+[0m [0m[1m[0menable_resource_name_dns_a_record[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhostname_type[0m[0m                        = (known after apply)
        }

      [32m+[0m [0mroot_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_instance.vault["us-east-2c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_instance" "vault" {
      [32m+[0m [0m[1m[0mami[0m[0m                                  = "ami-05803413c51f242b7"
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0massociate_public_ip_address[0m[0m          = true
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcpu_core_count[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mcpu_threads_per_core[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_stop[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_termination[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mebs_optimized[0m[0m                        = false
      [32m+[0m [0m[1m[0mget_password_data[0m[0m                    = false
      [32m+[0m [0m[1m[0mhost_id[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0miam_instance_profile[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_initiated_shutdown_behavior[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0minstance_state[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0minstance_type[0m[0m                        = "t3.micro"
      [32m+[0m [0m[1m[0mipv6_address_count[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mipv6_addresses[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mmonitoring[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mpassword_data[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mplacement_group[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mplacement_partition_number[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mprimary_network_interface_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0msecondary_private_ips[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0msource_dest_check[0m[0m                    = true
      [32m+[0m [0m[1m[0msubnet_id[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtenancy[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0muser_data[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0muser_data_base64[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0muser_data_replace_on_change[0m[0m          = false
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m               = (known after apply)

      [32m+[0m [0mcapacity_reservation_specification {
          [32m+[0m [0m[1m[0mcapacity_reservation_preference[0m[0m = (known after apply)

          [32m+[0m [0mcapacity_reservation_target {
              [32m+[0m [0m[1m[0mcapacity_reservation_id[0m[0m                 = (known after apply)
              [32m+[0m [0m[1m[0mcapacity_reservation_resource_group_arn[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0mebs_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0msnapshot_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }

      [32m+[0m [0menclave_options {
          [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
        }

      [32m+[0m [0mephemeral_block_device {
          [32m+[0m [0m[1m[0mdevice_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mno_device[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mvirtual_name[0m[0m = (known after apply)
        }

      [32m+[0m [0mmaintenance_options {
          [32m+[0m [0m[1m[0mauto_recovery[0m[0m = (known after apply)
        }

      [32m+[0m [0mmetadata_options {
          [32m+[0m [0m[1m[0mhttp_endpoint[0m[0m               = (known after apply)
          [32m+[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhttp_tokens[0m[0m                 = (known after apply)
          [32m+[0m [0m[1m[0minstance_metadata_tags[0m[0m      = (known after apply)
        }

      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_index[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_card_index[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m  = (known after apply)
        }

      [32m+[0m [0mprivate_dns_name_options {
          [32m+[0m [0m[1m[0menable_resource_name_dns_a_record[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhostname_type[0m[0m                        = (known after apply)
        }

      [32m+[0m [0mroot_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_internet_gateway.gw[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_internet_gateway" "gw" {
      [32m+[0m [0m[1m[0marn[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m   = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_key_pair.vault-ssh-key[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_key_pair" "vault-ssh-key" {
      [32m+[0m [0m[1m[0marn[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mfingerprint[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mkey_name_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mkey_pair_id[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m        = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_kms_key.vault[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_kms_key" "vault" {
      [32m+[0m [0m[1m[0marn[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0mbypass_policy_lockout_safety_check[0m[0m = false
      [32m+[0m [0m[1m[0mcustomer_master_key_spec[0m[0m           = "SYMMETRIC_DEFAULT"
      [32m+[0m [0m[1m[0mdeletion_window_in_days[0m[0m            = 20
      [32m+[0m [0m[1m[0mdescription[0m[0m                        = "Vault unseal key us-east-2"
      [32m+[0m [0m[1m[0menable_key_rotation[0m[0m                = false
      [32m+[0m [0m[1m[0mid[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mis_enabled[0m[0m                         = true
      [32m+[0m [0m[1m[0mkey_id[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mkey_usage[0m[0m                          = "ENCRYPT_DECRYPT"
      [32m+[0m [0m[1m[0mmulti_region[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mpolicy[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                               = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                           = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_route_table.route[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table" "route" {
      [32m+[0m [0m[1m[0marn[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpropagating_vgws[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroute[0m[0m            = [
          [32m+[0m [0m{
              [32m+[0m [0mcarrier_gateway_id         = ""
              [32m+[0m [0mcidr_block                 = "0.0.0.0/0"
              [32m+[0m [0mcore_network_arn           = ""
              [32m+[0m [0mdestination_prefix_list_id = ""
              [32m+[0m [0megress_only_gateway_id     = ""
              [32m+[0m [0mgateway_id                 = (known after apply)
              [32m+[0m [0minstance_id                = ""
              [32m+[0m [0mipv6_cidr_block            = ""
              [32m+[0m [0mlocal_gateway_id           = ""
              [32m+[0m [0mnat_gateway_id             = ""
              [32m+[0m [0mnetwork_interface_id       = ""
              [32m+[0m [0mtransit_gateway_id         = ""
              [32m+[0m [0mvpc_endpoint_id            = ""
              [32m+[0m [0mvpc_peering_connection_id  = ""
            },
        ]
      [32m+[0m [0m[1m[0mtags[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m           = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_route_table_association.route["us-east-2a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "route" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_route_table_association.route["us-east-2b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "route" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_route_table_association.route["us-east-2c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "route" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_s3_bucket.raft_snapshot_bucket[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_bucket" "raft_snapshot_bucket" {
      [32m+[0m [0m[1m[0macceleration_status[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0macl[0m[0m                         = "private"
      [32m+[0m [0m[1m[0marn[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mbucket[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mbucket_domain_name[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mbucket_regional_domain_name[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m               = true
      [32m+[0m [0m[1m[0mhosted_zone_id[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mobject_lock_enabled[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mregion[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mrequest_payer[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mwebsite_domain[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mwebsite_endpoint[0m[0m            = (known after apply)

      [32m+[0m [0mcors_rule {
          [32m+[0m [0m[1m[0mallowed_headers[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallowed_methods[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallowed_origins[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mexpose_headers[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mmax_age_seconds[0m[0m = (known after apply)
        }

      [32m+[0m [0mgrant {
          [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mpermissions[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mtype[0m[0m        = (known after apply)
          [32m+[0m [0m[1m[0muri[0m[0m         = (known after apply)
        }

      [32m+[0m [0mlifecycle_rule {
          [32m+[0m [0m[1m[0mabort_incomplete_multipart_upload_days[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0menabled[0m[0m                                = (known after apply)
          [32m+[0m [0m[1m[0mid[0m[0m                                     = (known after apply)
          [32m+[0m [0m[1m[0mprefix[0m[0m                                 = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                                   = (known after apply)

          [32m+[0m [0mexpiration {
              [32m+[0m [0m[1m[0mdate[0m[0m                         = (known after apply)
              [32m+[0m [0m[1m[0mdays[0m[0m                         = (known after apply)
              [32m+[0m [0m[1m[0mexpired_object_delete_marker[0m[0m = (known after apply)
            }

          [32m+[0m [0mnoncurrent_version_expiration {
              [32m+[0m [0m[1m[0mdays[0m[0m = (known after apply)
            }

          [32m+[0m [0mnoncurrent_version_transition {
              [32m+[0m [0m[1m[0mdays[0m[0m          = (known after apply)
              [32m+[0m [0m[1m[0mstorage_class[0m[0m = (known after apply)
            }

          [32m+[0m [0mtransition {
              [32m+[0m [0m[1m[0mdate[0m[0m          = (known after apply)
              [32m+[0m [0m[1m[0mdays[0m[0m          = (known after apply)
              [32m+[0m [0m[1m[0mstorage_class[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0mlogging {
          [32m+[0m [0m[1m[0mtarget_bucket[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mtarget_prefix[0m[0m = (known after apply)
        }

      [32m+[0m [0mobject_lock_configuration {
          [32m+[0m [0m[1m[0mobject_lock_enabled[0m[0m = (known after apply)

          [32m+[0m [0mrule {
              [32m+[0m [0mdefault_retention {
                  [32m+[0m [0m[1m[0mdays[0m[0m  = (known after apply)
                  [32m+[0m [0m[1m[0mmode[0m[0m  = (known after apply)
                  [32m+[0m [0m[1m[0myears[0m[0m = (known after apply)
                }
            }
        }

      [32m+[0m [0mreplication_configuration {
          [32m+[0m [0m[1m[0mrole[0m[0m = (known after apply)

          [32m+[0m [0mrules {
              [32m+[0m [0m[1m[0mdelete_marker_replication_status[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mid[0m[0m                               = (known after apply)
              [32m+[0m [0m[1m[0mprefix[0m[0m                           = (known after apply)
              [32m+[0m [0m[1m[0mpriority[0m[0m                         = (known after apply)
              [32m+[0m [0m[1m[0mstatus[0m[0m                           = (known after apply)

              [32m+[0m [0mdestination {
                  [32m+[0m [0m[1m[0maccount_id[0m[0m         = (known after apply)
                  [32m+[0m [0m[1m[0mbucket[0m[0m             = (known after apply)
                  [32m+[0m [0m[1m[0mreplica_kms_key_id[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0mstorage_class[0m[0m      = (known after apply)

                  [32m+[0m [0maccess_control_translation {
                      [32m+[0m [0m[1m[0mowner[0m[0m = (known after apply)
                    }

                  [32m+[0m [0mmetrics {
                      [32m+[0m [0m[1m[0mminutes[0m[0m = (known after apply)
                      [32m+[0m [0m[1m[0mstatus[0m[0m  = (known after apply)
                    }

                  [32m+[0m [0mreplication_time {
                      [32m+[0m [0m[1m[0mminutes[0m[0m = (known after apply)
                      [32m+[0m [0m[1m[0mstatus[0m[0m  = (known after apply)
                    }
                }

              [32m+[0m [0mfilter {
                  [32m+[0m [0m[1m[0mprefix[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0mtags[0m[0m   = (known after apply)
                }

              [32m+[0m [0msource_selection_criteria {
                  [32m+[0m [0msse_kms_encrypted_objects {
                      [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
                    }
                }
            }
        }

      [32m+[0m [0mserver_side_encryption_configuration {
          [32m+[0m [0mrule {
              [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m = (known after apply)

              [32m+[0m [0mapply_server_side_encryption_by_default {
                  [32m+[0m [0m[1m[0mkms_master_key_id[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0msse_algorithm[0m[0m     = (known after apply)
                }
            }
        }

      [32m+[0m [0mversioning {
          [32m+[0m [0m[1m[0menabled[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mmfa_delete[0m[0m = (known after apply)
        }

      [32m+[0m [0mwebsite {
          [32m+[0m [0m[1m[0merror_document[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mindex_document[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mredirect_all_requests_to[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mrouting_rules[0m[0m            = (known after apply)
        }
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_security_group.vault[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "vault" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "SG for Vault SSH and Vault traffic"
      [32m+[0m [0m[1m[0megress[0m[0m                 = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "-1"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 0
            },
        ]
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 8200
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 8200
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 8201
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 8201
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"145.101.18.82/32",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 22
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 22
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"145.101.18.82/32",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 8
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "icmp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 0
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = []
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "icmp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = true
              [32m+[0m [0mto_port          = 254
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = []
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = true
              [32m+[0m [0mto_port          = 65535
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = []
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "udp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = true
              [32m+[0m [0mto_port          = 65535
            },
        ]
      [32m+[0m [0m[1m[0mname[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_subnet.public_subnet["us-east-2a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "public_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "us-east-2a"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "192.168.0.0/28"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = true
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_subnet.public_subnet["us-east-2b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "public_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "us-east-2b"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "192.168.0.16/28"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = true
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_subnet.public_subnet["us-east-2c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "public_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "us-east-2c"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "192.168.0.32/28"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = true
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_vpc.vpc[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_vpc" "vpc" {
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                           = "192.168.0.0/24"
      [32m+[0m [0m[1m[0mdefault_network_acl_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_route_table_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_security_group_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mdhcp_options_id[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0menable_classiclink[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0menable_classiclink_dns_support[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0menable_dns_hostnames[0m[0m                 = true
      [32m+[0m [0m[1m[0menable_dns_support[0m[0m                   = true
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_tenancy[0m[0m                     = "default"
      [32m+[0m [0m[1m[0mipv6_association_id[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_network_border_group[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mmain_route_table_id[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.null_resource.add_to_known_hosts["us-east-2a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "null_resource" "add_to_known_hosts" {
      [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.null_resource.add_to_known_hosts["us-east-2b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "null_resource" "add_to_known_hosts" {
      [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.null_resource.add_to_known_hosts["us-east-2c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "null_resource" "add_to_known_hosts" {
      [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.null_resource.main[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "null_resource" "main" {
      [32m+[0m [0m[1m[0mid[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mtriggers[0m[0m = {
          [32m+[0m [0m"region" = "us-east-2"
        }
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.tls_cert_request.csr_vault_server["us-east-2a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_cert_request" "csr_vault_server" {
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mdns_names[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mip_addresses[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mkey_algorithm[0m[0m    = "RSA"
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m  = (sensitive value)

      [32m+[0m [0msubject {
          [32m+[0m [0m[1m[0mcommon_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0morganization[0m[0m = "Vault setup"
        }
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.tls_cert_request.csr_vault_server["us-east-2b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_cert_request" "csr_vault_server" {
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mdns_names[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mip_addresses[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mkey_algorithm[0m[0m    = "RSA"
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m  = (sensitive value)

      [32m+[0m [0msubject {
          [32m+[0m [0m[1m[0mcommon_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0morganization[0m[0m = "Vault setup"
        }
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.tls_cert_request.csr_vault_server["us-east-2c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_cert_request" "csr_vault_server" {
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mdns_names[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mip_addresses[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mkey_algorithm[0m[0m    = "RSA"
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m  = (sensitive value)

      [32m+[0m [0msubject {
          [32m+[0m [0m[1m[0mcommon_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0morganization[0m[0m = "Vault setup"
        }
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.tls_locally_signed_cert.vault_cert_sign["us-east-2a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_locally_signed_cert" "vault_cert_sign" {
      [32m+[0m [0m[1m[0mallowed_uses[0m[0m          = [
          [32m+[0m [0m"digital_signature",
          [32m+[0m [0m"key_encipherment",
          [32m+[0m [0m"key_agreement",
        ]
      [32m+[0m [0m[1m[0mca_cert_pem[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mca_key_algorithm[0m[0m      = "RSA"
      [32m+[0m [0m[1m[0mca_private_key_pem[0m[0m    = (sensitive value)
      [32m+[0m [0m[1m[0mcert_pem[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mearly_renewal_hours[0m[0m   = 0
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mis_ca_certificate[0m[0m     = false
      [32m+[0m [0m[1m[0mready_for_renewal[0m[0m     = true
      [32m+[0m [0m[1m[0mvalidity_end_time[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mvalidity_period_hours[0m[0m = 3600
      [32m+[0m [0m[1m[0mvalidity_start_time[0m[0m   = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.tls_locally_signed_cert.vault_cert_sign["us-east-2b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_locally_signed_cert" "vault_cert_sign" {
      [32m+[0m [0m[1m[0mallowed_uses[0m[0m          = [
          [32m+[0m [0m"digital_signature",
          [32m+[0m [0m"key_encipherment",
          [32m+[0m [0m"key_agreement",
        ]
      [32m+[0m [0m[1m[0mca_cert_pem[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mca_key_algorithm[0m[0m      = "RSA"
      [32m+[0m [0m[1m[0mca_private_key_pem[0m[0m    = (sensitive value)
      [32m+[0m [0m[1m[0mcert_pem[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mearly_renewal_hours[0m[0m   = 0
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mis_ca_certificate[0m[0m     = false
      [32m+[0m [0m[1m[0mready_for_renewal[0m[0m     = true
      [32m+[0m [0m[1m[0mvalidity_end_time[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mvalidity_period_hours[0m[0m = 3600
      [32m+[0m [0m[1m[0mvalidity_start_time[0m[0m   = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.tls_locally_signed_cert.vault_cert_sign["us-east-2c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_locally_signed_cert" "vault_cert_sign" {
      [32m+[0m [0m[1m[0mallowed_uses[0m[0m          = [
          [32m+[0m [0m"digital_signature",
          [32m+[0m [0m"key_encipherment",
          [32m+[0m [0m"key_agreement",
        ]
      [32m+[0m [0m[1m[0mca_cert_pem[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mca_key_algorithm[0m[0m      = "RSA"
      [32m+[0m [0m[1m[0mca_private_key_pem[0m[0m    = (sensitive value)
      [32m+[0m [0m[1m[0mcert_pem[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mearly_renewal_hours[0m[0m   = 0
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mis_ca_certificate[0m[0m     = false
      [32m+[0m [0m[1m[0mready_for_renewal[0m[0m     = true
      [32m+[0m [0m[1m[0mvalidity_end_time[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mvalidity_period_hours[0m[0m = 3600
      [32m+[0m [0m[1m[0mvalidity_start_time[0m[0m   = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.tls_private_key.host[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "host" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 4096
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.tls_private_key.host[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "host" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "ECDSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P384"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.tls_private_key.vault-ssh-key[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "vault-ssh-key" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.tls_private_key.vault_tls_rsa_key["us-east-2a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "vault_tls_rsa_key" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.tls_private_key.vault_tls_rsa_key["us-east-2b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "vault_tls_rsa_key" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.tls_private_key.vault_tls_rsa_key["us-east-2c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "vault_tls_rsa_key" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[0m[1mPlan:[0m 129 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mcurrent-env-id[0m[0m              = (known after apply)
  [32m+[0m [0m[1m[0mvault-cluster-ap-public-ips[0m[0m = [
      [32m+[0m [0m(known after apply),
      [32m+[0m [0m(known after apply),
      [32m+[0m [0m(known after apply),
    ]
  [32m+[0m [0m[1m[0mvault-cluster-eu-public-ips[0m[0m = [
      [32m+[0m [0m(known after apply),
      [32m+[0m [0m(known after apply),
      [32m+[0m [0m(known after apply),
    ]
  [32m+[0m [0m[1m[0mvault-cluster-us-public-ips[0m[0m = [
      [32m+[0m [0m(known after apply),
      [32m+[0m [0m(known after apply),
      [32m+[0m [0m(known after apply),
    ]
[33m╷[0m[0m
[33m│[0m [0m[1m[33mWarning: [0m[0m[1mReference to undefined provider[0m
[33m│[0m [0m
[33m│[0m [0m[0m  on modules/module_ap/main_ap.tf line 23, in module "vault-cluster-ap":
[33m│[0m [0m  23:     [4maws[0m = aws.ap-provider[0m
[33m│[0m [0m
[33m│[0m [0mThere is no explicit declaration for local provider name "aws" in
[33m│[0m [0mmodule.vault-cluster-ap.module.vault-cluster-ap, so Terraform is assuming you mean to pass a
[33m│[0m [0mconfiguration for "hashicorp/aws".
[33m│[0m [0m
[33m│[0m [0mIf you also control the child module, add a required_providers entry named "aws" with the source
[33m│[0m [0maddress "hashicorp/aws".
[33m│[0m [0m
[33m│[0m [0m(and 2 more similar warnings elsewhere)
[33m╵[0m[0m
[33m╷[0m[0m
[33m│[0m [0m[1m[33mWarning: [0m[0m[1mArgument is deprecated[0m
[33m│[0m [0m
[33m│[0m [0m[0m  with module.vault_common_ca.tls_self_signed_cert.ca_cert,
[33m│[0m [0m  on modules/sub-modules/common_vault_ca/common_vault_ca.tf line 8, in resource "tls_self_signed_cert" "ca_cert":
[33m│[0m [0m   8:   key_algorithm   = [4m"RSA"[0m # Using RSA[0m
[33m│[0m [0m
[33m│[0m [0mThis is now ignored, as the key algorithm is inferred from the `private_key_pem`.
[33m│[0m [0m
[33m│[0m [0m(and 31 more similar warnings elsewhere)
[33m╵[0m[0m
[33m╷[0m[0m
[33m│[0m [0m[1m[33mWarning: [0m[0m[1mRedundant empty provider block[0m
[33m│[0m [0m
[33m│[0m [0m[0m  on modules/sub-modules/vpc_peering/providers.tf line 1:
[33m│[0m [0m   1: [4mprovider "aws"[0m {[0m
[33m│[0m [0m
[33m│[0m [0mEarlier versions of Terraform used empty provider blocks ("proxy provider configurations") for
[33m│[0m [0mchild modules to declare their need to be passed a provider configuration by their callers. That
[33m│[0m [0mapproach was ambiguous and is now deprecated.
[33m│[0m [0m
[33m│[0m [0mIf you control this module, you can migrate to the new declaration syntax by removing all of the
[33m│[0m [0mempty provider "aws" blocks and then adding or updating an entry like the following to the
[33m│[0m [0mrequired_providers block of module.inter_vpc_peering:
[33m│[0m [0m    aws = {
[33m│[0m [0m      source = "hashicorp/aws"
[33m│[0m [0m      configuration_aliases = [
[33m│[0m [0m        aws.dr_provider,
[33m│[0m [0m        aws.hq_provider,
[33m│[0m [0m        aws.pr_provider,
[33m│[0m [0m      ]
[33m│[0m [0m    }
[33m╵[0m[0m
[90m
─────────────────────────────────────────────────────────────────────────────[0m

Saved the plan to: 3xVault.plan

To perform exactly these actions, run the following command to apply:
    terraform apply "3xVault.plan"
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_availability_zones.available: Reading...[0m[0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_iam_policy_document.vault_s3_snapshot_bucket: Reading...[0m[0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_ami.ubuntu: Reading...[0m[0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_iam_policy_document.raft_auto_join: Reading...[0m[0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_iam_policy_document.raft_auto_join: Read complete after 0s [id=4279609700][0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_iam_policy_document.vault_s3_snapshot_bucket: Read complete after 0s [id=1157349874][0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_caller_identity.current_aws_account: Reading...[0m[0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_iam_policy_document.vault_aws_auth: Reading...[0m[0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_iam_policy_document.assume_role_vault_ec2: Reading...[0m[0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_iam_policy_document.vault_aws_auth: Read complete after 0s [id=3107894398][0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_iam_policy_document.assume_role_vault_ec2: Read complete after 0s [id=1903849331][0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_iam_policy_document.vault_kms_unseal: Reading...[0m[0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_iam_policy_document.vault_kms_unseal: Read complete after 0s [id=1138302356][0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_availability_zones.available: Read complete after 0s [id=us-east-2][0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_ami.ubuntu: Read complete after 0s [id=ami-05803413c51f242b7][0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_caller_identity.current_aws_account: Reading...[0m[0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_availability_zones.available: Reading...[0m[0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_iam_policy_document.vault_kms_unseal: Reading...[0m[0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_iam_policy_document.vault_kms_unseal: Read complete after 0s [id=1138302356][0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_iam_policy_document.assume_role_vault_ec2: Reading...[0m[0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_iam_policy_document.vault_s3_snapshot_bucket: Reading...[0m[0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_iam_policy_document.assume_role_vault_ec2: Read complete after 0s [id=1903849331][0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_iam_policy_document.raft_auto_join: Reading...[0m[0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_iam_policy_document.vault_s3_snapshot_bucket: Read complete after 0s [id=1157349874][0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_ami.ubuntu: Reading...[0m[0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_iam_policy_document.raft_auto_join: Read complete after 0s [id=4279609700][0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_iam_policy_document.vault_aws_auth: Reading...[0m[0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_iam_policy_document.vault_aws_auth: Read complete after 0s [id=3107894398][0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_availability_zones.available: Read complete after 0s [id=ap-south-1][0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_ami.ubuntu: Read complete after 0s [id=ami-0f2e255ec956ade7f][0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_caller_identity.current_aws_account: Read complete after 1s [id=925007469123][0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_iam_policy_document.vault_aws_secret: Reading...[0m[0m
[0m[1mmodule.vault-cluster-ap.module.vault-cluster-ap.data.aws_iam_policy_document.vault_aws_secret: Read complete after 0s [id=259862612][0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_caller_identity.current_aws_account: Still reading... [10s elapsed][0m[0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_caller_identity.current_aws_account: Read complete after 11s [id=925007469123][0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_iam_policy_document.vault_aws_secret: Reading...[0m[0m
[0m[1mmodule.vault-cluster-us.module.vault-cluster-us.data.aws_iam_policy_document.vault_aws_secret: Read complete after 0s [id=259862612][0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_iam_policy_document.assume_role_vault_ec2: Reading...[0m[0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_caller_identity.current_aws_account: Reading...[0m[0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_ami.ubuntu: Reading...[0m[0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_iam_policy_document.vault_kms_unseal: Reading...[0m[0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_availability_zones.available: Reading...[0m[0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_iam_policy_document.raft_auto_join: Reading...[0m[0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_iam_policy_document.assume_role_vault_ec2: Read complete after 0s [id=1903849331][0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_iam_policy_document.vault_aws_auth: Reading...[0m[0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_iam_policy_document.raft_auto_join: Read complete after 0s [id=4279609700][0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_iam_policy_document.vault_kms_unseal: Read complete after 0s [id=1138302356][0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_iam_policy_document.vault_aws_auth: Read complete after 0s [id=3107894398][0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_iam_policy_document.vault_s3_snapshot_bucket: Reading...[0m[0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_iam_policy_document.vault_s3_snapshot_bucket: Read complete after 0s [id=1157349874][0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_ami.ubuntu: Read complete after 0s [id=ami-0f29c8402f8cce65c][0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_availability_zones.available: Read complete after 0s [id=eu-west-1][0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_caller_identity.current_aws_account: Read complete after 0s [id=925007469123][0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_iam_policy_document.vault_aws_secret: Reading...[0m[0m
[0m[1mmodule.vault-cluster-eu.module.vault-cluster-eu.data.aws_iam_policy_document.vault_aws_secret: Read complete after 0s [id=259862612][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
 [36m<=[0m read (data resources)
[0m
Terraform will perform the following actions:

[1m  # random_pet.env[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "random_pet" "env" {
      [32m+[0m [0m[1m[0mid[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mlength[0m[0m    = 1
      [32m+[0m [0m[1m[0mprefix[0m[0m    = "florin1"
      [32m+[0m [0m[1m[0mseparator[0m[0m = "-"
    }

[1m  # module.inter_vpc_peering.data.aws_route_table.route_table_id_dr_region[0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_route_table" "route_table_id_dr_region" {
      [32m+[0m [0m[1m[0marn[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0massociations[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mgateway_id[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroutes[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m         = (known after apply)

      [32m+[0m [0mfilter {
          [32m+[0m [0m[1m[0mname[0m[0m   = "tag:Name"
          [32m+[0m [0m[1m[0mvalues[0m[0m = [
              [32m+[0m [0m"vault-*",
            ]
        }
    }

[1m  # module.inter_vpc_peering.data.aws_route_table.route_table_id_hq_region[0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_route_table" "route_table_id_hq_region" {
      [32m+[0m [0m[1m[0marn[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0massociations[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mgateway_id[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroutes[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m         = (known after apply)

      [32m+[0m [0mfilter {
          [32m+[0m [0m[1m[0mname[0m[0m   = "tag:Name"
          [32m+[0m [0m[1m[0mvalues[0m[0m = [
              [32m+[0m [0m"vault-*",
            ]
        }
    }

[1m  # module.inter_vpc_peering.data.aws_route_table.route_table_id_pr_region[0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_route_table" "route_table_id_pr_region" {
      [32m+[0m [0m[1m[0marn[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0massociations[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mgateway_id[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroutes[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m         = (known after apply)

      [32m+[0m [0mfilter {
          [32m+[0m [0m[1m[0mname[0m[0m   = "tag:Name"
          [32m+[0m [0m[1m[0mvalues[0m[0m = [
              [32m+[0m [0m"vault-*",
            ]
        }
    }

[1m  # module.inter_vpc_peering.data.aws_vpcs.vpc_id_dr_region[0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_vpcs" "vpc_id_dr_region" {
      [32m+[0m [0m[1m[0mid[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mids[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m = {
          [32m+[0m [0m"Name" = (known after apply)
        }
    }

[1m  # module.inter_vpc_peering.data.aws_vpcs.vpc_id_hq_region[0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_vpcs" "vpc_id_hq_region" {
      [32m+[0m [0m[1m[0mid[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mids[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m = {
          [32m+[0m [0m"Name" = (known after apply)
        }
    }

[1m  # module.inter_vpc_peering.data.aws_vpcs.vpc_id_pr_region[0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_vpcs" "vpc_id_pr_region" {
      [32m+[0m [0m[1m[0mid[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mids[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m = {
          [32m+[0m [0m"Name" = (known after apply)
        }
    }

[1m  # module.inter_vpc_peering.aws_route.route_dr_to_hq[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route" "route_dr_to_hq" {
      [32m+[0m [0m[1m[0mdestination_cidr_block[0m[0m    = "192.168.0.0/24"
      [32m+[0m [0m[1m[0mid[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0minstance_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0minstance_owner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0morigin[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mvpc_peering_connection_id[0m[0m = (known after apply)
    }

[1m  # module.inter_vpc_peering.aws_route.route_hq_to_dr[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route" "route_hq_to_dr" {
      [32m+[0m [0m[1m[0mdestination_cidr_block[0m[0m    = "192.168.200.0/24"
      [32m+[0m [0m[1m[0mid[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0minstance_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0minstance_owner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0morigin[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mvpc_peering_connection_id[0m[0m = (known after apply)
    }

[1m  # module.inter_vpc_peering.aws_route.route_hq_to_pr[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route" "route_hq_to_pr" {
      [32m+[0m [0m[1m[0mdestination_cidr_block[0m[0m    = "192.168.100.0/24"
      [32m+[0m [0m[1m[0mid[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0minstance_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0minstance_owner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0morigin[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mvpc_peering_connection_id[0m[0m = (known after apply)
    }

[1m  # module.inter_vpc_peering.aws_route.route_pr_to_hq[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route" "route_pr_to_hq" {
      [32m+[0m [0m[1m[0mdestination_cidr_block[0m[0m    = "192.168.0.0/24"
      [32m+[0m [0m[1m[0mid[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0minstance_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0minstance_owner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0morigin[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mvpc_peering_connection_id[0m[0m = (known after apply)
    }

[1m  # module.inter_vpc_peering.aws_vpc_peering_connection.peering_source_to_dr[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_vpc_peering_connection" "peering_source_to_dr" {
      [32m+[0m [0m[1m[0maccept_status[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mauto_accept[0m[0m   = false
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpeer_owner_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpeer_region[0m[0m   = "eu-west-1"
      [32m+[0m [0m[1m[0mpeer_vpc_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m        = (known after apply)

      [32m+[0m [0maccepter {
          [32m+[0m [0m[1m[0mallow_classic_link_to_remote_vpc[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallow_remote_vpc_dns_resolution[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mallow_vpc_to_remote_classic_link[0m[0m = (known after apply)
        }

      [32m+[0m [0mrequester {
          [32m+[0m [0m[1m[0mallow_classic_link_to_remote_vpc[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallow_remote_vpc_dns_resolution[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mallow_vpc_to_remote_classic_link[0m[0m = (known after apply)
        }
    }

[1m  # module.inter_vpc_peering.aws_vpc_peering_connection.peering_source_to_pr[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_vpc_peering_connection" "peering_source_to_pr" {
      [32m+[0m [0m[1m[0maccept_status[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mauto_accept[0m[0m   = false
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpeer_owner_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpeer_region[0m[0m   = "ap-south-1"
      [32m+[0m [0m[1m[0mpeer_vpc_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m        = (known after apply)

      [32m+[0m [0maccepter {
          [32m+[0m [0m[1m[0mallow_classic_link_to_remote_vpc[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallow_remote_vpc_dns_resolution[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mallow_vpc_to_remote_classic_link[0m[0m = (known after apply)
        }

      [32m+[0m [0mrequester {
          [32m+[0m [0m[1m[0mallow_classic_link_to_remote_vpc[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallow_remote_vpc_dns_resolution[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mallow_vpc_to_remote_classic_link[0m[0m = (known after apply)
        }
    }

[1m  # module.inter_vpc_peering.aws_vpc_peering_connection_accepter.peer_dr[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_vpc_peering_connection_accepter" "peer_dr" {
      [32m+[0m [0m[1m[0maccept_status[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mauto_accept[0m[0m               = true
      [32m+[0m [0m[1m[0mid[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mpeer_owner_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mpeer_region[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mpeer_vpc_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mvpc_peering_connection_id[0m[0m = (known after apply)

      [32m+[0m [0maccepter {
          [32m+[0m [0m[1m[0mallow_classic_link_to_remote_vpc[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallow_remote_vpc_dns_resolution[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mallow_vpc_to_remote_classic_link[0m[0m = (known after apply)
        }

      [32m+[0m [0mrequester {
          [32m+[0m [0m[1m[0mallow_classic_link_to_remote_vpc[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallow_remote_vpc_dns_resolution[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mallow_vpc_to_remote_classic_link[0m[0m = (known after apply)
        }
    }

[1m  # module.inter_vpc_peering.aws_vpc_peering_connection_accepter.peer_pr[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_vpc_peering_connection_accepter" "peer_pr" {
      [32m+[0m [0m[1m[0maccept_status[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mauto_accept[0m[0m               = true
      [32m+[0m [0m[1m[0mid[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mpeer_owner_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mpeer_region[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mpeer_vpc_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mvpc_peering_connection_id[0m[0m = (known after apply)

      [32m+[0m [0maccepter {
          [32m+[0m [0m[1m[0mallow_classic_link_to_remote_vpc[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallow_remote_vpc_dns_resolution[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mallow_vpc_to_remote_classic_link[0m[0m = (known after apply)
        }

      [32m+[0m [0mrequester {
          [32m+[0m [0m[1m[0mallow_classic_link_to_remote_vpc[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallow_remote_vpc_dns_resolution[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mallow_vpc_to_remote_classic_link[0m[0m = (known after apply)
        }
    }

[1m  # module.vault_common_ca.local_file.ca[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "local_file" "ca" {
      [32m+[0m [0m[1m[0mcontent[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mdirectory_permission[0m[0m = "0777"
      [32m+[0m [0m[1m[0mfile_permission[0m[0m      = "0777"
      [32m+[0m [0m[1m[0mfilename[0m[0m             = "modules/sub-modules/common_vault_ca/ca.pem"
      [32m+[0m [0m[1m[0mid[0m[0m                   = (known after apply)
    }

[1m  # module.vault_common_ca.tls_private_key.private_key_vault_ca[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "private_key_vault_ca" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[1m  # module.vault_common_ca.tls_self_signed_cert.ca_cert[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_self_signed_cert" "ca_cert" {
      [32m+[0m [0m[1m[0mallowed_uses[0m[0m          = [
          [32m+[0m [0m"crl_signing",
          [32m+[0m [0m"cert_signing",
        ]
      [32m+[0m [0m[1m[0mcert_pem[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mearly_renewal_hours[0m[0m   = 0
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mis_ca_certificate[0m[0m     = true
      [32m+[0m [0m[1m[0mkey_algorithm[0m[0m         = "RSA"
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m       = (sensitive value)
      [32m+[0m [0m[1m[0mready_for_renewal[0m[0m     = true
      [32m+[0m [0m[1m[0mvalidity_end_time[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mvalidity_period_hours[0m[0m = 3600
      [32m+[0m [0m[1m[0mvalidity_start_time[0m[0m   = (known after apply)

      [32m+[0m [0msubject {
          [32m+[0m [0m[1m[0mcommon_name[0m[0m  = "Vault CA"
          [32m+[0m [0m[1m[0morganization[0m[0m = "Vault CA"
        }
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.data.aws_subnet.subnets["ap-south-1a"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_subnet" "subnets" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mavailable_ip_address_count[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = (known after apply)
      [32m+[0m [0m[1m[0mcustomer_owned_ipv4_pool[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mdefault_for_az[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mmap_customer_owned_ip_on_launch[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                                          = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.data.aws_subnet.subnets["ap-south-1b"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_subnet" "subnets" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mavailable_ip_address_count[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = (known after apply)
      [32m+[0m [0m[1m[0mcustomer_owned_ipv4_pool[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mdefault_for_az[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mmap_customer_owned_ip_on_launch[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                                          = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.data.aws_subnet.subnets["ap-south-1c"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_subnet" "subnets" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mavailable_ip_address_count[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = (known after apply)
      [32m+[0m [0m[1m[0mcustomer_owned_ipv4_pool[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mdefault_for_az[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mmap_customer_owned_ip_on_launch[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                                          = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.data.cloudinit_config.myhost["ap-south-1a"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "cloudinit_config" "myhost" {
      [32m+[0m [0m[1m[0mbase64_encode[0m[0m = true
      [32m+[0m [0m[1m[0mgzip[0m[0m          = true
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mrendered[0m[0m      = (known after apply)

      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                ## template: jinja
                #!/usr/bin/env bash
                
                # Fixing Systemd Unit file because of "Unknown lvalue 'StartLimitIntervalSec' in section 'Unit'"
                cat << EOF > /usr/lib/systemd/system/vault.service
                [Unit]
                Description="HashiCorp Vault - A tool for managing secrets"
                Documentation=https://www.vaultproject.io/docs/
                Requires=network-online.target
                After=network-online.target
                ConditionFileNotEmpty=/etc/vault.d/vault.hcl
                
                [Service]
                User=vault
                Group=vault
                ProtectSystem=full
                ProtectHome=read-only
                PrivateTmp=yes
                PrivateDevices=yes
                SecureBits=keep-caps
                AmbientCapabilities=CAP_IPC_LOCK
                CapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK
                NoNewPrivileges=yes
                ExecStart=/usr/bin/vault server -config=/etc/vault.d/vault.hcl
                ExecReload=/bin/kill --signal HUP $MAINPID
                KillMode=process
                KillSignal=SIGINT
                Restart=on-failure
                RestartSec=5
                TimeoutStopSec=30
                StartLimitInterval=60
                StartLimitBurst=3
                LimitNOFILE=65536
                LimitMEMLOCK=infinity
                StartLimitInterval=30s
                StartLimitBurst=3
                # Adding VAULT_LICENSE_PATH environment in case newer version of Vault > 1.8, so autoloading license can be provided. In case older version of Vault is used < 1.8 the VAULT_LICENSE_PATH env var has not meaning
                Environment="VAULT_LICENSE_PATH=/home/ubuntu/_vaultSetup/license.hclic"
                
                [Install]
                WantedBy=multi-user.target
                EOF
                
                echo "SystemD applied..."|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                
                sudo systemctl daemon-reload
                
                sudo systemctl stop vault
                sudo systemctl start vault
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                #!/bin/bash
                
                # Making working dir for Vault setup
                mkdir -p /home/ubuntu/_vaultSetup
                touch /home/ubuntu/_vaultSetup/keys.json
                touch /home/ubuntu/_vaultSetup/vault_debug
                
                sudo chown -R vault:vault /home/ubuntu/_vaultSetup
                sudo chown ubuntu:ubuntu /home/ubuntu
                
                echo "$(date): Initializing Vault..."|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                
                echo "Initializing Vault..."
                # Wait for Vault to start 
                sleep 1
                
                vault operator init -format=json -recovery-shares=5 -recovery-threshold=3 > /home/ubuntu/_vaultSetup/keys.json
                
                ROOT_TOKEN=`jq -r .root_token /home/ubuntu/_vaultSetup/keys.json`
                
                if [ -z "$ROOT_TOKEN" ]
                then
                    echo "`date`: ROOT_TOKEN is empty !!!"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                    exit 1
                fi
                
                cat << EOF >> /etc/profile.d/vault.sh
                export VAULT_TOKEN=$ROOT_TOKEN
                EOF
                
                
                # Install the Vault license and deletes the license file
                function install_vault_license () {
                  
                curl -s --request PUT --header "X-Vault-Token: $1" --data @/home/ubuntu/_vaultSetup/license.json https://127.0.0.1:8200/v1/sys/license
                
                if [ $? -eq 0 ]
                then
                    #rm /home/ubuntu/_vaultSetup/license.json
                    echo "$(date): Writing license file result: OK"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                else
                    echo "$(date): Writing license file result: FAILED"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                fi
                }
                
                # Wait for Vault to get Initialized with KMS
                sleep 10
                
                # Check if Vault is ready for being licensed
                while true
                do
                  if [[ $(curl -X GET -LI -o /dev/null -w '%{http_code}' -s https://127.0.0.1:8200/v1/sys/health) =~ (200|429|473) ]] # HTTP codes that show if Vault is ready to be used
                  then
                    # Checking if Vault is using autoloading license (version > 1.8) if 404 is returned, autoload is not used, so installing the license via /sys/license endpoint
                    if [[ $(curl -X GET -H "X-Vault-Token: $ROOT_TOKEN" -o /dev/null -w '%{http_code}' -s https://127.0.0.1:8200/v1/sys/license/status) =~ (404) ]]
                    then
                      install_vault_license $ROOT_TOKEN
                      break 2
                    # If autoloading license is used, break from the loop
                    elif [[ $(curl -X GET -LI -H "X-Vault-Token: $ROOT_TOKEN" -o /dev/null -w '%{http_code}' -s https://127.0.0.1:8200/v1/sys/license/status) =~ (200) ]]
                    then
                    {
                      echo "$(date): AUTOLOADING is used!"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                      break 2
                      }
                    fi
                  echo "$(date): Vault is not ready yet!" |sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                  sleep 1
                  fi
                done
                
                ## Add audit file
                #curl -s -X PUT --header "X-Vault-Token: $ROOT_TOKEN" -H "X-Vault-Request: true" -d '{"type":"file","description":"Audit file","options":{"file_path":"/opt/vault/audit.log"},"local":false}' https://127.0.0.1:8200/v1/sys/audit/file
                #
                #if [ $? -eq 0 ].
                #then
                #   echo "$(date): Audit enabled: OK"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                #   retval="OK"
                #else
                #   echo "$(date): Audit enabled: FAILED"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                #fi
                ##
                
                # For debugging
                echo "$(date): This is an active node, other nodes join to it" |sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text_cloud-config"
        }
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.data.cloudinit_config.myhost["ap-south-1b"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "cloudinit_config" "myhost" {
      [32m+[0m [0m[1m[0mbase64_encode[0m[0m = true
      [32m+[0m [0m[1m[0mgzip[0m[0m          = true
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mrendered[0m[0m      = (known after apply)

      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                ## template: jinja
                #!/usr/bin/env bash
                
                # Fixing Systemd Unit file because of "Unknown lvalue 'StartLimitIntervalSec' in section 'Unit'"
                cat << EOF > /usr/lib/systemd/system/vault.service
                [Unit]
                Description="HashiCorp Vault - A tool for managing secrets"
                Documentation=https://www.vaultproject.io/docs/
                Requires=network-online.target
                After=network-online.target
                ConditionFileNotEmpty=/etc/vault.d/vault.hcl
                
                [Service]
                User=vault
                Group=vault
                ProtectSystem=full
                ProtectHome=read-only
                PrivateTmp=yes
                PrivateDevices=yes
                SecureBits=keep-caps
                AmbientCapabilities=CAP_IPC_LOCK
                CapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK
                NoNewPrivileges=yes
                ExecStart=/usr/bin/vault server -config=/etc/vault.d/vault.hcl
                ExecReload=/bin/kill --signal HUP $MAINPID
                KillMode=process
                KillSignal=SIGINT
                Restart=on-failure
                RestartSec=5
                TimeoutStopSec=30
                StartLimitInterval=60
                StartLimitBurst=3
                LimitNOFILE=65536
                LimitMEMLOCK=infinity
                StartLimitInterval=30s
                StartLimitBurst=3
                # Adding VAULT_LICENSE_PATH environment in case newer version of Vault > 1.8, so autoloading license can be provided. In case older version of Vault is used < 1.8 the VAULT_LICENSE_PATH env var has not meaning
                Environment="VAULT_LICENSE_PATH=/home/ubuntu/_vaultSetup/license.hclic"
                
                [Install]
                WantedBy=multi-user.target
                EOF
                
                echo "SystemD applied..."|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                
                sudo systemctl daemon-reload
                
                sudo systemctl stop vault
                sudo systemctl start vault
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                #!/usr/bin/env bash
                
                # This does nothing for now
                
                # No need to write the license to each node, it is stored in the backend storage
                
                # Debugging purposes
                echo "$(date) - This is a follower node, it joins to active node" s|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text_cloud-config"
        }
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.data.cloudinit_config.myhost["ap-south-1c"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "cloudinit_config" "myhost" {
      [32m+[0m [0m[1m[0mbase64_encode[0m[0m = true
      [32m+[0m [0m[1m[0mgzip[0m[0m          = true
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mrendered[0m[0m      = (known after apply)

      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                ## template: jinja
                #!/usr/bin/env bash
                
                # Fixing Systemd Unit file because of "Unknown lvalue 'StartLimitIntervalSec' in section 'Unit'"
                cat << EOF > /usr/lib/systemd/system/vault.service
                [Unit]
                Description="HashiCorp Vault - A tool for managing secrets"
                Documentation=https://www.vaultproject.io/docs/
                Requires=network-online.target
                After=network-online.target
                ConditionFileNotEmpty=/etc/vault.d/vault.hcl
                
                [Service]
                User=vault
                Group=vault
                ProtectSystem=full
                ProtectHome=read-only
                PrivateTmp=yes
                PrivateDevices=yes
                SecureBits=keep-caps
                AmbientCapabilities=CAP_IPC_LOCK
                CapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK
                NoNewPrivileges=yes
                ExecStart=/usr/bin/vault server -config=/etc/vault.d/vault.hcl
                ExecReload=/bin/kill --signal HUP $MAINPID
                KillMode=process
                KillSignal=SIGINT
                Restart=on-failure
                RestartSec=5
                TimeoutStopSec=30
                StartLimitInterval=60
                StartLimitBurst=3
                LimitNOFILE=65536
                LimitMEMLOCK=infinity
                StartLimitInterval=30s
                StartLimitBurst=3
                # Adding VAULT_LICENSE_PATH environment in case newer version of Vault > 1.8, so autoloading license can be provided. In case older version of Vault is used < 1.8 the VAULT_LICENSE_PATH env var has not meaning
                Environment="VAULT_LICENSE_PATH=/home/ubuntu/_vaultSetup/license.hclic"
                
                [Install]
                WantedBy=multi-user.target
                EOF
                
                echo "SystemD applied..."|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                
                sudo systemctl daemon-reload
                
                sudo systemctl stop vault
                sudo systemctl start vault
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                #!/usr/bin/env bash
                
                # This does nothing for now
                
                # No need to write the license to each node, it is stored in the backend storage
                
                # Debugging purposes
                echo "$(date) - This is a follower node, it joins to active node" s|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text_cloud-config"
        }
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_iam_instance_profile.vault-instance-profile[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_instance_profile" "vault-instance-profile" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mcreate_date[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mrole[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0munique_id[0m[0m   = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_iam_policy.vault_aws_auth_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vault_aws_auth_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Policy that provides the needed permissions for the Vault server to verify users via the AWS authentication method (iam type)"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"iam:GetUser",
                          [32m+[0m [0m"iam:GetRole",
                          [32m+[0m [0m"iam:GetInstanceProfile",
                          [32m+[0m [0m"ec2:DescribeInstances",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "vaultPolicyDocumentVaultAWSAuth"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_iam_policy.vault_aws_secret_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vault_aws_secret_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Policy that provides the needed permissions for the Vault server's aws secrets engine to function properly"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"iam:RemoveUserFromGroup",
                          [32m+[0m [0m"iam:PutUserPolicy",
                          [32m+[0m [0m"iam:ListUserPolicies",
                          [32m+[0m [0m"iam:ListGroupsForUser",
                          [32m+[0m [0m"iam:ListAttachedUserPolicies",
                          [32m+[0m [0m"iam:ListAccessKeys",
                          [32m+[0m [0m"iam:DetachUserPolicy",
                          [32m+[0m [0m"iam:DeleteUserPolicy",
                          [32m+[0m [0m"iam:DeleteUser",
                          [32m+[0m [0m"iam:DeleteAccessKey",
                          [32m+[0m [0m"iam:CreateUser",
                          [32m+[0m [0m"iam:CreateAccessKey",
                          [32m+[0m [0m"iam:AttachUserPolicy",
                          [32m+[0m [0m"iam:AddUserToGroup",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "arn:aws:iam::925007469123:user/vault-*"
                      [32m+[0m [0mSid      = "vaultPolicyDocumentVaultAWSSecret"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_iam_policy.vault_kms_auto_unseal_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vault_kms_auto_unseal_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Policy that provides the needed KMS permission for Vault server's auto unseal feature"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"kms:Encrypt",
                          [32m+[0m [0m"kms:DescribeKey",
                          [32m+[0m [0m"kms:Decrypt",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "vaultPolicyDocumentKMSUnseal"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_iam_policy.vault_raft_auto_join_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vault_raft_auto_join_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Policy that provides the needed EC2 DescribeInstances permissions in order for the Raft auto join feature to work in AWS environment"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = "ec2:DescribeInstances"
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "vaultPolicyDocumentRaftAutoJoin"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_iam_policy.vault_s3_raft_snapshot_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vault_s3_raft_snapshot_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Policy that provides the needed permissions to access S3 bucket in order to store Raft snapsahot"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:PutObject",
                          [32m+[0m [0m"s3:ListBucket",
                          [32m+[0m [0m"s3:DeleteObject",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "vaultPolicyDocumentS3snapshot"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_iam_role.vault_server_role[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "vault_server_role" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "ec2.amazonaws.com"
                        }
                      [32m+[0m [0mSid       = ""
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_instance.vault["ap-south-1a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_instance" "vault" {
      [32m+[0m [0m[1m[0mami[0m[0m                                  = "ami-0f2e255ec956ade7f"
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0massociate_public_ip_address[0m[0m          = true
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcpu_core_count[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mcpu_threads_per_core[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_stop[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_termination[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mebs_optimized[0m[0m                        = false
      [32m+[0m [0m[1m[0mget_password_data[0m[0m                    = false
      [32m+[0m [0m[1m[0mhost_id[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0miam_instance_profile[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_initiated_shutdown_behavior[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0minstance_state[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0minstance_type[0m[0m                        = "t3.micro"
      [32m+[0m [0m[1m[0mipv6_address_count[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mipv6_addresses[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mmonitoring[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mpassword_data[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mplacement_group[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mplacement_partition_number[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mprimary_network_interface_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0msecondary_private_ips[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0msource_dest_check[0m[0m                    = true
      [32m+[0m [0m[1m[0msubnet_id[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtenancy[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0muser_data[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0muser_data_base64[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0muser_data_replace_on_change[0m[0m          = false
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m               = (known after apply)

      [32m+[0m [0mcapacity_reservation_specification {
          [32m+[0m [0m[1m[0mcapacity_reservation_preference[0m[0m = (known after apply)

          [32m+[0m [0mcapacity_reservation_target {
              [32m+[0m [0m[1m[0mcapacity_reservation_id[0m[0m                 = (known after apply)
              [32m+[0m [0m[1m[0mcapacity_reservation_resource_group_arn[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0mebs_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0msnapshot_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }

      [32m+[0m [0menclave_options {
          [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
        }

      [32m+[0m [0mephemeral_block_device {
          [32m+[0m [0m[1m[0mdevice_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mno_device[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mvirtual_name[0m[0m = (known after apply)
        }

      [32m+[0m [0mmaintenance_options {
          [32m+[0m [0m[1m[0mauto_recovery[0m[0m = (known after apply)
        }

      [32m+[0m [0mmetadata_options {
          [32m+[0m [0m[1m[0mhttp_endpoint[0m[0m               = (known after apply)
          [32m+[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhttp_tokens[0m[0m                 = (known after apply)
          [32m+[0m [0m[1m[0minstance_metadata_tags[0m[0m      = (known after apply)
        }

      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_index[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_card_index[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m  = (known after apply)
        }

      [32m+[0m [0mprivate_dns_name_options {
          [32m+[0m [0m[1m[0menable_resource_name_dns_a_record[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhostname_type[0m[0m                        = (known after apply)
        }

      [32m+[0m [0mroot_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_instance.vault["ap-south-1b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_instance" "vault" {
      [32m+[0m [0m[1m[0mami[0m[0m                                  = "ami-0f2e255ec956ade7f"
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0massociate_public_ip_address[0m[0m          = true
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcpu_core_count[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mcpu_threads_per_core[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_stop[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_termination[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mebs_optimized[0m[0m                        = false
      [32m+[0m [0m[1m[0mget_password_data[0m[0m                    = false
      [32m+[0m [0m[1m[0mhost_id[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0miam_instance_profile[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_initiated_shutdown_behavior[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0minstance_state[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0minstance_type[0m[0m                        = "t3.micro"
      [32m+[0m [0m[1m[0mipv6_address_count[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mipv6_addresses[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mmonitoring[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mpassword_data[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mplacement_group[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mplacement_partition_number[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mprimary_network_interface_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0msecondary_private_ips[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0msource_dest_check[0m[0m                    = true
      [32m+[0m [0m[1m[0msubnet_id[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtenancy[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0muser_data[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0muser_data_base64[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0muser_data_replace_on_change[0m[0m          = false
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m               = (known after apply)

      [32m+[0m [0mcapacity_reservation_specification {
          [32m+[0m [0m[1m[0mcapacity_reservation_preference[0m[0m = (known after apply)

          [32m+[0m [0mcapacity_reservation_target {
              [32m+[0m [0m[1m[0mcapacity_reservation_id[0m[0m                 = (known after apply)
              [32m+[0m [0m[1m[0mcapacity_reservation_resource_group_arn[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0mebs_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0msnapshot_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }

      [32m+[0m [0menclave_options {
          [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
        }

      [32m+[0m [0mephemeral_block_device {
          [32m+[0m [0m[1m[0mdevice_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mno_device[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mvirtual_name[0m[0m = (known after apply)
        }

      [32m+[0m [0mmaintenance_options {
          [32m+[0m [0m[1m[0mauto_recovery[0m[0m = (known after apply)
        }

      [32m+[0m [0mmetadata_options {
          [32m+[0m [0m[1m[0mhttp_endpoint[0m[0m               = (known after apply)
          [32m+[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhttp_tokens[0m[0m                 = (known after apply)
          [32m+[0m [0m[1m[0minstance_metadata_tags[0m[0m      = (known after apply)
        }

      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_index[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_card_index[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m  = (known after apply)
        }

      [32m+[0m [0mprivate_dns_name_options {
          [32m+[0m [0m[1m[0menable_resource_name_dns_a_record[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhostname_type[0m[0m                        = (known after apply)
        }

      [32m+[0m [0mroot_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_instance.vault["ap-south-1c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_instance" "vault" {
      [32m+[0m [0m[1m[0mami[0m[0m                                  = "ami-0f2e255ec956ade7f"
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0massociate_public_ip_address[0m[0m          = true
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcpu_core_count[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mcpu_threads_per_core[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_stop[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_termination[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mebs_optimized[0m[0m                        = false
      [32m+[0m [0m[1m[0mget_password_data[0m[0m                    = false
      [32m+[0m [0m[1m[0mhost_id[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0miam_instance_profile[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_initiated_shutdown_behavior[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0minstance_state[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0minstance_type[0m[0m                        = "t3.micro"
      [32m+[0m [0m[1m[0mipv6_address_count[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mipv6_addresses[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mmonitoring[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mpassword_data[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mplacement_group[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mplacement_partition_number[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mprimary_network_interface_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0msecondary_private_ips[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0msource_dest_check[0m[0m                    = true
      [32m+[0m [0m[1m[0msubnet_id[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtenancy[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0muser_data[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0muser_data_base64[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0muser_data_replace_on_change[0m[0m          = false
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m               = (known after apply)

      [32m+[0m [0mcapacity_reservation_specification {
          [32m+[0m [0m[1m[0mcapacity_reservation_preference[0m[0m = (known after apply)

          [32m+[0m [0mcapacity_reservation_target {
              [32m+[0m [0m[1m[0mcapacity_reservation_id[0m[0m                 = (known after apply)
              [32m+[0m [0m[1m[0mcapacity_reservation_resource_group_arn[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0mebs_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0msnapshot_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }

      [32m+[0m [0menclave_options {
          [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
        }

      [32m+[0m [0mephemeral_block_device {
          [32m+[0m [0m[1m[0mdevice_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mno_device[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mvirtual_name[0m[0m = (known after apply)
        }

      [32m+[0m [0mmaintenance_options {
          [32m+[0m [0m[1m[0mauto_recovery[0m[0m = (known after apply)
        }

      [32m+[0m [0mmetadata_options {
          [32m+[0m [0m[1m[0mhttp_endpoint[0m[0m               = (known after apply)
          [32m+[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhttp_tokens[0m[0m                 = (known after apply)
          [32m+[0m [0m[1m[0minstance_metadata_tags[0m[0m      = (known after apply)
        }

      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_index[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_card_index[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m  = (known after apply)
        }

      [32m+[0m [0mprivate_dns_name_options {
          [32m+[0m [0m[1m[0menable_resource_name_dns_a_record[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhostname_type[0m[0m                        = (known after apply)
        }

      [32m+[0m [0mroot_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_internet_gateway.gw[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_internet_gateway" "gw" {
      [32m+[0m [0m[1m[0marn[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m   = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_key_pair.vault-ssh-key[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_key_pair" "vault-ssh-key" {
      [32m+[0m [0m[1m[0marn[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mfingerprint[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mkey_name_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mkey_pair_id[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m        = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_kms_key.vault[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_kms_key" "vault" {
      [32m+[0m [0m[1m[0marn[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0mbypass_policy_lockout_safety_check[0m[0m = false
      [32m+[0m [0m[1m[0mcustomer_master_key_spec[0m[0m           = "SYMMETRIC_DEFAULT"
      [32m+[0m [0m[1m[0mdeletion_window_in_days[0m[0m            = 20
      [32m+[0m [0m[1m[0mdescription[0m[0m                        = "Vault unseal key ap-south-1"
      [32m+[0m [0m[1m[0menable_key_rotation[0m[0m                = false
      [32m+[0m [0m[1m[0mid[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mis_enabled[0m[0m                         = true
      [32m+[0m [0m[1m[0mkey_id[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mkey_usage[0m[0m                          = "ENCRYPT_DECRYPT"
      [32m+[0m [0m[1m[0mmulti_region[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mpolicy[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                               = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                           = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_route_table.route[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table" "route" {
      [32m+[0m [0m[1m[0marn[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpropagating_vgws[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroute[0m[0m            = [
          [32m+[0m [0m{
              [32m+[0m [0mcarrier_gateway_id         = ""
              [32m+[0m [0mcidr_block                 = "0.0.0.0/0"
              [32m+[0m [0mcore_network_arn           = ""
              [32m+[0m [0mdestination_prefix_list_id = ""
              [32m+[0m [0megress_only_gateway_id     = ""
              [32m+[0m [0mgateway_id                 = (known after apply)
              [32m+[0m [0minstance_id                = ""
              [32m+[0m [0mipv6_cidr_block            = ""
              [32m+[0m [0mlocal_gateway_id           = ""
              [32m+[0m [0mnat_gateway_id             = ""
              [32m+[0m [0mnetwork_interface_id       = ""
              [32m+[0m [0mtransit_gateway_id         = ""
              [32m+[0m [0mvpc_endpoint_id            = ""
              [32m+[0m [0mvpc_peering_connection_id  = ""
            },
        ]
      [32m+[0m [0m[1m[0mtags[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m           = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_route_table_association.route["ap-south-1a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "route" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_route_table_association.route["ap-south-1b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "route" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_route_table_association.route["ap-south-1c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "route" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_s3_bucket.raft_snapshot_bucket[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_bucket" "raft_snapshot_bucket" {
      [32m+[0m [0m[1m[0macceleration_status[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0macl[0m[0m                         = "private"
      [32m+[0m [0m[1m[0marn[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mbucket[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mbucket_domain_name[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mbucket_regional_domain_name[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m               = true
      [32m+[0m [0m[1m[0mhosted_zone_id[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mobject_lock_enabled[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mregion[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mrequest_payer[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mwebsite_domain[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mwebsite_endpoint[0m[0m            = (known after apply)

      [32m+[0m [0mcors_rule {
          [32m+[0m [0m[1m[0mallowed_headers[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallowed_methods[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallowed_origins[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mexpose_headers[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mmax_age_seconds[0m[0m = (known after apply)
        }

      [32m+[0m [0mgrant {
          [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mpermissions[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mtype[0m[0m        = (known after apply)
          [32m+[0m [0m[1m[0muri[0m[0m         = (known after apply)
        }

      [32m+[0m [0mlifecycle_rule {
          [32m+[0m [0m[1m[0mabort_incomplete_multipart_upload_days[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0menabled[0m[0m                                = (known after apply)
          [32m+[0m [0m[1m[0mid[0m[0m                                     = (known after apply)
          [32m+[0m [0m[1m[0mprefix[0m[0m                                 = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                                   = (known after apply)

          [32m+[0m [0mexpiration {
              [32m+[0m [0m[1m[0mdate[0m[0m                         = (known after apply)
              [32m+[0m [0m[1m[0mdays[0m[0m                         = (known after apply)
              [32m+[0m [0m[1m[0mexpired_object_delete_marker[0m[0m = (known after apply)
            }

          [32m+[0m [0mnoncurrent_version_expiration {
              [32m+[0m [0m[1m[0mdays[0m[0m = (known after apply)
            }

          [32m+[0m [0mnoncurrent_version_transition {
              [32m+[0m [0m[1m[0mdays[0m[0m          = (known after apply)
              [32m+[0m [0m[1m[0mstorage_class[0m[0m = (known after apply)
            }

          [32m+[0m [0mtransition {
              [32m+[0m [0m[1m[0mdate[0m[0m          = (known after apply)
              [32m+[0m [0m[1m[0mdays[0m[0m          = (known after apply)
              [32m+[0m [0m[1m[0mstorage_class[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0mlogging {
          [32m+[0m [0m[1m[0mtarget_bucket[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mtarget_prefix[0m[0m = (known after apply)
        }

      [32m+[0m [0mobject_lock_configuration {
          [32m+[0m [0m[1m[0mobject_lock_enabled[0m[0m = (known after apply)

          [32m+[0m [0mrule {
              [32m+[0m [0mdefault_retention {
                  [32m+[0m [0m[1m[0mdays[0m[0m  = (known after apply)
                  [32m+[0m [0m[1m[0mmode[0m[0m  = (known after apply)
                  [32m+[0m [0m[1m[0myears[0m[0m = (known after apply)
                }
            }
        }

      [32m+[0m [0mreplication_configuration {
          [32m+[0m [0m[1m[0mrole[0m[0m = (known after apply)

          [32m+[0m [0mrules {
              [32m+[0m [0m[1m[0mdelete_marker_replication_status[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mid[0m[0m                               = (known after apply)
              [32m+[0m [0m[1m[0mprefix[0m[0m                           = (known after apply)
              [32m+[0m [0m[1m[0mpriority[0m[0m                         = (known after apply)
              [32m+[0m [0m[1m[0mstatus[0m[0m                           = (known after apply)

              [32m+[0m [0mdestination {
                  [32m+[0m [0m[1m[0maccount_id[0m[0m         = (known after apply)
                  [32m+[0m [0m[1m[0mbucket[0m[0m             = (known after apply)
                  [32m+[0m [0m[1m[0mreplica_kms_key_id[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0mstorage_class[0m[0m      = (known after apply)

                  [32m+[0m [0maccess_control_translation {
                      [32m+[0m [0m[1m[0mowner[0m[0m = (known after apply)
                    }

                  [32m+[0m [0mmetrics {
                      [32m+[0m [0m[1m[0mminutes[0m[0m = (known after apply)
                      [32m+[0m [0m[1m[0mstatus[0m[0m  = (known after apply)
                    }

                  [32m+[0m [0mreplication_time {
                      [32m+[0m [0m[1m[0mminutes[0m[0m = (known after apply)
                      [32m+[0m [0m[1m[0mstatus[0m[0m  = (known after apply)
                    }
                }

              [32m+[0m [0mfilter {
                  [32m+[0m [0m[1m[0mprefix[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0mtags[0m[0m   = (known after apply)
                }

              [32m+[0m [0msource_selection_criteria {
                  [32m+[0m [0msse_kms_encrypted_objects {
                      [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
                    }
                }
            }
        }

      [32m+[0m [0mserver_side_encryption_configuration {
          [32m+[0m [0mrule {
              [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m = (known after apply)

              [32m+[0m [0mapply_server_side_encryption_by_default {
                  [32m+[0m [0m[1m[0mkms_master_key_id[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0msse_algorithm[0m[0m     = (known after apply)
                }
            }
        }

      [32m+[0m [0mversioning {
          [32m+[0m [0m[1m[0menabled[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mmfa_delete[0m[0m = (known after apply)
        }

      [32m+[0m [0mwebsite {
          [32m+[0m [0m[1m[0merror_document[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mindex_document[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mredirect_all_requests_to[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mrouting_rules[0m[0m            = (known after apply)
        }
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_security_group.vault[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "vault" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "SG for Vault SSH and Vault traffic"
      [32m+[0m [0m[1m[0megress[0m[0m                 = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "-1"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 0
            },
        ]
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 8200
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 8200
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 8201
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 8201
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"145.101.18.82/32",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 22
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 22
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"145.101.18.82/32",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 8
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "icmp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 0
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = []
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "icmp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = true
              [32m+[0m [0mto_port          = 254
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = []
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = true
              [32m+[0m [0mto_port          = 65535
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = []
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "udp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = true
              [32m+[0m [0mto_port          = 65535
            },
        ]
      [32m+[0m [0m[1m[0mname[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_subnet.public_subnet["ap-south-1a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "public_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "ap-south-1a"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "192.168.100.0/28"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = true
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_subnet.public_subnet["ap-south-1b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "public_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "ap-south-1b"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "192.168.100.16/28"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = true
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_subnet.public_subnet["ap-south-1c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "public_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "ap-south-1c"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "192.168.100.32/28"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = true
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.aws_vpc.vpc[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_vpc" "vpc" {
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                           = "192.168.100.0/24"
      [32m+[0m [0m[1m[0mdefault_network_acl_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_route_table_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_security_group_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mdhcp_options_id[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0menable_classiclink[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0menable_classiclink_dns_support[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0menable_dns_hostnames[0m[0m                 = true
      [32m+[0m [0m[1m[0menable_dns_support[0m[0m                   = true
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_tenancy[0m[0m                     = "default"
      [32m+[0m [0m[1m[0mipv6_association_id[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_network_border_group[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mmain_route_table_id[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.null_resource.add_to_known_hosts["ap-south-1a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "null_resource" "add_to_known_hosts" {
      [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.null_resource.add_to_known_hosts["ap-south-1b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "null_resource" "add_to_known_hosts" {
      [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.null_resource.add_to_known_hosts["ap-south-1c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "null_resource" "add_to_known_hosts" {
      [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.null_resource.main[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "null_resource" "main" {
      [32m+[0m [0m[1m[0mid[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mtriggers[0m[0m = {
          [32m+[0m [0m"region" = "ap-south-1"
        }
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.tls_cert_request.csr_vault_server["ap-south-1a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_cert_request" "csr_vault_server" {
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mdns_names[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mip_addresses[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mkey_algorithm[0m[0m    = "RSA"
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m  = (sensitive value)

      [32m+[0m [0msubject {
          [32m+[0m [0m[1m[0mcommon_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0morganization[0m[0m = "Vault setup"
        }
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.tls_cert_request.csr_vault_server["ap-south-1b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_cert_request" "csr_vault_server" {
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mdns_names[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mip_addresses[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mkey_algorithm[0m[0m    = "RSA"
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m  = (sensitive value)

      [32m+[0m [0msubject {
          [32m+[0m [0m[1m[0mcommon_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0morganization[0m[0m = "Vault setup"
        }
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.tls_cert_request.csr_vault_server["ap-south-1c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_cert_request" "csr_vault_server" {
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mdns_names[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mip_addresses[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mkey_algorithm[0m[0m    = "RSA"
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m  = (sensitive value)

      [32m+[0m [0msubject {
          [32m+[0m [0m[1m[0mcommon_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0morganization[0m[0m = "Vault setup"
        }
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.tls_locally_signed_cert.vault_cert_sign["ap-south-1a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_locally_signed_cert" "vault_cert_sign" {
      [32m+[0m [0m[1m[0mallowed_uses[0m[0m          = [
          [32m+[0m [0m"digital_signature",
          [32m+[0m [0m"key_encipherment",
          [32m+[0m [0m"key_agreement",
        ]
      [32m+[0m [0m[1m[0mca_cert_pem[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mca_key_algorithm[0m[0m      = "RSA"
      [32m+[0m [0m[1m[0mca_private_key_pem[0m[0m    = (sensitive value)
      [32m+[0m [0m[1m[0mcert_pem[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mearly_renewal_hours[0m[0m   = 0
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mis_ca_certificate[0m[0m     = false
      [32m+[0m [0m[1m[0mready_for_renewal[0m[0m     = true
      [32m+[0m [0m[1m[0mvalidity_end_time[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mvalidity_period_hours[0m[0m = 3600
      [32m+[0m [0m[1m[0mvalidity_start_time[0m[0m   = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.tls_locally_signed_cert.vault_cert_sign["ap-south-1b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_locally_signed_cert" "vault_cert_sign" {
      [32m+[0m [0m[1m[0mallowed_uses[0m[0m          = [
          [32m+[0m [0m"digital_signature",
          [32m+[0m [0m"key_encipherment",
          [32m+[0m [0m"key_agreement",
        ]
      [32m+[0m [0m[1m[0mca_cert_pem[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mca_key_algorithm[0m[0m      = "RSA"
      [32m+[0m [0m[1m[0mca_private_key_pem[0m[0m    = (sensitive value)
      [32m+[0m [0m[1m[0mcert_pem[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mearly_renewal_hours[0m[0m   = 0
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mis_ca_certificate[0m[0m     = false
      [32m+[0m [0m[1m[0mready_for_renewal[0m[0m     = true
      [32m+[0m [0m[1m[0mvalidity_end_time[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mvalidity_period_hours[0m[0m = 3600
      [32m+[0m [0m[1m[0mvalidity_start_time[0m[0m   = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.tls_locally_signed_cert.vault_cert_sign["ap-south-1c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_locally_signed_cert" "vault_cert_sign" {
      [32m+[0m [0m[1m[0mallowed_uses[0m[0m          = [
          [32m+[0m [0m"digital_signature",
          [32m+[0m [0m"key_encipherment",
          [32m+[0m [0m"key_agreement",
        ]
      [32m+[0m [0m[1m[0mca_cert_pem[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mca_key_algorithm[0m[0m      = "RSA"
      [32m+[0m [0m[1m[0mca_private_key_pem[0m[0m    = (sensitive value)
      [32m+[0m [0m[1m[0mcert_pem[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mearly_renewal_hours[0m[0m   = 0
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mis_ca_certificate[0m[0m     = false
      [32m+[0m [0m[1m[0mready_for_renewal[0m[0m     = true
      [32m+[0m [0m[1m[0mvalidity_end_time[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mvalidity_period_hours[0m[0m = 3600
      [32m+[0m [0m[1m[0mvalidity_start_time[0m[0m   = (known after apply)
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.tls_private_key.host[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "host" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 4096
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.tls_private_key.host[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "host" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "ECDSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P384"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.tls_private_key.vault-ssh-key[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "vault-ssh-key" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.tls_private_key.vault_tls_rsa_key["ap-south-1a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "vault_tls_rsa_key" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.tls_private_key.vault_tls_rsa_key["ap-south-1b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "vault_tls_rsa_key" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[1m  # module.vault-cluster-ap.module.vault-cluster-ap.tls_private_key.vault_tls_rsa_key["ap-south-1c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "vault_tls_rsa_key" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.data.aws_subnet.subnets["eu-west-1a"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_subnet" "subnets" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mavailable_ip_address_count[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = (known after apply)
      [32m+[0m [0m[1m[0mcustomer_owned_ipv4_pool[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mdefault_for_az[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mmap_customer_owned_ip_on_launch[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                                          = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.data.aws_subnet.subnets["eu-west-1b"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_subnet" "subnets" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mavailable_ip_address_count[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = (known after apply)
      [32m+[0m [0m[1m[0mcustomer_owned_ipv4_pool[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mdefault_for_az[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mmap_customer_owned_ip_on_launch[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                                          = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.data.aws_subnet.subnets["eu-west-1c"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_subnet" "subnets" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mavailable_ip_address_count[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = (known after apply)
      [32m+[0m [0m[1m[0mcustomer_owned_ipv4_pool[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mdefault_for_az[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mmap_customer_owned_ip_on_launch[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                                          = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.data.cloudinit_config.myhost["eu-west-1a"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "cloudinit_config" "myhost" {
      [32m+[0m [0m[1m[0mbase64_encode[0m[0m = true
      [32m+[0m [0m[1m[0mgzip[0m[0m          = true
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mrendered[0m[0m      = (known after apply)

      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                ## template: jinja
                #!/usr/bin/env bash
                
                # Fixing Systemd Unit file because of "Unknown lvalue 'StartLimitIntervalSec' in section 'Unit'"
                cat << EOF > /usr/lib/systemd/system/vault.service
                [Unit]
                Description="HashiCorp Vault - A tool for managing secrets"
                Documentation=https://www.vaultproject.io/docs/
                Requires=network-online.target
                After=network-online.target
                ConditionFileNotEmpty=/etc/vault.d/vault.hcl
                
                [Service]
                User=vault
                Group=vault
                ProtectSystem=full
                ProtectHome=read-only
                PrivateTmp=yes
                PrivateDevices=yes
                SecureBits=keep-caps
                AmbientCapabilities=CAP_IPC_LOCK
                CapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK
                NoNewPrivileges=yes
                ExecStart=/usr/bin/vault server -config=/etc/vault.d/vault.hcl
                ExecReload=/bin/kill --signal HUP $MAINPID
                KillMode=process
                KillSignal=SIGINT
                Restart=on-failure
                RestartSec=5
                TimeoutStopSec=30
                StartLimitInterval=60
                StartLimitBurst=3
                LimitNOFILE=65536
                LimitMEMLOCK=infinity
                StartLimitInterval=30s
                StartLimitBurst=3
                # Adding VAULT_LICENSE_PATH environment in case newer version of Vault > 1.8, so autoloading license can be provided. In case older version of Vault is used < 1.8 the VAULT_LICENSE_PATH env var has not meaning
                Environment="VAULT_LICENSE_PATH=/home/ubuntu/_vaultSetup/license.hclic"
                
                [Install]
                WantedBy=multi-user.target
                EOF
                
                echo "SystemD applied..."|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                
                sudo systemctl daemon-reload
                
                sudo systemctl stop vault
                sudo systemctl start vault
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                #!/bin/bash
                
                # Making working dir for Vault setup
                mkdir -p /home/ubuntu/_vaultSetup
                touch /home/ubuntu/_vaultSetup/keys.json
                touch /home/ubuntu/_vaultSetup/vault_debug
                
                sudo chown -R vault:vault /home/ubuntu/_vaultSetup
                sudo chown ubuntu:ubuntu /home/ubuntu
                
                echo "$(date): Initializing Vault..."|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                
                echo "Initializing Vault..."
                # Wait for Vault to start 
                sleep 1
                
                vault operator init -format=json -recovery-shares=5 -recovery-threshold=3 > /home/ubuntu/_vaultSetup/keys.json
                
                ROOT_TOKEN=`jq -r .root_token /home/ubuntu/_vaultSetup/keys.json`
                
                if [ -z "$ROOT_TOKEN" ]
                then
                    echo "`date`: ROOT_TOKEN is empty !!!"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                    exit 1
                fi
                
                cat << EOF >> /etc/profile.d/vault.sh
                export VAULT_TOKEN=$ROOT_TOKEN
                EOF
                
                
                # Install the Vault license and deletes the license file
                function install_vault_license () {
                  
                curl -s --request PUT --header "X-Vault-Token: $1" --data @/home/ubuntu/_vaultSetup/license.json https://127.0.0.1:8200/v1/sys/license
                
                if [ $? -eq 0 ]
                then
                    #rm /home/ubuntu/_vaultSetup/license.json
                    echo "$(date): Writing license file result: OK"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                else
                    echo "$(date): Writing license file result: FAILED"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                fi
                }
                
                # Wait for Vault to get Initialized with KMS
                sleep 10
                
                # Check if Vault is ready for being licensed
                while true
                do
                  if [[ $(curl -X GET -LI -o /dev/null -w '%{http_code}' -s https://127.0.0.1:8200/v1/sys/health) =~ (200|429|473) ]] # HTTP codes that show if Vault is ready to be used
                  then
                    # Checking if Vault is using autoloading license (version > 1.8) if 404 is returned, autoload is not used, so installing the license via /sys/license endpoint
                    if [[ $(curl -X GET -H "X-Vault-Token: $ROOT_TOKEN" -o /dev/null -w '%{http_code}' -s https://127.0.0.1:8200/v1/sys/license/status) =~ (404) ]]
                    then
                      install_vault_license $ROOT_TOKEN
                      break 2
                    # If autoloading license is used, break from the loop
                    elif [[ $(curl -X GET -LI -H "X-Vault-Token: $ROOT_TOKEN" -o /dev/null -w '%{http_code}' -s https://127.0.0.1:8200/v1/sys/license/status) =~ (200) ]]
                    then
                    {
                      echo "$(date): AUTOLOADING is used!"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                      break 2
                      }
                    fi
                  echo "$(date): Vault is not ready yet!" |sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                  sleep 1
                  fi
                done
                
                ## Add audit file
                #curl -s -X PUT --header "X-Vault-Token: $ROOT_TOKEN" -H "X-Vault-Request: true" -d '{"type":"file","description":"Audit file","options":{"file_path":"/opt/vault/audit.log"},"local":false}' https://127.0.0.1:8200/v1/sys/audit/file
                #
                #if [ $? -eq 0 ].
                #then
                #   echo "$(date): Audit enabled: OK"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                #   retval="OK"
                #else
                #   echo "$(date): Audit enabled: FAILED"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                #fi
                ##
                
                # For debugging
                echo "$(date): This is an active node, other nodes join to it" |sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text_cloud-config"
        }
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.data.cloudinit_config.myhost["eu-west-1b"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "cloudinit_config" "myhost" {
      [32m+[0m [0m[1m[0mbase64_encode[0m[0m = true
      [32m+[0m [0m[1m[0mgzip[0m[0m          = true
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mrendered[0m[0m      = (known after apply)

      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                ## template: jinja
                #!/usr/bin/env bash
                
                # Fixing Systemd Unit file because of "Unknown lvalue 'StartLimitIntervalSec' in section 'Unit'"
                cat << EOF > /usr/lib/systemd/system/vault.service
                [Unit]
                Description="HashiCorp Vault - A tool for managing secrets"
                Documentation=https://www.vaultproject.io/docs/
                Requires=network-online.target
                After=network-online.target
                ConditionFileNotEmpty=/etc/vault.d/vault.hcl
                
                [Service]
                User=vault
                Group=vault
                ProtectSystem=full
                ProtectHome=read-only
                PrivateTmp=yes
                PrivateDevices=yes
                SecureBits=keep-caps
                AmbientCapabilities=CAP_IPC_LOCK
                CapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK
                NoNewPrivileges=yes
                ExecStart=/usr/bin/vault server -config=/etc/vault.d/vault.hcl
                ExecReload=/bin/kill --signal HUP $MAINPID
                KillMode=process
                KillSignal=SIGINT
                Restart=on-failure
                RestartSec=5
                TimeoutStopSec=30
                StartLimitInterval=60
                StartLimitBurst=3
                LimitNOFILE=65536
                LimitMEMLOCK=infinity
                StartLimitInterval=30s
                StartLimitBurst=3
                # Adding VAULT_LICENSE_PATH environment in case newer version of Vault > 1.8, so autoloading license can be provided. In case older version of Vault is used < 1.8 the VAULT_LICENSE_PATH env var has not meaning
                Environment="VAULT_LICENSE_PATH=/home/ubuntu/_vaultSetup/license.hclic"
                
                [Install]
                WantedBy=multi-user.target
                EOF
                
                echo "SystemD applied..."|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                
                sudo systemctl daemon-reload
                
                sudo systemctl stop vault
                sudo systemctl start vault
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                #!/usr/bin/env bash
                
                # This does nothing for now
                
                # No need to write the license to each node, it is stored in the backend storage
                
                # Debugging purposes
                echo "$(date) - This is a follower node, it joins to active node" s|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text_cloud-config"
        }
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.data.cloudinit_config.myhost["eu-west-1c"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "cloudinit_config" "myhost" {
      [32m+[0m [0m[1m[0mbase64_encode[0m[0m = true
      [32m+[0m [0m[1m[0mgzip[0m[0m          = true
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mrendered[0m[0m      = (known after apply)

      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                ## template: jinja
                #!/usr/bin/env bash
                
                # Fixing Systemd Unit file because of "Unknown lvalue 'StartLimitIntervalSec' in section 'Unit'"
                cat << EOF > /usr/lib/systemd/system/vault.service
                [Unit]
                Description="HashiCorp Vault - A tool for managing secrets"
                Documentation=https://www.vaultproject.io/docs/
                Requires=network-online.target
                After=network-online.target
                ConditionFileNotEmpty=/etc/vault.d/vault.hcl
                
                [Service]
                User=vault
                Group=vault
                ProtectSystem=full
                ProtectHome=read-only
                PrivateTmp=yes
                PrivateDevices=yes
                SecureBits=keep-caps
                AmbientCapabilities=CAP_IPC_LOCK
                CapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK
                NoNewPrivileges=yes
                ExecStart=/usr/bin/vault server -config=/etc/vault.d/vault.hcl
                ExecReload=/bin/kill --signal HUP $MAINPID
                KillMode=process
                KillSignal=SIGINT
                Restart=on-failure
                RestartSec=5
                TimeoutStopSec=30
                StartLimitInterval=60
                StartLimitBurst=3
                LimitNOFILE=65536
                LimitMEMLOCK=infinity
                StartLimitInterval=30s
                StartLimitBurst=3
                # Adding VAULT_LICENSE_PATH environment in case newer version of Vault > 1.8, so autoloading license can be provided. In case older version of Vault is used < 1.8 the VAULT_LICENSE_PATH env var has not meaning
                Environment="VAULT_LICENSE_PATH=/home/ubuntu/_vaultSetup/license.hclic"
                
                [Install]
                WantedBy=multi-user.target
                EOF
                
                echo "SystemD applied..."|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                
                sudo systemctl daemon-reload
                
                sudo systemctl stop vault
                sudo systemctl start vault
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                #!/usr/bin/env bash
                
                # This does nothing for now
                
                # No need to write the license to each node, it is stored in the backend storage
                
                # Debugging purposes
                echo "$(date) - This is a follower node, it joins to active node" s|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text_cloud-config"
        }
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_iam_instance_profile.vault-instance-profile[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_instance_profile" "vault-instance-profile" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mcreate_date[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mrole[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0munique_id[0m[0m   = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_iam_policy.vault_aws_auth_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vault_aws_auth_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Policy that provides the needed permissions for the Vault server to verify users via the AWS authentication method (iam type)"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"iam:GetUser",
                          [32m+[0m [0m"iam:GetRole",
                          [32m+[0m [0m"iam:GetInstanceProfile",
                          [32m+[0m [0m"ec2:DescribeInstances",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "vaultPolicyDocumentVaultAWSAuth"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_iam_policy.vault_aws_secret_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vault_aws_secret_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Policy that provides the needed permissions for the Vault server's aws secrets engine to function properly"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"iam:RemoveUserFromGroup",
                          [32m+[0m [0m"iam:PutUserPolicy",
                          [32m+[0m [0m"iam:ListUserPolicies",
                          [32m+[0m [0m"iam:ListGroupsForUser",
                          [32m+[0m [0m"iam:ListAttachedUserPolicies",
                          [32m+[0m [0m"iam:ListAccessKeys",
                          [32m+[0m [0m"iam:DetachUserPolicy",
                          [32m+[0m [0m"iam:DeleteUserPolicy",
                          [32m+[0m [0m"iam:DeleteUser",
                          [32m+[0m [0m"iam:DeleteAccessKey",
                          [32m+[0m [0m"iam:CreateUser",
                          [32m+[0m [0m"iam:CreateAccessKey",
                          [32m+[0m [0m"iam:AttachUserPolicy",
                          [32m+[0m [0m"iam:AddUserToGroup",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "arn:aws:iam::925007469123:user/vault-*"
                      [32m+[0m [0mSid      = "vaultPolicyDocumentVaultAWSSecret"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_iam_policy.vault_kms_auto_unseal_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vault_kms_auto_unseal_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Policy that provides the needed KMS permission for Vault server's auto unseal feature"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"kms:Encrypt",
                          [32m+[0m [0m"kms:DescribeKey",
                          [32m+[0m [0m"kms:Decrypt",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "vaultPolicyDocumentKMSUnseal"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_iam_policy.vault_raft_auto_join_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vault_raft_auto_join_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Policy that provides the needed EC2 DescribeInstances permissions in order for the Raft auto join feature to work in AWS environment"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = "ec2:DescribeInstances"
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "vaultPolicyDocumentRaftAutoJoin"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_iam_policy.vault_s3_raft_snapshot_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vault_s3_raft_snapshot_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Policy that provides the needed permissions to access S3 bucket in order to store Raft snapsahot"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:PutObject",
                          [32m+[0m [0m"s3:ListBucket",
                          [32m+[0m [0m"s3:DeleteObject",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "vaultPolicyDocumentS3snapshot"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_iam_role.vault_server_role[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "vault_server_role" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "ec2.amazonaws.com"
                        }
                      [32m+[0m [0mSid       = ""
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_instance.vault["eu-west-1a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_instance" "vault" {
      [32m+[0m [0m[1m[0mami[0m[0m                                  = "ami-0f29c8402f8cce65c"
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0massociate_public_ip_address[0m[0m          = true
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcpu_core_count[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mcpu_threads_per_core[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_stop[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_termination[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mebs_optimized[0m[0m                        = false
      [32m+[0m [0m[1m[0mget_password_data[0m[0m                    = false
      [32m+[0m [0m[1m[0mhost_id[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0miam_instance_profile[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_initiated_shutdown_behavior[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0minstance_state[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0minstance_type[0m[0m                        = "t3.micro"
      [32m+[0m [0m[1m[0mipv6_address_count[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mipv6_addresses[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mmonitoring[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mpassword_data[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mplacement_group[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mplacement_partition_number[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mprimary_network_interface_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0msecondary_private_ips[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0msource_dest_check[0m[0m                    = true
      [32m+[0m [0m[1m[0msubnet_id[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtenancy[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0muser_data[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0muser_data_base64[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0muser_data_replace_on_change[0m[0m          = false
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m               = (known after apply)

      [32m+[0m [0mcapacity_reservation_specification {
          [32m+[0m [0m[1m[0mcapacity_reservation_preference[0m[0m = (known after apply)

          [32m+[0m [0mcapacity_reservation_target {
              [32m+[0m [0m[1m[0mcapacity_reservation_id[0m[0m                 = (known after apply)
              [32m+[0m [0m[1m[0mcapacity_reservation_resource_group_arn[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0mebs_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0msnapshot_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }

      [32m+[0m [0menclave_options {
          [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
        }

      [32m+[0m [0mephemeral_block_device {
          [32m+[0m [0m[1m[0mdevice_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mno_device[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mvirtual_name[0m[0m = (known after apply)
        }

      [32m+[0m [0mmaintenance_options {
          [32m+[0m [0m[1m[0mauto_recovery[0m[0m = (known after apply)
        }

      [32m+[0m [0mmetadata_options {
          [32m+[0m [0m[1m[0mhttp_endpoint[0m[0m               = (known after apply)
          [32m+[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhttp_tokens[0m[0m                 = (known after apply)
          [32m+[0m [0m[1m[0minstance_metadata_tags[0m[0m      = (known after apply)
        }

      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_index[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_card_index[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m  = (known after apply)
        }

      [32m+[0m [0mprivate_dns_name_options {
          [32m+[0m [0m[1m[0menable_resource_name_dns_a_record[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhostname_type[0m[0m                        = (known after apply)
        }

      [32m+[0m [0mroot_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_instance.vault["eu-west-1b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_instance" "vault" {
      [32m+[0m [0m[1m[0mami[0m[0m                                  = "ami-0f29c8402f8cce65c"
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0massociate_public_ip_address[0m[0m          = true
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcpu_core_count[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mcpu_threads_per_core[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_stop[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_termination[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mebs_optimized[0m[0m                        = false
      [32m+[0m [0m[1m[0mget_password_data[0m[0m                    = false
      [32m+[0m [0m[1m[0mhost_id[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0miam_instance_profile[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_initiated_shutdown_behavior[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0minstance_state[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0minstance_type[0m[0m                        = "t3.micro"
      [32m+[0m [0m[1m[0mipv6_address_count[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mipv6_addresses[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mmonitoring[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mpassword_data[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mplacement_group[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mplacement_partition_number[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mprimary_network_interface_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0msecondary_private_ips[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0msource_dest_check[0m[0m                    = true
      [32m+[0m [0m[1m[0msubnet_id[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtenancy[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0muser_data[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0muser_data_base64[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0muser_data_replace_on_change[0m[0m          = false
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m               = (known after apply)

      [32m+[0m [0mcapacity_reservation_specification {
          [32m+[0m [0m[1m[0mcapacity_reservation_preference[0m[0m = (known after apply)

          [32m+[0m [0mcapacity_reservation_target {
              [32m+[0m [0m[1m[0mcapacity_reservation_id[0m[0m                 = (known after apply)
              [32m+[0m [0m[1m[0mcapacity_reservation_resource_group_arn[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0mebs_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0msnapshot_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }

      [32m+[0m [0menclave_options {
          [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
        }

      [32m+[0m [0mephemeral_block_device {
          [32m+[0m [0m[1m[0mdevice_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mno_device[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mvirtual_name[0m[0m = (known after apply)
        }

      [32m+[0m [0mmaintenance_options {
          [32m+[0m [0m[1m[0mauto_recovery[0m[0m = (known after apply)
        }

      [32m+[0m [0mmetadata_options {
          [32m+[0m [0m[1m[0mhttp_endpoint[0m[0m               = (known after apply)
          [32m+[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhttp_tokens[0m[0m                 = (known after apply)
          [32m+[0m [0m[1m[0minstance_metadata_tags[0m[0m      = (known after apply)
        }

      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_index[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_card_index[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m  = (known after apply)
        }

      [32m+[0m [0mprivate_dns_name_options {
          [32m+[0m [0m[1m[0menable_resource_name_dns_a_record[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhostname_type[0m[0m                        = (known after apply)
        }

      [32m+[0m [0mroot_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_instance.vault["eu-west-1c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_instance" "vault" {
      [32m+[0m [0m[1m[0mami[0m[0m                                  = "ami-0f29c8402f8cce65c"
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0massociate_public_ip_address[0m[0m          = true
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcpu_core_count[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mcpu_threads_per_core[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_stop[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_termination[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mebs_optimized[0m[0m                        = false
      [32m+[0m [0m[1m[0mget_password_data[0m[0m                    = false
      [32m+[0m [0m[1m[0mhost_id[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0miam_instance_profile[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_initiated_shutdown_behavior[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0minstance_state[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0minstance_type[0m[0m                        = "t3.micro"
      [32m+[0m [0m[1m[0mipv6_address_count[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mipv6_addresses[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mmonitoring[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mpassword_data[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mplacement_group[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mplacement_partition_number[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mprimary_network_interface_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0msecondary_private_ips[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0msource_dest_check[0m[0m                    = true
      [32m+[0m [0m[1m[0msubnet_id[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtenancy[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0muser_data[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0muser_data_base64[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0muser_data_replace_on_change[0m[0m          = false
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m               = (known after apply)

      [32m+[0m [0mcapacity_reservation_specification {
          [32m+[0m [0m[1m[0mcapacity_reservation_preference[0m[0m = (known after apply)

          [32m+[0m [0mcapacity_reservation_target {
              [32m+[0m [0m[1m[0mcapacity_reservation_id[0m[0m                 = (known after apply)
              [32m+[0m [0m[1m[0mcapacity_reservation_resource_group_arn[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0mebs_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0msnapshot_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }

      [32m+[0m [0menclave_options {
          [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
        }

      [32m+[0m [0mephemeral_block_device {
          [32m+[0m [0m[1m[0mdevice_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mno_device[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mvirtual_name[0m[0m = (known after apply)
        }

      [32m+[0m [0mmaintenance_options {
          [32m+[0m [0m[1m[0mauto_recovery[0m[0m = (known after apply)
        }

      [32m+[0m [0mmetadata_options {
          [32m+[0m [0m[1m[0mhttp_endpoint[0m[0m               = (known after apply)
          [32m+[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhttp_tokens[0m[0m                 = (known after apply)
          [32m+[0m [0m[1m[0minstance_metadata_tags[0m[0m      = (known after apply)
        }

      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_index[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_card_index[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m  = (known after apply)
        }

      [32m+[0m [0mprivate_dns_name_options {
          [32m+[0m [0m[1m[0menable_resource_name_dns_a_record[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhostname_type[0m[0m                        = (known after apply)
        }

      [32m+[0m [0mroot_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_internet_gateway.gw[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_internet_gateway" "gw" {
      [32m+[0m [0m[1m[0marn[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m   = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_key_pair.vault-ssh-key[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_key_pair" "vault-ssh-key" {
      [32m+[0m [0m[1m[0marn[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mfingerprint[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mkey_name_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mkey_pair_id[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m        = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_kms_key.vault[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_kms_key" "vault" {
      [32m+[0m [0m[1m[0marn[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0mbypass_policy_lockout_safety_check[0m[0m = false
      [32m+[0m [0m[1m[0mcustomer_master_key_spec[0m[0m           = "SYMMETRIC_DEFAULT"
      [32m+[0m [0m[1m[0mdeletion_window_in_days[0m[0m            = 20
      [32m+[0m [0m[1m[0mdescription[0m[0m                        = "Vault unseal key eu-west-1"
      [32m+[0m [0m[1m[0menable_key_rotation[0m[0m                = false
      [32m+[0m [0m[1m[0mid[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mis_enabled[0m[0m                         = true
      [32m+[0m [0m[1m[0mkey_id[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mkey_usage[0m[0m                          = "ENCRYPT_DECRYPT"
      [32m+[0m [0m[1m[0mmulti_region[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mpolicy[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                               = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                           = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_route_table.route[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table" "route" {
      [32m+[0m [0m[1m[0marn[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpropagating_vgws[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroute[0m[0m            = [
          [32m+[0m [0m{
              [32m+[0m [0mcarrier_gateway_id         = ""
              [32m+[0m [0mcidr_block                 = "0.0.0.0/0"
              [32m+[0m [0mcore_network_arn           = ""
              [32m+[0m [0mdestination_prefix_list_id = ""
              [32m+[0m [0megress_only_gateway_id     = ""
              [32m+[0m [0mgateway_id                 = (known after apply)
              [32m+[0m [0minstance_id                = ""
              [32m+[0m [0mipv6_cidr_block            = ""
              [32m+[0m [0mlocal_gateway_id           = ""
              [32m+[0m [0mnat_gateway_id             = ""
              [32m+[0m [0mnetwork_interface_id       = ""
              [32m+[0m [0mtransit_gateway_id         = ""
              [32m+[0m [0mvpc_endpoint_id            = ""
              [32m+[0m [0mvpc_peering_connection_id  = ""
            },
        ]
      [32m+[0m [0m[1m[0mtags[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m           = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_route_table_association.route["eu-west-1a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "route" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_route_table_association.route["eu-west-1b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "route" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_route_table_association.route["eu-west-1c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "route" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_s3_bucket.raft_snapshot_bucket[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_bucket" "raft_snapshot_bucket" {
      [32m+[0m [0m[1m[0macceleration_status[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0macl[0m[0m                         = "private"
      [32m+[0m [0m[1m[0marn[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mbucket[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mbucket_domain_name[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mbucket_regional_domain_name[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m               = true
      [32m+[0m [0m[1m[0mhosted_zone_id[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mobject_lock_enabled[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mregion[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mrequest_payer[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mwebsite_domain[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mwebsite_endpoint[0m[0m            = (known after apply)

      [32m+[0m [0mcors_rule {
          [32m+[0m [0m[1m[0mallowed_headers[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallowed_methods[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallowed_origins[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mexpose_headers[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mmax_age_seconds[0m[0m = (known after apply)
        }

      [32m+[0m [0mgrant {
          [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mpermissions[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mtype[0m[0m        = (known after apply)
          [32m+[0m [0m[1m[0muri[0m[0m         = (known after apply)
        }

      [32m+[0m [0mlifecycle_rule {
          [32m+[0m [0m[1m[0mabort_incomplete_multipart_upload_days[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0menabled[0m[0m                                = (known after apply)
          [32m+[0m [0m[1m[0mid[0m[0m                                     = (known after apply)
          [32m+[0m [0m[1m[0mprefix[0m[0m                                 = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                                   = (known after apply)

          [32m+[0m [0mexpiration {
              [32m+[0m [0m[1m[0mdate[0m[0m                         = (known after apply)
              [32m+[0m [0m[1m[0mdays[0m[0m                         = (known after apply)
              [32m+[0m [0m[1m[0mexpired_object_delete_marker[0m[0m = (known after apply)
            }

          [32m+[0m [0mnoncurrent_version_expiration {
              [32m+[0m [0m[1m[0mdays[0m[0m = (known after apply)
            }

          [32m+[0m [0mnoncurrent_version_transition {
              [32m+[0m [0m[1m[0mdays[0m[0m          = (known after apply)
              [32m+[0m [0m[1m[0mstorage_class[0m[0m = (known after apply)
            }

          [32m+[0m [0mtransition {
              [32m+[0m [0m[1m[0mdate[0m[0m          = (known after apply)
              [32m+[0m [0m[1m[0mdays[0m[0m          = (known after apply)
              [32m+[0m [0m[1m[0mstorage_class[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0mlogging {
          [32m+[0m [0m[1m[0mtarget_bucket[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mtarget_prefix[0m[0m = (known after apply)
        }

      [32m+[0m [0mobject_lock_configuration {
          [32m+[0m [0m[1m[0mobject_lock_enabled[0m[0m = (known after apply)

          [32m+[0m [0mrule {
              [32m+[0m [0mdefault_retention {
                  [32m+[0m [0m[1m[0mdays[0m[0m  = (known after apply)
                  [32m+[0m [0m[1m[0mmode[0m[0m  = (known after apply)
                  [32m+[0m [0m[1m[0myears[0m[0m = (known after apply)
                }
            }
        }

      [32m+[0m [0mreplication_configuration {
          [32m+[0m [0m[1m[0mrole[0m[0m = (known after apply)

          [32m+[0m [0mrules {
              [32m+[0m [0m[1m[0mdelete_marker_replication_status[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mid[0m[0m                               = (known after apply)
              [32m+[0m [0m[1m[0mprefix[0m[0m                           = (known after apply)
              [32m+[0m [0m[1m[0mpriority[0m[0m                         = (known after apply)
              [32m+[0m [0m[1m[0mstatus[0m[0m                           = (known after apply)

              [32m+[0m [0mdestination {
                  [32m+[0m [0m[1m[0maccount_id[0m[0m         = (known after apply)
                  [32m+[0m [0m[1m[0mbucket[0m[0m             = (known after apply)
                  [32m+[0m [0m[1m[0mreplica_kms_key_id[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0mstorage_class[0m[0m      = (known after apply)

                  [32m+[0m [0maccess_control_translation {
                      [32m+[0m [0m[1m[0mowner[0m[0m = (known after apply)
                    }

                  [32m+[0m [0mmetrics {
                      [32m+[0m [0m[1m[0mminutes[0m[0m = (known after apply)
                      [32m+[0m [0m[1m[0mstatus[0m[0m  = (known after apply)
                    }

                  [32m+[0m [0mreplication_time {
                      [32m+[0m [0m[1m[0mminutes[0m[0m = (known after apply)
                      [32m+[0m [0m[1m[0mstatus[0m[0m  = (known after apply)
                    }
                }

              [32m+[0m [0mfilter {
                  [32m+[0m [0m[1m[0mprefix[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0mtags[0m[0m   = (known after apply)
                }

              [32m+[0m [0msource_selection_criteria {
                  [32m+[0m [0msse_kms_encrypted_objects {
                      [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
                    }
                }
            }
        }

      [32m+[0m [0mserver_side_encryption_configuration {
          [32m+[0m [0mrule {
              [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m = (known after apply)

              [32m+[0m [0mapply_server_side_encryption_by_default {
                  [32m+[0m [0m[1m[0mkms_master_key_id[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0msse_algorithm[0m[0m     = (known after apply)
                }
            }
        }

      [32m+[0m [0mversioning {
          [32m+[0m [0m[1m[0menabled[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mmfa_delete[0m[0m = (known after apply)
        }

      [32m+[0m [0mwebsite {
          [32m+[0m [0m[1m[0merror_document[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mindex_document[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mredirect_all_requests_to[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mrouting_rules[0m[0m            = (known after apply)
        }
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_security_group.vault[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "vault" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "SG for Vault SSH and Vault traffic"
      [32m+[0m [0m[1m[0megress[0m[0m                 = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "-1"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 0
            },
        ]
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 8200
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 8200
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 8201
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 8201
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"145.101.18.82/32",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 22
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 22
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"145.101.18.82/32",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 8
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "icmp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 0
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = []
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "icmp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = true
              [32m+[0m [0mto_port          = 254
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = []
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = true
              [32m+[0m [0mto_port          = 65535
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = []
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "udp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = true
              [32m+[0m [0mto_port          = 65535
            },
        ]
      [32m+[0m [0m[1m[0mname[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_subnet.public_subnet["eu-west-1a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "public_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "eu-west-1a"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "192.168.200.0/28"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = true
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_subnet.public_subnet["eu-west-1b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "public_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "eu-west-1b"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "192.168.200.16/28"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = true
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_subnet.public_subnet["eu-west-1c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "public_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "eu-west-1c"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "192.168.200.32/28"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = true
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.aws_vpc.vpc[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_vpc" "vpc" {
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                           = "192.168.200.0/24"
      [32m+[0m [0m[1m[0mdefault_network_acl_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_route_table_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_security_group_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mdhcp_options_id[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0menable_classiclink[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0menable_classiclink_dns_support[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0menable_dns_hostnames[0m[0m                 = true
      [32m+[0m [0m[1m[0menable_dns_support[0m[0m                   = true
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_tenancy[0m[0m                     = "default"
      [32m+[0m [0m[1m[0mipv6_association_id[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_network_border_group[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mmain_route_table_id[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.null_resource.add_to_known_hosts["eu-west-1a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "null_resource" "add_to_known_hosts" {
      [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.null_resource.add_to_known_hosts["eu-west-1b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "null_resource" "add_to_known_hosts" {
      [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.null_resource.add_to_known_hosts["eu-west-1c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "null_resource" "add_to_known_hosts" {
      [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.null_resource.main[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "null_resource" "main" {
      [32m+[0m [0m[1m[0mid[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mtriggers[0m[0m = {
          [32m+[0m [0m"region" = "eu-west-1"
        }
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.tls_cert_request.csr_vault_server["eu-west-1a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_cert_request" "csr_vault_server" {
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mdns_names[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mip_addresses[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mkey_algorithm[0m[0m    = "RSA"
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m  = (sensitive value)

      [32m+[0m [0msubject {
          [32m+[0m [0m[1m[0mcommon_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0morganization[0m[0m = "Vault setup"
        }
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.tls_cert_request.csr_vault_server["eu-west-1b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_cert_request" "csr_vault_server" {
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mdns_names[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mip_addresses[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mkey_algorithm[0m[0m    = "RSA"
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m  = (sensitive value)

      [32m+[0m [0msubject {
          [32m+[0m [0m[1m[0mcommon_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0morganization[0m[0m = "Vault setup"
        }
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.tls_cert_request.csr_vault_server["eu-west-1c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_cert_request" "csr_vault_server" {
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mdns_names[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mip_addresses[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mkey_algorithm[0m[0m    = "RSA"
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m  = (sensitive value)

      [32m+[0m [0msubject {
          [32m+[0m [0m[1m[0mcommon_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0morganization[0m[0m = "Vault setup"
        }
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.tls_locally_signed_cert.vault_cert_sign["eu-west-1a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_locally_signed_cert" "vault_cert_sign" {
      [32m+[0m [0m[1m[0mallowed_uses[0m[0m          = [
          [32m+[0m [0m"digital_signature",
          [32m+[0m [0m"key_encipherment",
          [32m+[0m [0m"key_agreement",
        ]
      [32m+[0m [0m[1m[0mca_cert_pem[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mca_key_algorithm[0m[0m      = "RSA"
      [32m+[0m [0m[1m[0mca_private_key_pem[0m[0m    = (sensitive value)
      [32m+[0m [0m[1m[0mcert_pem[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mearly_renewal_hours[0m[0m   = 0
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mis_ca_certificate[0m[0m     = false
      [32m+[0m [0m[1m[0mready_for_renewal[0m[0m     = true
      [32m+[0m [0m[1m[0mvalidity_end_time[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mvalidity_period_hours[0m[0m = 3600
      [32m+[0m [0m[1m[0mvalidity_start_time[0m[0m   = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.tls_locally_signed_cert.vault_cert_sign["eu-west-1b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_locally_signed_cert" "vault_cert_sign" {
      [32m+[0m [0m[1m[0mallowed_uses[0m[0m          = [
          [32m+[0m [0m"digital_signature",
          [32m+[0m [0m"key_encipherment",
          [32m+[0m [0m"key_agreement",
        ]
      [32m+[0m [0m[1m[0mca_cert_pem[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mca_key_algorithm[0m[0m      = "RSA"
      [32m+[0m [0m[1m[0mca_private_key_pem[0m[0m    = (sensitive value)
      [32m+[0m [0m[1m[0mcert_pem[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mearly_renewal_hours[0m[0m   = 0
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mis_ca_certificate[0m[0m     = false
      [32m+[0m [0m[1m[0mready_for_renewal[0m[0m     = true
      [32m+[0m [0m[1m[0mvalidity_end_time[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mvalidity_period_hours[0m[0m = 3600
      [32m+[0m [0m[1m[0mvalidity_start_time[0m[0m   = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.tls_locally_signed_cert.vault_cert_sign["eu-west-1c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_locally_signed_cert" "vault_cert_sign" {
      [32m+[0m [0m[1m[0mallowed_uses[0m[0m          = [
          [32m+[0m [0m"digital_signature",
          [32m+[0m [0m"key_encipherment",
          [32m+[0m [0m"key_agreement",
        ]
      [32m+[0m [0m[1m[0mca_cert_pem[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mca_key_algorithm[0m[0m      = "RSA"
      [32m+[0m [0m[1m[0mca_private_key_pem[0m[0m    = (sensitive value)
      [32m+[0m [0m[1m[0mcert_pem[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mearly_renewal_hours[0m[0m   = 0
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mis_ca_certificate[0m[0m     = false
      [32m+[0m [0m[1m[0mready_for_renewal[0m[0m     = true
      [32m+[0m [0m[1m[0mvalidity_end_time[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mvalidity_period_hours[0m[0m = 3600
      [32m+[0m [0m[1m[0mvalidity_start_time[0m[0m   = (known after apply)
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.tls_private_key.host[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "host" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 4096
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.tls_private_key.host[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "host" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "ECDSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P384"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.tls_private_key.vault-ssh-key[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "vault-ssh-key" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.tls_private_key.vault_tls_rsa_key["eu-west-1a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "vault_tls_rsa_key" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.tls_private_key.vault_tls_rsa_key["eu-west-1b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "vault_tls_rsa_key" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[1m  # module.vault-cluster-eu.module.vault-cluster-eu.tls_private_key.vault_tls_rsa_key["eu-west-1c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "vault_tls_rsa_key" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.data.aws_subnet.subnets["us-east-2a"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_subnet" "subnets" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mavailable_ip_address_count[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = (known after apply)
      [32m+[0m [0m[1m[0mcustomer_owned_ipv4_pool[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mdefault_for_az[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mmap_customer_owned_ip_on_launch[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                                          = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.data.aws_subnet.subnets["us-east-2b"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_subnet" "subnets" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mavailable_ip_address_count[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = (known after apply)
      [32m+[0m [0m[1m[0mcustomer_owned_ipv4_pool[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mdefault_for_az[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mmap_customer_owned_ip_on_launch[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                                          = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.data.aws_subnet.subnets["us-east-2c"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_subnet" "subnets" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mavailable_ip_address_count[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = (known after apply)
      [32m+[0m [0m[1m[0mcustomer_owned_ipv4_pool[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mdefault_for_az[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mmap_customer_owned_ip_on_launch[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                                          = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.data.cloudinit_config.myhost["us-east-2a"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "cloudinit_config" "myhost" {
      [32m+[0m [0m[1m[0mbase64_encode[0m[0m = true
      [32m+[0m [0m[1m[0mgzip[0m[0m          = true
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mrendered[0m[0m      = (known after apply)

      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                ## template: jinja
                #!/usr/bin/env bash
                
                # Fixing Systemd Unit file because of "Unknown lvalue 'StartLimitIntervalSec' in section 'Unit'"
                cat << EOF > /usr/lib/systemd/system/vault.service
                [Unit]
                Description="HashiCorp Vault - A tool for managing secrets"
                Documentation=https://www.vaultproject.io/docs/
                Requires=network-online.target
                After=network-online.target
                ConditionFileNotEmpty=/etc/vault.d/vault.hcl
                
                [Service]
                User=vault
                Group=vault
                ProtectSystem=full
                ProtectHome=read-only
                PrivateTmp=yes
                PrivateDevices=yes
                SecureBits=keep-caps
                AmbientCapabilities=CAP_IPC_LOCK
                CapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK
                NoNewPrivileges=yes
                ExecStart=/usr/bin/vault server -config=/etc/vault.d/vault.hcl
                ExecReload=/bin/kill --signal HUP $MAINPID
                KillMode=process
                KillSignal=SIGINT
                Restart=on-failure
                RestartSec=5
                TimeoutStopSec=30
                StartLimitInterval=60
                StartLimitBurst=3
                LimitNOFILE=65536
                LimitMEMLOCK=infinity
                StartLimitInterval=30s
                StartLimitBurst=3
                # Adding VAULT_LICENSE_PATH environment in case newer version of Vault > 1.8, so autoloading license can be provided. In case older version of Vault is used < 1.8 the VAULT_LICENSE_PATH env var has not meaning
                Environment="VAULT_LICENSE_PATH=/home/ubuntu/_vaultSetup/license.hclic"
                
                [Install]
                WantedBy=multi-user.target
                EOF
                
                echo "SystemD applied..."|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                
                sudo systemctl daemon-reload
                
                sudo systemctl stop vault
                sudo systemctl start vault
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                #!/bin/bash
                
                # Making working dir for Vault setup
                mkdir -p /home/ubuntu/_vaultSetup
                touch /home/ubuntu/_vaultSetup/keys.json
                touch /home/ubuntu/_vaultSetup/vault_debug
                
                sudo chown -R vault:vault /home/ubuntu/_vaultSetup
                sudo chown ubuntu:ubuntu /home/ubuntu
                
                echo "$(date): Initializing Vault..."|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                
                echo "Initializing Vault..."
                # Wait for Vault to start 
                sleep 1
                
                vault operator init -format=json -recovery-shares=5 -recovery-threshold=3 > /home/ubuntu/_vaultSetup/keys.json
                
                ROOT_TOKEN=`jq -r .root_token /home/ubuntu/_vaultSetup/keys.json`
                
                if [ -z "$ROOT_TOKEN" ]
                then
                    echo "`date`: ROOT_TOKEN is empty !!!"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                    exit 1
                fi
                
                cat << EOF >> /etc/profile.d/vault.sh
                export VAULT_TOKEN=$ROOT_TOKEN
                EOF
                
                
                # Install the Vault license and deletes the license file
                function install_vault_license () {
                  
                curl -s --request PUT --header "X-Vault-Token: $1" --data @/home/ubuntu/_vaultSetup/license.json https://127.0.0.1:8200/v1/sys/license
                
                if [ $? -eq 0 ]
                then
                    #rm /home/ubuntu/_vaultSetup/license.json
                    echo "$(date): Writing license file result: OK"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                else
                    echo "$(date): Writing license file result: FAILED"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                fi
                }
                
                # Wait for Vault to get Initialized with KMS
                sleep 10
                
                # Check if Vault is ready for being licensed
                while true
                do
                  if [[ $(curl -X GET -LI -o /dev/null -w '%{http_code}' -s https://127.0.0.1:8200/v1/sys/health) =~ (200|429|473) ]] # HTTP codes that show if Vault is ready to be used
                  then
                    # Checking if Vault is using autoloading license (version > 1.8) if 404 is returned, autoload is not used, so installing the license via /sys/license endpoint
                    if [[ $(curl -X GET -H "X-Vault-Token: $ROOT_TOKEN" -o /dev/null -w '%{http_code}' -s https://127.0.0.1:8200/v1/sys/license/status) =~ (404) ]]
                    then
                      install_vault_license $ROOT_TOKEN
                      break 2
                    # If autoloading license is used, break from the loop
                    elif [[ $(curl -X GET -LI -H "X-Vault-Token: $ROOT_TOKEN" -o /dev/null -w '%{http_code}' -s https://127.0.0.1:8200/v1/sys/license/status) =~ (200) ]]
                    then
                    {
                      echo "$(date): AUTOLOADING is used!"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                      break 2
                      }
                    fi
                  echo "$(date): Vault is not ready yet!" |sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                  sleep 1
                  fi
                done
                
                ## Add audit file
                #curl -s -X PUT --header "X-Vault-Token: $ROOT_TOKEN" -H "X-Vault-Request: true" -d '{"type":"file","description":"Audit file","options":{"file_path":"/opt/vault/audit.log"},"local":false}' https://127.0.0.1:8200/v1/sys/audit/file
                #
                #if [ $? -eq 0 ].
                #then
                #   echo "$(date): Audit enabled: OK"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                #   retval="OK"
                #else
                #   echo "$(date): Audit enabled: FAILED"|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                #fi
                ##
                
                # For debugging
                echo "$(date): This is an active node, other nodes join to it" |sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text_cloud-config"
        }
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.data.cloudinit_config.myhost["us-east-2b"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "cloudinit_config" "myhost" {
      [32m+[0m [0m[1m[0mbase64_encode[0m[0m = true
      [32m+[0m [0m[1m[0mgzip[0m[0m          = true
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mrendered[0m[0m      = (known after apply)

      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                ## template: jinja
                #!/usr/bin/env bash
                
                # Fixing Systemd Unit file because of "Unknown lvalue 'StartLimitIntervalSec' in section 'Unit'"
                cat << EOF > /usr/lib/systemd/system/vault.service
                [Unit]
                Description="HashiCorp Vault - A tool for managing secrets"
                Documentation=https://www.vaultproject.io/docs/
                Requires=network-online.target
                After=network-online.target
                ConditionFileNotEmpty=/etc/vault.d/vault.hcl
                
                [Service]
                User=vault
                Group=vault
                ProtectSystem=full
                ProtectHome=read-only
                PrivateTmp=yes
                PrivateDevices=yes
                SecureBits=keep-caps
                AmbientCapabilities=CAP_IPC_LOCK
                CapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK
                NoNewPrivileges=yes
                ExecStart=/usr/bin/vault server -config=/etc/vault.d/vault.hcl
                ExecReload=/bin/kill --signal HUP $MAINPID
                KillMode=process
                KillSignal=SIGINT
                Restart=on-failure
                RestartSec=5
                TimeoutStopSec=30
                StartLimitInterval=60
                StartLimitBurst=3
                LimitNOFILE=65536
                LimitMEMLOCK=infinity
                StartLimitInterval=30s
                StartLimitBurst=3
                # Adding VAULT_LICENSE_PATH environment in case newer version of Vault > 1.8, so autoloading license can be provided. In case older version of Vault is used < 1.8 the VAULT_LICENSE_PATH env var has not meaning
                Environment="VAULT_LICENSE_PATH=/home/ubuntu/_vaultSetup/license.hclic"
                
                [Install]
                WantedBy=multi-user.target
                EOF
                
                echo "SystemD applied..."|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                
                sudo systemctl daemon-reload
                
                sudo systemctl stop vault
                sudo systemctl start vault
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                #!/usr/bin/env bash
                
                # This does nothing for now
                
                # No need to write the license to each node, it is stored in the backend storage
                
                # Debugging purposes
                echo "$(date) - This is a follower node, it joins to active node" s|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text_cloud-config"
        }
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.data.cloudinit_config.myhost["us-east-2c"][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "cloudinit_config" "myhost" {
      [32m+[0m [0m[1m[0mbase64_encode[0m[0m = true
      [32m+[0m [0m[1m[0mgzip[0m[0m          = true
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mrendered[0m[0m      = (known after apply)

      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                ## template: jinja
                #!/usr/bin/env bash
                
                # Fixing Systemd Unit file because of "Unknown lvalue 'StartLimitIntervalSec' in section 'Unit'"
                cat << EOF > /usr/lib/systemd/system/vault.service
                [Unit]
                Description="HashiCorp Vault - A tool for managing secrets"
                Documentation=https://www.vaultproject.io/docs/
                Requires=network-online.target
                After=network-online.target
                ConditionFileNotEmpty=/etc/vault.d/vault.hcl
                
                [Service]
                User=vault
                Group=vault
                ProtectSystem=full
                ProtectHome=read-only
                PrivateTmp=yes
                PrivateDevices=yes
                SecureBits=keep-caps
                AmbientCapabilities=CAP_IPC_LOCK
                CapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK
                NoNewPrivileges=yes
                ExecStart=/usr/bin/vault server -config=/etc/vault.d/vault.hcl
                ExecReload=/bin/kill --signal HUP $MAINPID
                KillMode=process
                KillSignal=SIGINT
                Restart=on-failure
                RestartSec=5
                TimeoutStopSec=30
                StartLimitInterval=60
                StartLimitBurst=3
                LimitNOFILE=65536
                LimitMEMLOCK=infinity
                StartLimitInterval=30s
                StartLimitBurst=3
                # Adding VAULT_LICENSE_PATH environment in case newer version of Vault > 1.8, so autoloading license can be provided. In case older version of Vault is used < 1.8 the VAULT_LICENSE_PATH env var has not meaning
                Environment="VAULT_LICENSE_PATH=/home/ubuntu/_vaultSetup/license.hclic"
                
                [Install]
                WantedBy=multi-user.target
                EOF
                
                echo "SystemD applied..."|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
                
                sudo systemctl daemon-reload
                
                sudo systemctl stop vault
                sudo systemctl start vault
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/cloud-config"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = <<-EOT
                #!/usr/bin/env bash
                
                # This does nothing for now
                
                # No need to write the license to each node, it is stored in the backend storage
                
                # Debugging purposes
                echo "$(date) - This is a follower node, it joins to active node" s|sudo tee -a /home/ubuntu/_vaultSetup/vault_debug
            EOT
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text/x-shellscript"
        }
      [32m+[0m [0mpart {
          [32m+[0m [0m[1m[0mcontent[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mcontent_type[0m[0m = "text_cloud-config"
        }
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_iam_instance_profile.vault-instance-profile[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_instance_profile" "vault-instance-profile" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mcreate_date[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mrole[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0munique_id[0m[0m   = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_iam_policy.vault_aws_auth_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vault_aws_auth_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Policy that provides the needed permissions for the Vault server to verify users via the AWS authentication method (iam type)"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"iam:GetUser",
                          [32m+[0m [0m"iam:GetRole",
                          [32m+[0m [0m"iam:GetInstanceProfile",
                          [32m+[0m [0m"ec2:DescribeInstances",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "vaultPolicyDocumentVaultAWSAuth"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_iam_policy.vault_aws_secret_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vault_aws_secret_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Policy that provides the needed permissions for the Vault server's aws secrets engine to function properly"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"iam:RemoveUserFromGroup",
                          [32m+[0m [0m"iam:PutUserPolicy",
                          [32m+[0m [0m"iam:ListUserPolicies",
                          [32m+[0m [0m"iam:ListGroupsForUser",
                          [32m+[0m [0m"iam:ListAttachedUserPolicies",
                          [32m+[0m [0m"iam:ListAccessKeys",
                          [32m+[0m [0m"iam:DetachUserPolicy",
                          [32m+[0m [0m"iam:DeleteUserPolicy",
                          [32m+[0m [0m"iam:DeleteUser",
                          [32m+[0m [0m"iam:DeleteAccessKey",
                          [32m+[0m [0m"iam:CreateUser",
                          [32m+[0m [0m"iam:CreateAccessKey",
                          [32m+[0m [0m"iam:AttachUserPolicy",
                          [32m+[0m [0m"iam:AddUserToGroup",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "arn:aws:iam::925007469123:user/vault-*"
                      [32m+[0m [0mSid      = "vaultPolicyDocumentVaultAWSSecret"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_iam_policy.vault_kms_auto_unseal_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vault_kms_auto_unseal_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Policy that provides the needed KMS permission for Vault server's auto unseal feature"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"kms:Encrypt",
                          [32m+[0m [0m"kms:DescribeKey",
                          [32m+[0m [0m"kms:Decrypt",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "vaultPolicyDocumentKMSUnseal"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_iam_policy.vault_raft_auto_join_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vault_raft_auto_join_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Policy that provides the needed EC2 DescribeInstances permissions in order for the Raft auto join feature to work in AWS environment"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = "ec2:DescribeInstances"
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "vaultPolicyDocumentRaftAutoJoin"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_iam_policy.vault_s3_raft_snapshot_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vault_s3_raft_snapshot_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Policy that provides the needed permissions to access S3 bucket in order to store Raft snapsahot"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:PutObject",
                          [32m+[0m [0m"s3:ListBucket",
                          [32m+[0m [0m"s3:DeleteObject",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "vaultPolicyDocumentS3snapshot"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_iam_role.vault_server_role[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "vault_server_role" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "ec2.amazonaws.com"
                        }
                      [32m+[0m [0mSid       = ""
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_instance.vault["us-east-2a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_instance" "vault" {
      [32m+[0m [0m[1m[0mami[0m[0m                                  = "ami-05803413c51f242b7"
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0massociate_public_ip_address[0m[0m          = true
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcpu_core_count[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mcpu_threads_per_core[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_stop[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_termination[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mebs_optimized[0m[0m                        = false
      [32m+[0m [0m[1m[0mget_password_data[0m[0m                    = false
      [32m+[0m [0m[1m[0mhost_id[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0miam_instance_profile[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_initiated_shutdown_behavior[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0minstance_state[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0minstance_type[0m[0m                        = "t3.micro"
      [32m+[0m [0m[1m[0mipv6_address_count[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mipv6_addresses[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mmonitoring[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mpassword_data[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mplacement_group[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mplacement_partition_number[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mprimary_network_interface_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0msecondary_private_ips[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0msource_dest_check[0m[0m                    = true
      [32m+[0m [0m[1m[0msubnet_id[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtenancy[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0muser_data[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0muser_data_base64[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0muser_data_replace_on_change[0m[0m          = false
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m               = (known after apply)

      [32m+[0m [0mcapacity_reservation_specification {
          [32m+[0m [0m[1m[0mcapacity_reservation_preference[0m[0m = (known after apply)

          [32m+[0m [0mcapacity_reservation_target {
              [32m+[0m [0m[1m[0mcapacity_reservation_id[0m[0m                 = (known after apply)
              [32m+[0m [0m[1m[0mcapacity_reservation_resource_group_arn[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0mebs_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0msnapshot_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }

      [32m+[0m [0menclave_options {
          [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
        }

      [32m+[0m [0mephemeral_block_device {
          [32m+[0m [0m[1m[0mdevice_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mno_device[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mvirtual_name[0m[0m = (known after apply)
        }

      [32m+[0m [0mmaintenance_options {
          [32m+[0m [0m[1m[0mauto_recovery[0m[0m = (known after apply)
        }

      [32m+[0m [0mmetadata_options {
          [32m+[0m [0m[1m[0mhttp_endpoint[0m[0m               = (known after apply)
          [32m+[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhttp_tokens[0m[0m                 = (known after apply)
          [32m+[0m [0m[1m[0minstance_metadata_tags[0m[0m      = (known after apply)
        }

      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_index[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_card_index[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m  = (known after apply)
        }

      [32m+[0m [0mprivate_dns_name_options {
          [32m+[0m [0m[1m[0menable_resource_name_dns_a_record[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhostname_type[0m[0m                        = (known after apply)
        }

      [32m+[0m [0mroot_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_instance.vault["us-east-2b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_instance" "vault" {
      [32m+[0m [0m[1m[0mami[0m[0m                                  = "ami-05803413c51f242b7"
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0massociate_public_ip_address[0m[0m          = true
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcpu_core_count[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mcpu_threads_per_core[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_stop[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_termination[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mebs_optimized[0m[0m                        = false
      [32m+[0m [0m[1m[0mget_password_data[0m[0m                    = false
      [32m+[0m [0m[1m[0mhost_id[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0miam_instance_profile[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_initiated_shutdown_behavior[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0minstance_state[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0minstance_type[0m[0m                        = "t3.micro"
      [32m+[0m [0m[1m[0mipv6_address_count[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mipv6_addresses[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mmonitoring[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mpassword_data[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mplacement_group[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mplacement_partition_number[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mprimary_network_interface_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0msecondary_private_ips[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0msource_dest_check[0m[0m                    = true
      [32m+[0m [0m[1m[0msubnet_id[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtenancy[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0muser_data[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0muser_data_base64[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0muser_data_replace_on_change[0m[0m          = false
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m               = (known after apply)

      [32m+[0m [0mcapacity_reservation_specification {
          [32m+[0m [0m[1m[0mcapacity_reservation_preference[0m[0m = (known after apply)

          [32m+[0m [0mcapacity_reservation_target {
              [32m+[0m [0m[1m[0mcapacity_reservation_id[0m[0m                 = (known after apply)
              [32m+[0m [0m[1m[0mcapacity_reservation_resource_group_arn[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0mebs_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0msnapshot_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }

      [32m+[0m [0menclave_options {
          [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
        }

      [32m+[0m [0mephemeral_block_device {
          [32m+[0m [0m[1m[0mdevice_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mno_device[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mvirtual_name[0m[0m = (known after apply)
        }

      [32m+[0m [0mmaintenance_options {
          [32m+[0m [0m[1m[0mauto_recovery[0m[0m = (known after apply)
        }

      [32m+[0m [0mmetadata_options {
          [32m+[0m [0m[1m[0mhttp_endpoint[0m[0m               = (known after apply)
          [32m+[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhttp_tokens[0m[0m                 = (known after apply)
          [32m+[0m [0m[1m[0minstance_metadata_tags[0m[0m      = (known after apply)
        }

      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_index[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_card_index[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m  = (known after apply)
        }

      [32m+[0m [0mprivate_dns_name_options {
          [32m+[0m [0m[1m[0menable_resource_name_dns_a_record[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhostname_type[0m[0m                        = (known after apply)
        }

      [32m+[0m [0mroot_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_instance.vault["us-east-2c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_instance" "vault" {
      [32m+[0m [0m[1m[0mami[0m[0m                                  = "ami-05803413c51f242b7"
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0massociate_public_ip_address[0m[0m          = true
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcpu_core_count[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mcpu_threads_per_core[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_stop[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_termination[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mebs_optimized[0m[0m                        = false
      [32m+[0m [0m[1m[0mget_password_data[0m[0m                    = false
      [32m+[0m [0m[1m[0mhost_id[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0miam_instance_profile[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_initiated_shutdown_behavior[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0minstance_state[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0minstance_type[0m[0m                        = "t3.micro"
      [32m+[0m [0m[1m[0mipv6_address_count[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mipv6_addresses[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mmonitoring[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mpassword_data[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mplacement_group[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mplacement_partition_number[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mprimary_network_interface_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0msecondary_private_ips[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0msource_dest_check[0m[0m                    = true
      [32m+[0m [0m[1m[0msubnet_id[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtenancy[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0muser_data[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0muser_data_base64[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0muser_data_replace_on_change[0m[0m          = false
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m               = (known after apply)

      [32m+[0m [0mcapacity_reservation_specification {
          [32m+[0m [0m[1m[0mcapacity_reservation_preference[0m[0m = (known after apply)

          [32m+[0m [0mcapacity_reservation_target {
              [32m+[0m [0m[1m[0mcapacity_reservation_id[0m[0m                 = (known after apply)
              [32m+[0m [0m[1m[0mcapacity_reservation_resource_group_arn[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0mebs_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0msnapshot_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }

      [32m+[0m [0menclave_options {
          [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
        }

      [32m+[0m [0mephemeral_block_device {
          [32m+[0m [0m[1m[0mdevice_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mno_device[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mvirtual_name[0m[0m = (known after apply)
        }

      [32m+[0m [0mmaintenance_options {
          [32m+[0m [0m[1m[0mauto_recovery[0m[0m = (known after apply)
        }

      [32m+[0m [0mmetadata_options {
          [32m+[0m [0m[1m[0mhttp_endpoint[0m[0m               = (known after apply)
          [32m+[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhttp_tokens[0m[0m                 = (known after apply)
          [32m+[0m [0m[1m[0minstance_metadata_tags[0m[0m      = (known after apply)
        }

      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_index[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_card_index[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m  = (known after apply)
        }

      [32m+[0m [0mprivate_dns_name_options {
          [32m+[0m [0m[1m[0menable_resource_name_dns_a_record[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhostname_type[0m[0m                        = (known after apply)
        }

      [32m+[0m [0mroot_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_internet_gateway.gw[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_internet_gateway" "gw" {
      [32m+[0m [0m[1m[0marn[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m   = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_key_pair.vault-ssh-key[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_key_pair" "vault-ssh-key" {
      [32m+[0m [0m[1m[0marn[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mfingerprint[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mkey_name_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mkey_pair_id[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m        = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_kms_key.vault[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_kms_key" "vault" {
      [32m+[0m [0m[1m[0marn[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0mbypass_policy_lockout_safety_check[0m[0m = false
      [32m+[0m [0m[1m[0mcustomer_master_key_spec[0m[0m           = "SYMMETRIC_DEFAULT"
      [32m+[0m [0m[1m[0mdeletion_window_in_days[0m[0m            = 20
      [32m+[0m [0m[1m[0mdescription[0m[0m                        = "Vault unseal key us-east-2"
      [32m+[0m [0m[1m[0menable_key_rotation[0m[0m                = false
      [32m+[0m [0m[1m[0mid[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mis_enabled[0m[0m                         = true
      [32m+[0m [0m[1m[0mkey_id[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mkey_usage[0m[0m                          = "ENCRYPT_DECRYPT"
      [32m+[0m [0m[1m[0mmulti_region[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mpolicy[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                               = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                           = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_route_table.route[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table" "route" {
      [32m+[0m [0m[1m[0marn[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpropagating_vgws[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroute[0m[0m            = [
          [32m+[0m [0m{
              [32m+[0m [0mcarrier_gateway_id         = ""
              [32m+[0m [0mcidr_block                 = "0.0.0.0/0"
              [32m+[0m [0mcore_network_arn           = ""
              [32m+[0m [0mdestination_prefix_list_id = ""
              [32m+[0m [0megress_only_gateway_id     = ""
              [32m+[0m [0mgateway_id                 = (known after apply)
              [32m+[0m [0minstance_id                = ""
              [32m+[0m [0mipv6_cidr_block            = ""
              [32m+[0m [0mlocal_gateway_id           = ""
              [32m+[0m [0mnat_gateway_id             = ""
              [32m+[0m [0mnetwork_interface_id       = ""
              [32m+[0m [0mtransit_gateway_id         = ""
              [32m+[0m [0mvpc_endpoint_id            = ""
              [32m+[0m [0mvpc_peering_connection_id  = ""
            },
        ]
      [32m+[0m [0m[1m[0mtags[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m           = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_route_table_association.route["us-east-2a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "route" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_route_table_association.route["us-east-2b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "route" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_route_table_association.route["us-east-2c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "route" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_s3_bucket.raft_snapshot_bucket[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_bucket" "raft_snapshot_bucket" {
      [32m+[0m [0m[1m[0macceleration_status[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0macl[0m[0m                         = "private"
      [32m+[0m [0m[1m[0marn[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mbucket[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mbucket_domain_name[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mbucket_regional_domain_name[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m               = true
      [32m+[0m [0m[1m[0mhosted_zone_id[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mobject_lock_enabled[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mregion[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mrequest_payer[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mwebsite_domain[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mwebsite_endpoint[0m[0m            = (known after apply)

      [32m+[0m [0mcors_rule {
          [32m+[0m [0m[1m[0mallowed_headers[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallowed_methods[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallowed_origins[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mexpose_headers[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mmax_age_seconds[0m[0m = (known after apply)
        }

      [32m+[0m [0mgrant {
          [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mpermissions[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mtype[0m[0m        = (known after apply)
          [32m+[0m [0m[1m[0muri[0m[0m         = (known after apply)
        }

      [32m+[0m [0mlifecycle_rule {
          [32m+[0m [0m[1m[0mabort_incomplete_multipart_upload_days[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0menabled[0m[0m                                = (known after apply)
          [32m+[0m [0m[1m[0mid[0m[0m                                     = (known after apply)
          [32m+[0m [0m[1m[0mprefix[0m[0m                                 = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                                   = (known after apply)

          [32m+[0m [0mexpiration {
              [32m+[0m [0m[1m[0mdate[0m[0m                         = (known after apply)
              [32m+[0m [0m[1m[0mdays[0m[0m                         = (known after apply)
              [32m+[0m [0m[1m[0mexpired_object_delete_marker[0m[0m = (known after apply)
            }

          [32m+[0m [0mnoncurrent_version_expiration {
              [32m+[0m [0m[1m[0mdays[0m[0m = (known after apply)
            }

          [32m+[0m [0mnoncurrent_version_transition {
              [32m+[0m [0m[1m[0mdays[0m[0m          = (known after apply)
              [32m+[0m [0m[1m[0mstorage_class[0m[0m = (known after apply)
            }

          [32m+[0m [0mtransition {
              [32m+[0m [0m[1m[0mdate[0m[0m          = (known after apply)
              [32m+[0m [0m[1m[0mdays[0m[0m          = (known after apply)
              [32m+[0m [0m[1m[0mstorage_class[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0mlogging {
          [32m+[0m [0m[1m[0mtarget_bucket[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mtarget_prefix[0m[0m = (known after apply)
        }

      [32m+[0m [0mobject_lock_configuration {
          [32m+[0m [0m[1m[0mobject_lock_enabled[0m[0m = (known after apply)

          [32m+[0m [0mrule {
              [32m+[0m [0mdefault_retention {
                  [32m+[0m [0m[1m[0mdays[0m[0m  = (known after apply)
                  [32m+[0m [0m[1m[0mmode[0m[0m  = (known after apply)
                  [32m+[0m [0m[1m[0myears[0m[0m = (known after apply)
                }
            }
        }

      [32m+[0m [0mreplication_configuration {
          [32m+[0m [0m[1m[0mrole[0m[0m = (known after apply)

          [32m+[0m [0mrules {
              [32m+[0m [0m[1m[0mdelete_marker_replication_status[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mid[0m[0m                               = (known after apply)
              [32m+[0m [0m[1m[0mprefix[0m[0m                           = (known after apply)
              [32m+[0m [0m[1m[0mpriority[0m[0m                         = (known after apply)
              [32m+[0m [0m[1m[0mstatus[0m[0m                           = (known after apply)

              [32m+[0m [0mdestination {
                  [32m+[0m [0m[1m[0maccount_id[0m[0m         = (known after apply)
                  [32m+[0m [0m[1m[0mbucket[0m[0m             = (known after apply)
                  [32m+[0m [0m[1m[0mreplica_kms_key_id[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0mstorage_class[0m[0m      = (known after apply)

                  [32m+[0m [0maccess_control_translation {
                      [32m+[0m [0m[1m[0mowner[0m[0m = (known after apply)
                    }

                  [32m+[0m [0mmetrics {
                      [32m+[0m [0m[1m[0mminutes[0m[0m = (known after apply)
                      [32m+[0m [0m[1m[0mstatus[0m[0m  = (known after apply)
                    }

                  [32m+[0m [0mreplication_time {
                      [32m+[0m [0m[1m[0mminutes[0m[0m = (known after apply)
                      [32m+[0m [0m[1m[0mstatus[0m[0m  = (known after apply)
                    }
                }

              [32m+[0m [0mfilter {
                  [32m+[0m [0m[1m[0mprefix[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0mtags[0m[0m   = (known after apply)
                }

              [32m+[0m [0msource_selection_criteria {
                  [32m+[0m [0msse_kms_encrypted_objects {
                      [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
                    }
                }
            }
        }

      [32m+[0m [0mserver_side_encryption_configuration {
          [32m+[0m [0mrule {
              [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m = (known after apply)

              [32m+[0m [0mapply_server_side_encryption_by_default {
                  [32m+[0m [0m[1m[0mkms_master_key_id[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0msse_algorithm[0m[0m     = (known after apply)
                }
            }
        }

      [32m+[0m [0mversioning {
          [32m+[0m [0m[1m[0menabled[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mmfa_delete[0m[0m = (known after apply)
        }

      [32m+[0m [0mwebsite {
          [32m+[0m [0m[1m[0merror_document[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mindex_document[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mredirect_all_requests_to[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mrouting_rules[0m[0m            = (known after apply)
        }
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_security_group.vault[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "vault" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "SG for Vault SSH and Vault traffic"
      [32m+[0m [0m[1m[0megress[0m[0m                 = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "-1"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 0
            },
        ]
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 8200
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 8200
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 8201
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 8201
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"145.101.18.82/32",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 22
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 22
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"145.101.18.82/32",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 8
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "icmp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 0
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = []
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "icmp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = true
              [32m+[0m [0mto_port          = 254
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = []
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = true
              [32m+[0m [0mto_port          = 65535
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = []
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "udp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = true
              [32m+[0m [0mto_port          = 65535
            },
        ]
      [32m+[0m [0m[1m[0mname[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_subnet.public_subnet["us-east-2a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "public_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "us-east-2a"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "192.168.0.0/28"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = true
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_subnet.public_subnet["us-east-2b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "public_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "us-east-2b"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "192.168.0.16/28"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = true
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_subnet.public_subnet["us-east-2c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "public_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "us-east-2c"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "192.168.0.32/28"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = true
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.aws_vpc.vpc[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_vpc" "vpc" {
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                           = "192.168.0.0/24"
      [32m+[0m [0m[1m[0mdefault_network_acl_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_route_table_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_security_group_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mdhcp_options_id[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0menable_classiclink[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0menable_classiclink_dns_support[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0menable_dns_hostnames[0m[0m                 = true
      [32m+[0m [0m[1m[0menable_dns_support[0m[0m                   = true
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_tenancy[0m[0m                     = "default"
      [32m+[0m [0m[1m[0mipv6_association_id[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_network_border_group[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mmain_route_table_id[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.null_resource.add_to_known_hosts["us-east-2a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "null_resource" "add_to_known_hosts" {
      [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.null_resource.add_to_known_hosts["us-east-2b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "null_resource" "add_to_known_hosts" {
      [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.null_resource.add_to_known_hosts["us-east-2c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "null_resource" "add_to_known_hosts" {
      [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.null_resource.main[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "null_resource" "main" {
      [32m+[0m [0m[1m[0mid[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mtriggers[0m[0m = {
          [32m+[0m [0m"region" = "us-east-2"
        }
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.tls_cert_request.csr_vault_server["us-east-2a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_cert_request" "csr_vault_server" {
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mdns_names[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mip_addresses[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mkey_algorithm[0m[0m    = "RSA"
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m  = (sensitive value)

      [32m+[0m [0msubject {
          [32m+[0m [0m[1m[0mcommon_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0morganization[0m[0m = "Vault setup"
        }
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.tls_cert_request.csr_vault_server["us-east-2b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_cert_request" "csr_vault_server" {
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mdns_names[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mip_addresses[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mkey_algorithm[0m[0m    = "RSA"
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m  = (sensitive value)

      [32m+[0m [0msubject {
          [32m+[0m [0m[1m[0mcommon_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0morganization[0m[0m = "Vault setup"
        }
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.tls_cert_request.csr_vault_server["us-east-2c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_cert_request" "csr_vault_server" {
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mdns_names[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mip_addresses[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mkey_algorithm[0m[0m    = "RSA"
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m  = (sensitive value)

      [32m+[0m [0msubject {
          [32m+[0m [0m[1m[0mcommon_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0morganization[0m[0m = "Vault setup"
        }
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.tls_locally_signed_cert.vault_cert_sign["us-east-2a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_locally_signed_cert" "vault_cert_sign" {
      [32m+[0m [0m[1m[0mallowed_uses[0m[0m          = [
          [32m+[0m [0m"digital_signature",
          [32m+[0m [0m"key_encipherment",
          [32m+[0m [0m"key_agreement",
        ]
      [32m+[0m [0m[1m[0mca_cert_pem[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mca_key_algorithm[0m[0m      = "RSA"
      [32m+[0m [0m[1m[0mca_private_key_pem[0m[0m    = (sensitive value)
      [32m+[0m [0m[1m[0mcert_pem[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mearly_renewal_hours[0m[0m   = 0
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mis_ca_certificate[0m[0m     = false
      [32m+[0m [0m[1m[0mready_for_renewal[0m[0m     = true
      [32m+[0m [0m[1m[0mvalidity_end_time[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mvalidity_period_hours[0m[0m = 3600
      [32m+[0m [0m[1m[0mvalidity_start_time[0m[0m   = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.tls_locally_signed_cert.vault_cert_sign["us-east-2b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_locally_signed_cert" "vault_cert_sign" {
      [32m+[0m [0m[1m[0mallowed_uses[0m[0m          = [
          [32m+[0m [0m"digital_signature",
          [32m+[0m [0m"key_encipherment",
          [32m+[0m [0m"key_agreement",
        ]
      [32m+[0m [0m[1m[0mca_cert_pem[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mca_key_algorithm[0m[0m      = "RSA"
      [32m+[0m [0m[1m[0mca_private_key_pem[0m[0m    = (sensitive value)
      [32m+[0m [0m[1m[0mcert_pem[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mearly_renewal_hours[0m[0m   = 0
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mis_ca_certificate[0m[0m     = false
      [32m+[0m [0m[1m[0mready_for_renewal[0m[0m     = true
      [32m+[0m [0m[1m[0mvalidity_end_time[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mvalidity_period_hours[0m[0m = 3600
      [32m+[0m [0m[1m[0mvalidity_start_time[0m[0m   = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.tls_locally_signed_cert.vault_cert_sign["us-east-2c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_locally_signed_cert" "vault_cert_sign" {
      [32m+[0m [0m[1m[0mallowed_uses[0m[0m          = [
          [32m+[0m [0m"digital_signature",
          [32m+[0m [0m"key_encipherment",
          [32m+[0m [0m"key_agreement",
        ]
      [32m+[0m [0m[1m[0mca_cert_pem[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mca_key_algorithm[0m[0m      = "RSA"
      [32m+[0m [0m[1m[0mca_private_key_pem[0m[0m    = (sensitive value)
      [32m+[0m [0m[1m[0mcert_pem[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mcert_request_pem[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mearly_renewal_hours[0m[0m   = 0
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mis_ca_certificate[0m[0m     = false
      [32m+[0m [0m[1m[0mready_for_renewal[0m[0m     = true
      [32m+[0m [0m[1m[0mvalidity_end_time[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mvalidity_period_hours[0m[0m = 3600
      [32m+[0m [0m[1m[0mvalidity_start_time[0m[0m   = (known after apply)
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.tls_private_key.host[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "host" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 4096
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.tls_private_key.host[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "host" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "ECDSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P384"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.tls_private_key.vault-ssh-key[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "vault-ssh-key" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.tls_private_key.vault_tls_rsa_key["us-east-2a"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "vault_tls_rsa_key" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.tls_private_key.vault_tls_rsa_key["us-east-2b"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "vault_tls_rsa_key" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[1m  # module.vault-cluster-us.module.vault-cluster-us.tls_private_key.vault_tls_rsa_key["us-east-2c"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "tls_private_key" "vault_tls_rsa_key" {
      [32m+[0m [0m[1m[0malgorithm[0m[0m                     = "RSA"
      [32m+[0m [0m[1m[0mecdsa_curve[0m[0m                   = "P224"
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mprivate_key_openssh[0m[0m           = (sensitive value)
      [32m+[0m [0m[1m[0mprivate_key_pem[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_md5[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_fingerprint_sha256[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_openssh[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_key_pem[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mrsa_bits[0m[0m                      = 2048
    }

[0m[1mPlan:[0m 129 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mcurrent-env-id[0m[0m              = (known after apply)
  [32m+[0m [0m[1m[0mvault-cluster-ap-public-ips[0m[0m = [
      [32m+[0m [0m(known after apply),
      [32m+[0m [0m(known after apply),
      [32m+[0m [0m(known after apply),
    ]
  [32m+[0m [0m[1m[0mvault-cluster-eu-public-ips[0m[0m = [
      [32m+[0m [0m(known after apply),
      [32m+[0m [0m(known after apply),
      [32m+[0m [0m(known after apply),
    ]
  [32m+[0m [0m[1m[0mvault-cluster-us-public-ips[0m[0m = [
      [32m+[0m [0m(known after apply),
      [32m+[0m [0m(known after apply),
      [32m+[0m [0m(known after apply),
    ]
[33m╷[0m[0m
[33m│[0m [0m[1m[33mWarning: [0m[0m[1mReference to undefined provider[0m
[33m│[0m [0m
[33m│[0m [0m[0m  on modules/module_ap/main_ap.tf line 23, in module "vault-cluster-ap":
[33m│[0m [0m  23:     [4maws[0m = aws.ap-provider[0m
[33m│[0m [0m
[33m│[0m [0mThere is no explicit declaration for local provider name "aws" in module.vault-cluster-ap.module.vault-cluster-ap, so Terraform is assuming you mean to
[33m│[0m [0mpass a configuration for "hashicorp/aws".
[33m│[0m [0m
[33m│[0m [0mIf you also control the child module, add a required_providers entry named "aws" with the source address "hashicorp/aws".
[33m│[0m [0m
[33m│[0m [0m(and 2 more similar warnings elsewhere)
[33m╵[0m[0m
[33m╷[0m[0m
[33m│[0m [0m[1m[33mWarning: [0m[0m[1mArgument is deprecated[0m
[33m│[0m [0m
[33m│[0m [0m[0m  with module.vault_common_ca.tls_self_signed_cert.ca_cert,
[33m│[0m [0m  on modules/sub-modules/common_vault_ca/common_vault_ca.tf line 8, in resource "tls_self_signed_cert" "ca_cert":
[33m│[0m [0m   8:   key_algorithm   = [4m"RSA"[0m # Using RSA[0m
[33m│[0m [0m
[33m│[0m [0mThis is now ignored, as the key algorithm is inferred from the `private_key_pem`.
[33m│[0m [0m
[33m│[0m [0m(and 31 more similar warnings elsewhere)
[33m╵[0m[0m
[33m╷[0m[0m
[33m│[0m [0m[1m[33mWarning: [0m[0m[1mRedundant empty provider block[0m
[33m│[0m [0m
[33m│[0m [0m[0m  on modules/sub-modules/vpc_peering/providers.tf line 1:
[33m│[0m [0m   1: [4mprovider "aws"[0m {[0m
[33m│[0m [0m
[33m│[0m [0mEarlier versions of Terraform used empty provider blocks ("proxy provider configurations") for child modules to declare their need to be passed a
[33m│[0m [0mprovider configuration by their callers. That approach was ambiguous and is now deprecated.
[33m│[0m [0m
[33m│[0m [0mIf you control this module, you can migrate to the new declaration syntax by removing all of the empty provider "aws" blocks and then adding or updating
[33m│[0m [0man entry like the following to the required_providers block of module.inter_vpc_peering:
[33m│[0m [0m    aws = {
[33m│[0m [0m      source = "hashicorp/aws"
[33m│[0m [0m      configuration_aliases = [
[33m│[0m [0m        aws.dr_provider,
[33m│[0m [0m        aws.hq_provider,
[33m│[0m [0m        aws.pr_provider,
[33m│[0m [0m      ]
[33m│[0m [0m    }
[33m╵[0m[0m
[90m
─────────────────────────────────────────────────────────────────────────────[0m

Saved the plan to: 3xVault.plan

To perform exactly these actions, run the following command to apply:
    terraform apply "3xVault.plan"
